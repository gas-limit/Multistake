{
	"id": "ef59de9c18ddfb7124f4e56ebe2f42b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity-examples-main/contracts/Multistake/PolygonHub.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\npragma abicoder v2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../interfaces/IStargateRouter.sol\";\r\nimport \"../interfaces/IStargateReceiver.sol\";\r\nimport \"../interfaces/IStargateWidget.sol\";\r\n\r\nimport \"./interfaces/IRegistry.sol\";\r\n\r\n\r\ncontract PolygonHub is IStargateReceiver {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public stargateRouter;      // an IStargateRouter instance\r\n    address public widgetSwap;\r\n    bytes2 public partnerId;\r\n\r\n    //phantom stargate chain id: 10112\r\n    //mumbai stargate chain id: 10109\r\n    uint16 GoerliId = 10121;\r\n    uint16 FujiId = 10106;\r\n\r\n    address USDC = 0xDf0360Ad8C5ccf25095Aa97ee5F2785c8d848620;\r\n\r\n    address destinationAddress;\r\n\r\n    address registryAddress;\r\n\r\n    event ReceivedOnDestination(address token, uint qty);\r\n\r\n    constructor(address _stargateRouter, address _destinationAddress, address _registryAddress) {\r\n        stargateRouter = _stargateRouter;\r\n        destinationAddress = _destinationAddress;\r\n        registryAddress = _registryAddress;\r\n\r\n    }\r\n\r\n    // 1. Swap USDC for 1 MATIC\r\n\r\n    \r\n    \r\n\r\n\r\n    // 2. bridge USDC to multiple chains\r\n\r\n    function bridgeAndSwap(uint256 amount, bytes calldata someMsg) public payable  {\r\n        require(msg.value > 0, \"stargate requires a msg.value to pay crosschain message\");\r\n        //require swap > 0\r\n\r\n        // encode payload data to send to destination contract, which it will handle with sgReceive()\r\n        // bytes memory data = abi.encode(to);\r\n\r\n        IERC20(USDC).safeTransferFrom(msg.sender, address(this), amount);\r\n        IERC20(USDC).safeApprove(address(stargateRouter), amount);\r\n\r\n        uint16 polygonId = IRegistry(registryAddress).getStargateId(block.chainid);\r\n\r\n        \r\n\r\n        IStargateRouter(stargateRouter).swap{value:msg.value}(\r\n            FujiId,                                     // the destination chain id\r\n             1, //USDC                                      // the source Stargate poolId\r\n             1, //USDC                                     // the destination Stargate poolId\r\n             payable(msg.sender),                            // refund adddress. if msg.sender pays too much gas, return extra eth\r\n            amount,                                            // total tokens to send to destination chain\r\n             0,    // 0 for now                                          // min amount allowed out\r\n             IStargateRouter.lzTxObj(200000, 0, \"0x\"),       // default lzTxObj\r\n             abi.encodePacked(destinationAddress),         // destination address, the sgReceive() implementer\r\n             someMsg                           // bytes payload\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    // 3. stake on LSD protocol\r\n\r\n    \r\n\r\n\r\n    // 4. loan LSD on lending market\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //-----------------------------------------------------------------------------------------------------------------------\r\n    // sgReceive() - the destination contract must implement this function to receive the tokens and payload\r\n    function sgReceive(uint16 /*_chainId*/, bytes memory /*_srcAddress*/, uint /*_nonce*/, address _token, uint amountLD, bytes memory _payload) override external {\r\n        // require(msg.sender == address(stargateRouter), \"only stargate router can call sgReceive!\");\r\n        // (address _toAddr) = abi.decode(_payload, (address));\r\n        // // send transfer _token/amountLD to _toAddr\r\n        // IERC20(_token).transfer(_toAddr, amountLD);\r\n        // emit ReceivedOnDestination(_token, amountLD);\r\n    }\r\n\r\n}"
			},
			"solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\ninterface IRegistry {\r\n    function getStargateId(uint256 chainId) external view returns (uint16);\r\n}\r\n"
			},
			"solidity-examples-main/contracts/interfaces/IStargateWidget.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\npragma abicoder v2;\n\nimport \"../interfaces/IStargateRouter.sol\";\n\ninterface IStargateWidget {\n    struct FeeObj {\n        uint256 tenthBps; // bps is to an extra decimal place\n        address feeCollector;\n    }\n\n    event WidgetSwapped(bytes2 indexed partnerId, uint256 tenthBps, uint256 widgetFee);\n    event PartnerSwap(bytes2 indexed partnerId);\n\n    function partnerSwap(bytes2 _partnerId) external;\n\n    function swapTokens(\n        uint16 _dstChainId,\n        uint16 _srcPoolId,\n        uint16 _dstPoolId,\n        uint256 _amountLD,\n        uint256 _minAmountLD,\n        IStargateRouter.lzTxObj calldata _lzTxParams,\n        bytes calldata _to,\n        bytes2 _partnerId,\n        FeeObj calldata _feeObj\n    ) external payable;\n\n\n    function swapETH(\n        uint16 _dstChainId,\n        uint256 _amountLD,\n        uint256 _minAmountLD,\n        bytes calldata _to,\n        bytes2 _partnerId,\n        FeeObj calldata _feeObj\n    ) external payable;\n}\n"
			},
			"solidity-examples-main/contracts/interfaces/IStargateReceiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IStargateReceiver {\n    function sgReceive(\n        uint16 _chainId,\n        bytes memory _srcAddress,\n        uint256 _nonce,\n        address _token,\n        uint256 amountLD,\n        bytes memory payload\n    ) external;\n}\n"
			},
			"solidity-examples-main/contracts/interfaces/IStargateRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\npragma abicoder v2;\n\ninterface IStargateRouter {\n    struct lzTxObj {\n        uint256 dstGasForCall;\n        uint256 dstNativeAmount;\n        bytes dstNativeAddr;\n    }\n\n    function addLiquidity(\n        uint256 _poolId,\n        uint256 _amountLD,\n        address _to\n    ) external;\n\n    function swap(\n        uint16 _dstChainId,\n        uint256 _srcPoolId,\n        uint256 _dstPoolId,\n        address payable _refundAddress,\n        uint256 _amountLD,\n        uint256 _minAmountLD,\n        lzTxObj memory _lzTxParams,\n        bytes calldata _to,\n        bytes calldata _payload\n    ) external payable;\n\n    function redeemRemote(\n        uint16 _dstChainId,\n        uint256 _srcPoolId,\n        uint256 _dstPoolId,\n        address payable _refundAddress,\n        uint256 _amountLP,\n        uint256 _minAmountLD,\n        bytes calldata _to,\n        lzTxObj memory _lzTxParams\n    ) external payable;\n\n    function instantRedeemLocal(\n        uint16 _srcPoolId,\n        uint256 _amountLP,\n        address _to\n    ) external returns (uint256);\n\n    function redeemLocal(\n        uint16 _dstChainId,\n        uint256 _srcPoolId,\n        uint256 _dstPoolId,\n        address payable _refundAddress,\n        uint256 _amountLP,\n        bytes calldata _to,\n        lzTxObj memory _lzTxParams\n    ) external payable;\n\n    function sendCredits(\n        uint16 _dstChainId,\n        uint256 _srcPoolId,\n        uint256 _dstPoolId,\n        address payable _refundAddress\n    ) external payable;\n\n    function quoteLayerZeroFee(\n        uint16 _dstChainId,\n        uint8 _functionType,\n        bytes calldata _toAddress,\n        bytes calldata _transferAndCallPayload,\n        lzTxObj memory _lzTxParams\n    ) external view returns (uint256, uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6912  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6912  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122087fddaf2f18cc79a0288fcf131abe2f9f3c982a89d02b73c74ce329204c54bdc64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087fddaf2f18cc79a0288fcf131abe2f9f3c982a89d02b73c74ce329204c54bdc64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 REVERT 0xDA CALLCODE CALL DUP13 0xC7 SWAP11 MUL DUP9 0xFC CALL BALANCE 0xAB 0xE2 0xF9 RETURN 0xC9 DUP3 0xA8 SWAP14 MUL 0xB7 EXTCODECOPY PUSH21 0xCE329204C54BDC64736F6C63430008040033000000 ",
							"sourceMap": "701:6211:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087fddaf2f18cc79a0288fcf131abe2f9f3c982a89d02b73c74ce329204c54bdc64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 REVERT 0xDA CALLCODE CALL DUP13 0xC7 SWAP11 MUL DUP9 0xFC CALL BALANCE 0xAB 0xE2 0xF9 RETURN 0xC9 DUP3 0xA8 SWAP14 MUL 0xB7 EXTCODECOPY PUSH21 0xCE329204C54BDC64736F6C63430008040033000000 ",
							"sourceMap": "701:6211:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087fddaf2f18cc79a0288fcf131abe2f9f3c982a89d02b73c74ce329204c54bdc64736f6c63430008040033",
									".code": [
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb09c2819aa81ba5cc6172ab3b3d76d5938a510b5892b8accb7b59c8159a1f1c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb09c2819aa81ba5cc6172ab3b3d76d5938a510b5892b8accb7b59c8159a1f1c64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB MULMOD 0xC2 DUP2 SWAP11 0xA8 SHL 0xA5 0xCC PUSH2 0x72AB EXTCODESIZE RETURNDATASIZE PUSH23 0xD5938A510B5892B8ACCB7B59C8159A1F1C64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb09c2819aa81ba5cc6172ab3b3d76d5938a510b5892b8accb7b59c8159a1f1c64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB MULMOD 0xC2 DUP2 SWAP11 0xA8 SHL 0xA5 0xCC PUSH2 0x72AB EXTCODESIZE RETURNDATASIZE PUSH23 0xD5938A510B5892B8ACCB7B59C8159A1F1C64736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:9169:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb09c2819aa81ba5cc6172ab3b3d76d5938a510b5892b8accb7b59c8159a1f1c64736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity-examples-main/contracts/Multistake/PolygonHub.sol": {
				"PolygonHub": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stargateRouter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_destinationAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_registryAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "qty",
									"type": "uint256"
								}
							],
							"name": "ReceivedOnDestination",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "someMsg",
									"type": "bytes"
								}
							],
							"name": "bridgeAndSwap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "partnerId",
							"outputs": [
								{
									"internalType": "bytes2",
									"name": "",
									"type": "bytes2"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountLD",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_payload",
									"type": "bytes"
								}
							],
							"name": "sgReceive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stargateRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "widgetSwap",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":389:3698  contract PolygonHub is IStargateReceiver {\r... */\n  mstore(0x40, 0x80)\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":705:710  10121 */\n  0x2789\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":687:710  uint16 GoerliId = 10121 */\n  0x01\n  exp(0x0100, 0x16)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":733:738  10106 */\n  0x277a\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":717:738  uint16 FujiId = 10106 */\n  0x01\n  exp(0x0100, 0x18)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":762:804  0xDf0360Ad8C5ccf25095Aa97ee5F2785c8d848620 */\n  0xdf0360ad8c5ccf25095aa97ee5f2785c8d848620\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":747:804  address USDC = 0xDf0360Ad8C5ccf25095Aa97ee5F2785c8d848620 */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":941:1182  constructor(address _stargateRouter, address _destinationAddress, address _registryAddress) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1061:1076  _stargateRouter */\n  dup3\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1044:1058  stargateRouter */\n  0x00\n  dup1\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1044:1076  stargateRouter = _stargateRouter */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1108:1127  _destinationAddress */\n  dup2\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1087:1105  destinationAddress */\n  0x03\n  0x00\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1087:1127  destinationAddress = _destinationAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1156:1172  _registryAddress */\n  dup1\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1138:1153  registryAddress */\n  0x04\n  0x00\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1138:1172  registryAddress = _registryAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":941:1182  constructor(address _stargateRouter, address _destinationAddress, address _registryAddress) {\r... */\n  pop\n  pop\n  pop\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":389:3698  contract PolygonHub is IStargateReceiver {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:752   */\ntag_3:\n    /* \"#utility.yul\":244:250   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup1\n    /* \"#utility.yul\":260:266   */\n  0x00\n    /* \"#utility.yul\":309:311   */\n  0x60\n    /* \"#utility.yul\":297:306   */\n  dup5\n    /* \"#utility.yul\":288:295   */\n  dup7\n    /* \"#utility.yul\":284:307   */\n  sub\n    /* \"#utility.yul\":280:312   */\n  slt\n    /* \"#utility.yul\":277:279   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":325:326   */\n  0x00\n    /* \"#utility.yul\":322:323   */\n  dup1\n    /* \"#utility.yul\":315:327   */\n  revert\n    /* \"#utility.yul\":277:279   */\ntag_13:\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":393:457   */\n  tag_14\n    /* \"#utility.yul\":449:456   */\n  dup7\n    /* \"#utility.yul\":440:446   */\n  dup3\n    /* \"#utility.yul\":429:438   */\n  dup8\n    /* \"#utility.yul\":425:447   */\n  add\n    /* \"#utility.yul\":393:457   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":383:457   */\n  swap4\n  pop\n    /* \"#utility.yul\":339:467   */\n  pop\n    /* \"#utility.yul\":506:508   */\n  0x20\n    /* \"#utility.yul\":532:596   */\n  tag_15\n    /* \"#utility.yul\":588:595   */\n  dup7\n    /* \"#utility.yul\":579:585   */\n  dup3\n    /* \"#utility.yul\":568:577   */\n  dup8\n    /* \"#utility.yul\":564:586   */\n  add\n    /* \"#utility.yul\":532:596   */\n  tag_8\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":522:596   */\n  swap3\n  pop\n    /* \"#utility.yul\":477:606   */\n  pop\n    /* \"#utility.yul\":645:647   */\n  0x40\n    /* \"#utility.yul\":671:735   */\n  tag_16\n    /* \"#utility.yul\":727:734   */\n  dup7\n    /* \"#utility.yul\":718:724   */\n  dup3\n    /* \"#utility.yul\":707:716   */\n  dup8\n    /* \"#utility.yul\":703:725   */\n  add\n    /* \"#utility.yul\":671:735   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":661:735   */\n  swap2\n  pop\n    /* \"#utility.yul\":616:745   */\n  pop\n    /* \"#utility.yul\":267:752   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":758:854   */\ntag_17:\n    /* \"#utility.yul\":795:802   */\n  0x00\n    /* \"#utility.yul\":824:848   */\n  tag_19\n    /* \"#utility.yul\":842:847   */\n  dup3\n    /* \"#utility.yul\":824:848   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":813:848   */\n  swap1\n  pop\n    /* \"#utility.yul\":803:854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":860:986   */\ntag_20:\n    /* \"#utility.yul\":897:904   */\n  0x00\n    /* \"#utility.yul\":937:979   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":930:935   */\n  dup3\n    /* \"#utility.yul\":926:980   */\n  and\n    /* \"#utility.yul\":915:980   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:986   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":992:1114   */\ntag_11:\n    /* \"#utility.yul\":1065:1089   */\n  tag_23\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1065:1089   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":1058:1063   */\n  dup2\n    /* \"#utility.yul\":1055:1090   */\n  eq\n    /* \"#utility.yul\":1045:1047   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":1104:1105   */\n  0x00\n    /* \"#utility.yul\":1101:1102   */\n  dup1\n    /* \"#utility.yul\":1094:1106   */\n  revert\n    /* \"#utility.yul\":1045:1047   */\ntag_24:\n    /* \"#utility.yul\":1035:1114   */\n  pop\n  jump\t// out\n    /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":389:3698  contract PolygonHub is IStargateReceiver {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":389:3698  contract PolygonHub is IStargateReceiver {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3576ca46\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa9e56f3c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xaa37db6c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xab8236f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdd1bc08e\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1285:2837  function bridgeAndSwap(uint256 amount, bytes calldata someMsg) public payable  {\r... */\n    tag_2:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":472:501  address public stargateRouter */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":576:599  bytes2 public partnerId */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":3187:3693  function sgReceive(uint16 /*_chainId*/, bytes memory /*_srcAddress*/, uint /*_nonce*/, address _token, uint amountLD, bytes memory _payload) override external {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":544:569  address public widgetSwap */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1285:2837  function bridgeAndSwap(uint256 amount, bytes calldata someMsg) public payable  {\r... */\n    tag_10:\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1395:1396  0 */\n      0x00\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1383:1392  msg.value */\n      callvalue\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1383:1396  msg.value > 0 */\n      gt\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1375:1456  require(msg.value > 0, \"stargate requires a msg.value to pay crosschain message\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1650:1714  IERC20(USDC).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_34\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1680:1690  msg.sender */\n      caller\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1700:1704  this */\n      address\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1707:1713  amount */\n      dup6\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1657:1661  USDC */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1650:1679  IERC20(USDC).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_35\n      swap1\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1650:1714  IERC20(USDC).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_34:\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1725:1782  IERC20(USDC).safeApprove(address(stargateRouter), amount) */\n      tag_36\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1758:1772  stargateRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1775:1781  amount */\n      dup5\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1732:1736  USDC */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1725:1749  IERC20(USDC).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_37\n      swap1\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1725:1782  IERC20(USDC).safeApprove(address(stargateRouter), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1795:1811  uint16 polygonId */\n      0x00\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1824:1839  registryAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1814:1854  IRegistry(registryAddress).getStargateId */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x977f2cb9\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1855:1868  block.chainid */\n      chainid\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1814:1869  IRegistry(registryAddress).getStargateId(block.chainid) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1795:1869  uint16 polygonId = IRegistry(registryAddress).getStargateId(block.chainid) */\n      swap1\n      pop\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1910:1924  stargateRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1894:1930  IStargateRouter(stargateRouter).swap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9fbf10fc\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1937:1946  msg.value */\n      callvalue\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1962:1968  FujiId */\n      0x01\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2048:2049  1 */\n      0x01\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2139:2140  1 */\n      dup1\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2242:2252  msg.sender */\n      caller\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2365:2371  amount */\n      dup11\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2475:2476  0 */\n      0x00\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2575:2615  IStargateRouter.lzTxObj(200000, 0, \"0x\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2599:2605  200000 */\n      0x030d40\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2575:2615  IStargateRouter.lzTxObj(200000, 0, \"0x\") */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2607:2608  0 */\n      0x00\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2575:2615  IStargateRouter.lzTxObj(200000, 0, \"0x\") */\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      0x3078000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      pop\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2673:2691  destinationAddress */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2656:2692  abi.encodePacked(destinationAddress) */\n      add(0x20, mload(0x40))\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":2768:2775  someMsg */\n      dup14\n      dup14\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1894:2829  IStargateRouter(stargateRouter).swap{value:msg.value}(\r... */\n      mload(0x40)\n      dup13\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap11\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":1285:2837  function bridgeAndSwap(uint256 amount, bytes calldata someMsg) public payable  {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":472:501  address public stargateRouter */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":576:599  bytes2 public partnerId */\n    tag_18:\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xf0\n      shl\n      dup2\n      jump\t// out\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":3187:3693  function sgReceive(uint16 /*_chainId*/, bytes memory /*_srcAddress*/, uint /*_nonce*/, address _token, uint amountLD, bytes memory _payload) override external {\r... */\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":544:569  address public widgetSwap */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_54\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1534:1538  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1540:1542  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1544:1549  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_55\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1818:2391  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2152:2153  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2143:2148  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2143:2153  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2142:2204  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2202:2203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2159:2164  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2159:2174  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2183:2187  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2190:2197  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2159:2198  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2159:2203  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2142:2204  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2121:2284  require(... */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2294:2384  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2314:2319  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2344:2366  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2368:2375  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2377:2382  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2321:2383  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2294:2313  _callOptionalReturn */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2294:2384  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1818:2391  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5173:5815  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5592:5615  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5646:5650  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5626:5631  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5645  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_75\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5592:5687  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5726:5727  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5715  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5722  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5727  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5761  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5742:5752  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5731:5761  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5761  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5697:5808  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5173:5815  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_83\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_93\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_92)\n    tag_93:\n      0x60\n      swap2\n      pop\n    tag_92:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_94\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_99\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_100\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_96)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_105\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_96:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9161:9294  {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:350   */\n    tag_114:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_116\n        /* \"#utility.yul\":125:173   */\n      tag_117\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":109:174   */\n      tag_119\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:251   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":290:291   */\n      0x00\n        /* \"#utility.yul\":287:288   */\n      dup1\n        /* \"#utility.yul\":280:292   */\n      revert\n        /* \"#utility.yul\":249:251   */\n    tag_120:\n        /* \"#utility.yul\":303:344   */\n      tag_121\n        /* \"#utility.yul\":337:343   */\n      dup5\n        /* \"#utility.yul\":332:335   */\n      dup3\n        /* \"#utility.yul\":327:330   */\n      dup6\n        /* \"#utility.yul\":303:344   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":90:350   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":356:495   */\n    tag_123:\n        /* \"#utility.yul\":402:407   */\n      0x00\n        /* \"#utility.yul\":440:446   */\n      dup2\n        /* \"#utility.yul\":427:447   */\n      calldataload\n        /* \"#utility.yul\":418:447   */\n      swap1\n      pop\n        /* \"#utility.yul\":456:489   */\n      tag_125\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":456:489   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":408:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":501:638   */\n    tag_127:\n        /* \"#utility.yul\":555:560   */\n      0x00\n        /* \"#utility.yul\":586:592   */\n      dup2\n        /* \"#utility.yul\":580:593   */\n      mload\n        /* \"#utility.yul\":571:593   */\n      swap1\n      pop\n        /* \"#utility.yul\":602:632   */\n      tag_129\n        /* \"#utility.yul\":626:631   */\n      dup2\n        /* \"#utility.yul\":602:632   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":561:638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":657:1008   */\n    tag_131:\n        /* \"#utility.yul\":714:722   */\n      0x00\n        /* \"#utility.yul\":724:730   */\n      dup1\n        /* \"#utility.yul\":774:777   */\n      dup4\n        /* \"#utility.yul\":767:771   */\n      0x1f\n        /* \"#utility.yul\":759:765   */\n      dup5\n        /* \"#utility.yul\":755:772   */\n      add\n        /* \"#utility.yul\":751:778   */\n      slt\n        /* \"#utility.yul\":741:743   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":792:793   */\n      0x00\n        /* \"#utility.yul\":789:790   */\n      dup1\n        /* \"#utility.yul\":782:794   */\n      revert\n        /* \"#utility.yul\":741:743   */\n    tag_133:\n        /* \"#utility.yul\":828:834   */\n      dup3\n        /* \"#utility.yul\":815:835   */\n      calldataload\n        /* \"#utility.yul\":805:835   */\n      swap1\n      pop\n        /* \"#utility.yul\":858:876   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":850:856   */\n      dup2\n        /* \"#utility.yul\":847:877   */\n      gt\n        /* \"#utility.yul\":844:846   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":844:846   */\n    tag_134:\n        /* \"#utility.yul\":927:931   */\n      0x20\n        /* \"#utility.yul\":919:925   */\n      dup4\n        /* \"#utility.yul\":915:932   */\n      add\n        /* \"#utility.yul\":903:932   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:984   */\n      dup4\n        /* \"#utility.yul\":973:977   */\n      0x01\n        /* \"#utility.yul\":965:971   */\n      dup3\n        /* \"#utility.yul\":961:978   */\n      mul\n        /* \"#utility.yul\":951:959   */\n      dup4\n        /* \"#utility.yul\":947:979   */\n      add\n        /* \"#utility.yul\":944:985   */\n      gt\n        /* \"#utility.yul\":941:943   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":998:999   */\n      0x00\n        /* \"#utility.yul\":995:996   */\n      dup1\n        /* \"#utility.yul\":988:1000   */\n      revert\n        /* \"#utility.yul\":941:943   */\n    tag_135:\n        /* \"#utility.yul\":731:1008   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1027:1298   */\n    tag_136:\n        /* \"#utility.yul\":1082:1087   */\n      0x00\n        /* \"#utility.yul\":1131:1134   */\n      dup3\n        /* \"#utility.yul\":1124:1128   */\n      0x1f\n        /* \"#utility.yul\":1116:1122   */\n      dup4\n        /* \"#utility.yul\":1112:1129   */\n      add\n        /* \"#utility.yul\":1108:1135   */\n      slt\n        /* \"#utility.yul\":1098:1100   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1149:1150   */\n      0x00\n        /* \"#utility.yul\":1146:1147   */\n      dup1\n        /* \"#utility.yul\":1139:1151   */\n      revert\n        /* \"#utility.yul\":1098:1100   */\n    tag_138:\n        /* \"#utility.yul\":1189:1195   */\n      dup2\n        /* \"#utility.yul\":1176:1196   */\n      calldataload\n        /* \"#utility.yul\":1214:1292   */\n      tag_139\n        /* \"#utility.yul\":1288:1291   */\n      dup5\n        /* \"#utility.yul\":1280:1286   */\n      dup3\n        /* \"#utility.yul\":1273:1277   */\n      0x20\n        /* \"#utility.yul\":1265:1271   */\n      dup7\n        /* \"#utility.yul\":1261:1278   */\n      add\n        /* \"#utility.yul\":1214:1292   */\n      tag_114\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1205:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1088:1298   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1304:1441   */\n    tag_140:\n        /* \"#utility.yul\":1349:1354   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      dup2\n        /* \"#utility.yul\":1374:1394   */\n      calldataload\n        /* \"#utility.yul\":1365:1394   */\n      swap1\n      pop\n        /* \"#utility.yul\":1403:1435   */\n      tag_142\n        /* \"#utility.yul\":1429:1434   */\n      dup2\n        /* \"#utility.yul\":1403:1435   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1355:1441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1588   */\n    tag_144:\n        /* \"#utility.yul\":1503:1508   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup2\n        /* \"#utility.yul\":1528:1541   */\n      mload\n        /* \"#utility.yul\":1519:1541   */\n      swap1\n      pop\n        /* \"#utility.yul\":1550:1582   */\n      tag_146\n        /* \"#utility.yul\":1576:1581   */\n      dup2\n        /* \"#utility.yul\":1550:1582   */\n      tag_143\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1509:1588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1594:1733   */\n    tag_147:\n        /* \"#utility.yul\":1640:1645   */\n      0x00\n        /* \"#utility.yul\":1678:1684   */\n      dup2\n        /* \"#utility.yul\":1665:1685   */\n      calldataload\n        /* \"#utility.yul\":1656:1685   */\n      swap1\n      pop\n        /* \"#utility.yul\":1694:1727   */\n      tag_149\n        /* \"#utility.yul\":1721:1726   */\n      dup2\n        /* \"#utility.yul\":1694:1727   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1646:1733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1882   */\n    tag_151:\n        /* \"#utility.yul\":1796:1801   */\n      0x00\n        /* \"#utility.yul\":1827:1833   */\n      dup2\n        /* \"#utility.yul\":1821:1834   */\n      mload\n        /* \"#utility.yul\":1812:1834   */\n      swap1\n      pop\n        /* \"#utility.yul\":1843:1876   */\n      tag_153\n        /* \"#utility.yul\":1870:1875   */\n      dup2\n        /* \"#utility.yul\":1843:1876   */\n      tag_150\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1802:1882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2166   */\n    tag_78:\n        /* \"#utility.yul\":1955:1961   */\n      0x00\n        /* \"#utility.yul\":2004:2006   */\n      0x20\n        /* \"#utility.yul\":1992:2001   */\n      dup3\n        /* \"#utility.yul\":1983:1990   */\n      dup5\n        /* \"#utility.yul\":1979:2002   */\n      sub\n        /* \"#utility.yul\":1975:2007   */\n      slt\n        /* \"#utility.yul\":1972:1974   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2020:2021   */\n      0x00\n        /* \"#utility.yul\":2017:2018   */\n      dup1\n        /* \"#utility.yul\":2010:2022   */\n      revert\n        /* \"#utility.yul\":1972:1974   */\n    tag_155:\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2088:2149   */\n      tag_156\n        /* \"#utility.yul\":2141:2148   */\n      dup5\n        /* \"#utility.yul\":2132:2138   */\n      dup3\n        /* \"#utility.yul\":2121:2130   */\n      dup6\n        /* \"#utility.yul\":2117:2139   */\n      add\n        /* \"#utility.yul\":2088:2149   */\n      tag_127\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2078:2149   */\n      swap2\n      pop\n        /* \"#utility.yul\":2034:2159   */\n      pop\n        /* \"#utility.yul\":1962:2166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2454   */\n    tag_44:\n        /* \"#utility.yul\":2241:2247   */\n      0x00\n        /* \"#utility.yul\":2290:2292   */\n      0x20\n        /* \"#utility.yul\":2278:2287   */\n      dup3\n        /* \"#utility.yul\":2269:2276   */\n      dup5\n        /* \"#utility.yul\":2265:2288   */\n      sub\n        /* \"#utility.yul\":2261:2293   */\n      slt\n        /* \"#utility.yul\":2258:2260   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2306:2307   */\n      0x00\n        /* \"#utility.yul\":2303:2304   */\n      dup1\n        /* \"#utility.yul\":2296:2308   */\n      revert\n        /* \"#utility.yul\":2258:2260   */\n    tag_158:\n        /* \"#utility.yul\":2349:2350   */\n      0x00\n        /* \"#utility.yul\":2374:2437   */\n      tag_159\n        /* \"#utility.yul\":2429:2436   */\n      dup5\n        /* \"#utility.yul\":2420:2426   */\n      dup3\n        /* \"#utility.yul\":2409:2418   */\n      dup6\n        /* \"#utility.yul\":2405:2427   */\n      add\n        /* \"#utility.yul\":2374:2437   */\n      tag_144\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2364:2437   */\n      swap2\n      pop\n        /* \"#utility.yul\":2320:2447   */\n      pop\n        /* \"#utility.yul\":2248:2454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:3670   */\n    tag_24:\n        /* \"#utility.yul\":2581:2587   */\n      0x00\n        /* \"#utility.yul\":2589:2595   */\n      dup1\n        /* \"#utility.yul\":2597:2603   */\n      0x00\n        /* \"#utility.yul\":2605:2611   */\n      dup1\n        /* \"#utility.yul\":2613:2619   */\n      0x00\n        /* \"#utility.yul\":2621:2627   */\n      dup1\n        /* \"#utility.yul\":2670:2673   */\n      0xc0\n        /* \"#utility.yul\":2658:2667   */\n      dup8\n        /* \"#utility.yul\":2649:2656   */\n      dup10\n        /* \"#utility.yul\":2645:2668   */\n      sub\n        /* \"#utility.yul\":2641:2674   */\n      slt\n        /* \"#utility.yul\":2638:2640   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2687:2688   */\n      0x00\n        /* \"#utility.yul\":2684:2685   */\n      dup1\n        /* \"#utility.yul\":2677:2689   */\n      revert\n        /* \"#utility.yul\":2638:2640   */\n    tag_161:\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2755:2807   */\n      tag_162\n        /* \"#utility.yul\":2799:2806   */\n      dup10\n        /* \"#utility.yul\":2790:2796   */\n      dup3\n        /* \"#utility.yul\":2779:2788   */\n      dup11\n        /* \"#utility.yul\":2775:2797   */\n      add\n        /* \"#utility.yul\":2755:2807   */\n      tag_140\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2745:2807   */\n      swap7\n      pop\n        /* \"#utility.yul\":2701:2817   */\n      pop\n        /* \"#utility.yul\":2884:2886   */\n      0x20\n        /* \"#utility.yul\":2873:2882   */\n      dup8\n        /* \"#utility.yul\":2869:2887   */\n      add\n        /* \"#utility.yul\":2856:2888   */\n      calldataload\n        /* \"#utility.yul\":2915:2933   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2907:2913   */\n      dup2\n        /* \"#utility.yul\":2904:2934   */\n      gt\n        /* \"#utility.yul\":2901:2903   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2947:2948   */\n      0x00\n        /* \"#utility.yul\":2944:2945   */\n      dup1\n        /* \"#utility.yul\":2937:2949   */\n      revert\n        /* \"#utility.yul\":2901:2903   */\n    tag_163:\n        /* \"#utility.yul\":2975:3037   */\n      tag_164\n        /* \"#utility.yul\":3029:3036   */\n      dup10\n        /* \"#utility.yul\":3020:3026   */\n      dup3\n        /* \"#utility.yul\":3009:3018   */\n      dup11\n        /* \"#utility.yul\":3005:3027   */\n      add\n        /* \"#utility.yul\":2975:3037   */\n      tag_136\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2965:3037   */\n      swap6\n      pop\n        /* \"#utility.yul\":2827:3047   */\n      pop\n        /* \"#utility.yul\":3086:3088   */\n      0x40\n        /* \"#utility.yul\":3112:3165   */\n      tag_165\n        /* \"#utility.yul\":3157:3164   */\n      dup10\n        /* \"#utility.yul\":3148:3154   */\n      dup3\n        /* \"#utility.yul\":3137:3146   */\n      dup11\n        /* \"#utility.yul\":3133:3155   */\n      add\n        /* \"#utility.yul\":3112:3165   */\n      tag_147\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3102:3165   */\n      swap5\n      pop\n        /* \"#utility.yul\":3057:3175   */\n      pop\n        /* \"#utility.yul\":3214:3216   */\n      0x60\n        /* \"#utility.yul\":3240:3293   */\n      tag_166\n        /* \"#utility.yul\":3285:3292   */\n      dup10\n        /* \"#utility.yul\":3276:3282   */\n      dup3\n        /* \"#utility.yul\":3265:3274   */\n      dup11\n        /* \"#utility.yul\":3261:3283   */\n      add\n        /* \"#utility.yul\":3240:3293   */\n      tag_123\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3230:3293   */\n      swap4\n      pop\n        /* \"#utility.yul\":3185:3303   */\n      pop\n        /* \"#utility.yul\":3342:3345   */\n      0x80\n        /* \"#utility.yul\":3369:3422   */\n      tag_167\n        /* \"#utility.yul\":3414:3421   */\n      dup10\n        /* \"#utility.yul\":3405:3411   */\n      dup3\n        /* \"#utility.yul\":3394:3403   */\n      dup11\n        /* \"#utility.yul\":3390:3412   */\n      add\n        /* \"#utility.yul\":3369:3422   */\n      tag_147\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3359:3422   */\n      swap3\n      pop\n        /* \"#utility.yul\":3313:3432   */\n      pop\n        /* \"#utility.yul\":3499:3502   */\n      0xa0\n        /* \"#utility.yul\":3488:3497   */\n      dup8\n        /* \"#utility.yul\":3484:3503   */\n      add\n        /* \"#utility.yul\":3471:3504   */\n      calldataload\n        /* \"#utility.yul\":3531:3549   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3529   */\n      dup2\n        /* \"#utility.yul\":3520:3550   */\n      gt\n        /* \"#utility.yul\":3517:3519   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3563:3564   */\n      0x00\n        /* \"#utility.yul\":3560:3561   */\n      dup1\n        /* \"#utility.yul\":3553:3565   */\n      revert\n        /* \"#utility.yul\":3517:3519   */\n    tag_168:\n        /* \"#utility.yul\":3591:3653   */\n      tag_169\n        /* \"#utility.yul\":3645:3652   */\n      dup10\n        /* \"#utility.yul\":3636:3642   */\n      dup3\n        /* \"#utility.yul\":3625:3634   */\n      dup11\n        /* \"#utility.yul\":3621:3643   */\n      add\n        /* \"#utility.yul\":3591:3653   */\n      tag_136\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3581:3653   */\n      swap2\n      pop\n        /* \"#utility.yul\":3442:3663   */\n      pop\n        /* \"#utility.yul\":2628:3670   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":3676:3960   */\n    tag_66:\n        /* \"#utility.yul\":3746:3752   */\n      0x00\n        /* \"#utility.yul\":3795:3797   */\n      0x20\n        /* \"#utility.yul\":3783:3792   */\n      dup3\n        /* \"#utility.yul\":3774:3781   */\n      dup5\n        /* \"#utility.yul\":3770:3793   */\n      sub\n        /* \"#utility.yul\":3766:3798   */\n      slt\n        /* \"#utility.yul\":3763:3765   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":3811:3812   */\n      0x00\n        /* \"#utility.yul\":3808:3809   */\n      dup1\n        /* \"#utility.yul\":3801:3813   */\n      revert\n        /* \"#utility.yul\":3763:3765   */\n    tag_171:\n        /* \"#utility.yul\":3854:3855   */\n      0x00\n        /* \"#utility.yul\":3879:3943   */\n      tag_172\n        /* \"#utility.yul\":3935:3942   */\n      dup5\n        /* \"#utility.yul\":3926:3932   */\n      dup3\n        /* \"#utility.yul\":3915:3924   */\n      dup6\n        /* \"#utility.yul\":3911:3933   */\n      add\n        /* \"#utility.yul\":3879:3943   */\n      tag_151\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3869:3943   */\n      swap2\n      pop\n        /* \"#utility.yul\":3825:3953   */\n      pop\n        /* \"#utility.yul\":3753:3960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3966:4504   */\n    tag_9:\n        /* \"#utility.yul\":4045:4051   */\n      0x00\n        /* \"#utility.yul\":4053:4059   */\n      dup1\n        /* \"#utility.yul\":4061:4067   */\n      0x00\n        /* \"#utility.yul\":4110:4112   */\n      0x40\n        /* \"#utility.yul\":4098:4107   */\n      dup5\n        /* \"#utility.yul\":4089:4096   */\n      dup7\n        /* \"#utility.yul\":4085:4108   */\n      sub\n        /* \"#utility.yul\":4081:4113   */\n      slt\n        /* \"#utility.yul\":4078:4080   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":4126:4127   */\n      0x00\n        /* \"#utility.yul\":4123:4124   */\n      dup1\n        /* \"#utility.yul\":4116:4128   */\n      revert\n        /* \"#utility.yul\":4078:4080   */\n    tag_174:\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4194:4247   */\n      tag_175\n        /* \"#utility.yul\":4239:4246   */\n      dup7\n        /* \"#utility.yul\":4230:4236   */\n      dup3\n        /* \"#utility.yul\":4219:4228   */\n      dup8\n        /* \"#utility.yul\":4215:4237   */\n      add\n        /* \"#utility.yul\":4194:4247   */\n      tag_147\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4184:4247   */\n      swap4\n      pop\n        /* \"#utility.yul\":4140:4257   */\n      pop\n        /* \"#utility.yul\":4324:4326   */\n      0x20\n        /* \"#utility.yul\":4313:4322   */\n      dup5\n        /* \"#utility.yul\":4309:4327   */\n      add\n        /* \"#utility.yul\":4296:4328   */\n      calldataload\n        /* \"#utility.yul\":4355:4373   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4347:4353   */\n      dup2\n        /* \"#utility.yul\":4344:4374   */\n      gt\n        /* \"#utility.yul\":4341:4343   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":4387:4388   */\n      0x00\n        /* \"#utility.yul\":4384:4385   */\n      dup1\n        /* \"#utility.yul\":4377:4389   */\n      revert\n        /* \"#utility.yul\":4341:4343   */\n    tag_176:\n        /* \"#utility.yul\":4423:4487   */\n      tag_177\n        /* \"#utility.yul\":4479:4486   */\n      dup7\n        /* \"#utility.yul\":4470:4476   */\n      dup3\n        /* \"#utility.yul\":4459:4468   */\n      dup8\n        /* \"#utility.yul\":4455:4477   */\n      add\n        /* \"#utility.yul\":4423:4487   */\n      tag_131\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4405:4487   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4267:4497   */\n      pop\n        /* \"#utility.yul\":4068:4504   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4510:4652   */\n    tag_178:\n        /* \"#utility.yul\":4613:4645   */\n      tag_180\n        /* \"#utility.yul\":4639:4644   */\n      dup2\n        /* \"#utility.yul\":4613:4645   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4608:4611   */\n      dup3\n        /* \"#utility.yul\":4601:4646   */\n      mstore\n        /* \"#utility.yul\":4591:4652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:4776   */\n    tag_182:\n        /* \"#utility.yul\":4745:4769   */\n      tag_184\n        /* \"#utility.yul\":4763:4768   */\n      dup2\n        /* \"#utility.yul\":4745:4769   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4740:4743   */\n      dup3\n        /* \"#utility.yul\":4733:4770   */\n      mstore\n        /* \"#utility.yul\":4723:4776   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4782:4939   */\n    tag_186:\n        /* \"#utility.yul\":4887:4932   */\n      tag_188\n        /* \"#utility.yul\":4907:4931   */\n      tag_189\n        /* \"#utility.yul\":4925:4930   */\n      dup3\n        /* \"#utility.yul\":4907:4931   */\n      tag_185\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4887:4932   */\n      tag_190\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4882:4885   */\n      dup3\n        /* \"#utility.yul\":4875:4933   */\n      mstore\n        /* \"#utility.yul\":4865:4939   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4945:5060   */\n    tag_191:\n        /* \"#utility.yul\":5030:5053   */\n      tag_193\n        /* \"#utility.yul\":5047:5052   */\n      dup2\n        /* \"#utility.yul\":5030:5053   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5025:5028   */\n      dup3\n        /* \"#utility.yul\":5018:5054   */\n      mstore\n        /* \"#utility.yul\":5008:5060   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5389   */\n    tag_195:\n        /* \"#utility.yul\":5184:5187   */\n      0x00\n        /* \"#utility.yul\":5205:5275   */\n      tag_197\n        /* \"#utility.yul\":5268:5274   */\n      dup4\n        /* \"#utility.yul\":5263:5266   */\n      dup6\n        /* \"#utility.yul\":5205:5275   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5198:5275   */\n      swap4\n      pop\n        /* \"#utility.yul\":5285:5328   */\n      tag_199\n        /* \"#utility.yul\":5321:5327   */\n      dup4\n        /* \"#utility.yul\":5316:5319   */\n      dup6\n        /* \"#utility.yul\":5309:5314   */\n      dup5\n        /* \"#utility.yul\":5285:5328   */\n      tag_122\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5353:5382   */\n      tag_200\n        /* \"#utility.yul\":5375:5381   */\n      dup4\n        /* \"#utility.yul\":5353:5382   */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5348:5351   */\n      dup5\n        /* \"#utility.yul\":5344:5383   */\n      add\n        /* \"#utility.yul\":5337:5383   */\n      swap1\n      pop\n        /* \"#utility.yul\":5188:5389   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5735   */\n    tag_202:\n        /* \"#utility.yul\":5471:5474   */\n      0x00\n        /* \"#utility.yul\":5499:5537   */\n      tag_204\n        /* \"#utility.yul\":5531:5536   */\n      dup3\n        /* \"#utility.yul\":5499:5537   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5553:5613   */\n      tag_206\n        /* \"#utility.yul\":5606:5612   */\n      dup2\n        /* \"#utility.yul\":5601:5604   */\n      dup6\n        /* \"#utility.yul\":5553:5613   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5546:5613   */\n      swap4\n      pop\n        /* \"#utility.yul\":5622:5674   */\n      tag_208\n        /* \"#utility.yul\":5667:5673   */\n      dup2\n        /* \"#utility.yul\":5662:5665   */\n      dup6\n        /* \"#utility.yul\":5655:5659   */\n      0x20\n        /* \"#utility.yul\":5648:5653   */\n      dup7\n        /* \"#utility.yul\":5644:5660   */\n      add\n        /* \"#utility.yul\":5622:5674   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5699:5728   */\n      tag_210\n        /* \"#utility.yul\":5721:5727   */\n      dup2\n        /* \"#utility.yul\":5699:5728   */\n      tag_201\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5694:5697   */\n      dup5\n        /* \"#utility.yul\":5690:5729   */\n      add\n        /* \"#utility.yul\":5683:5729   */\n      swap2\n      pop\n        /* \"#utility.yul\":5475:5735   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5741:6101   */\n    tag_211:\n        /* \"#utility.yul\":5827:5830   */\n      0x00\n        /* \"#utility.yul\":5855:5893   */\n      tag_213\n        /* \"#utility.yul\":5887:5892   */\n      dup3\n        /* \"#utility.yul\":5855:5893   */\n      tag_205\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5909:5979   */\n      tag_214\n        /* \"#utility.yul\":5972:5978   */\n      dup2\n        /* \"#utility.yul\":5967:5970   */\n      dup6\n        /* \"#utility.yul\":5909:5979   */\n      tag_198\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5902:5979   */\n      swap4\n      pop\n        /* \"#utility.yul\":5988:6040   */\n      tag_215\n        /* \"#utility.yul\":6033:6039   */\n      dup2\n        /* \"#utility.yul\":6028:6031   */\n      dup6\n        /* \"#utility.yul\":6021:6025   */\n      0x20\n        /* \"#utility.yul\":6014:6019   */\n      dup7\n        /* \"#utility.yul\":6010:6026   */\n      add\n        /* \"#utility.yul\":5988:6040   */\n      tag_209\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6065:6094   */\n      tag_216\n        /* \"#utility.yul\":6087:6093   */\n      dup2\n        /* \"#utility.yul\":6065:6094   */\n      tag_201\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6060:6063   */\n      dup5\n        /* \"#utility.yul\":6056:6095   */\n      add\n        /* \"#utility.yul\":6049:6095   */\n      swap2\n      pop\n        /* \"#utility.yul\":5831:6101   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6107:6480   */\n    tag_217:\n        /* \"#utility.yul\":6211:6214   */\n      0x00\n        /* \"#utility.yul\":6239:6277   */\n      tag_219\n        /* \"#utility.yul\":6271:6276   */\n      dup3\n        /* \"#utility.yul\":6239:6277   */\n      tag_205\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6293:6381   */\n      tag_220\n        /* \"#utility.yul\":6374:6380   */\n      dup2\n        /* \"#utility.yul\":6369:6372   */\n      dup6\n        /* \"#utility.yul\":6293:6381   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6286:6381   */\n      swap4\n      pop\n        /* \"#utility.yul\":6390:6442   */\n      tag_222\n        /* \"#utility.yul\":6435:6441   */\n      dup2\n        /* \"#utility.yul\":6430:6433   */\n      dup6\n        /* \"#utility.yul\":6423:6427   */\n      0x20\n        /* \"#utility.yul\":6416:6421   */\n      dup7\n        /* \"#utility.yul\":6412:6428   */\n      add\n        /* \"#utility.yul\":6390:6442   */\n      tag_209\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6467:6473   */\n      dup1\n        /* \"#utility.yul\":6462:6465   */\n      dup5\n        /* \"#utility.yul\":6458:6474   */\n      add\n        /* \"#utility.yul\":6451:6474   */\n      swap2\n      pop\n        /* \"#utility.yul\":6215:6480   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6486:6633   */\n    tag_223:\n        /* \"#utility.yul\":6581:6626   */\n      tag_225\n        /* \"#utility.yul\":6620:6625   */\n      dup2\n        /* \"#utility.yul\":6581:6626   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6576:6579   */\n      dup3\n        /* \"#utility.yul\":6569:6627   */\n      mstore\n        /* \"#utility.yul\":6559:6633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6639:6786   */\n    tag_227:\n        /* \"#utility.yul\":6734:6779   */\n      tag_229\n        /* \"#utility.yul\":6773:6778   */\n      dup2\n        /* \"#utility.yul\":6734:6779   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6729:6732   */\n      dup3\n        /* \"#utility.yul\":6722:6780   */\n      mstore\n        /* \"#utility.yul\":6712:6786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6792:7156   */\n    tag_231:\n        /* \"#utility.yul\":6880:6883   */\n      0x00\n        /* \"#utility.yul\":6908:6947   */\n      tag_233\n        /* \"#utility.yul\":6941:6946   */\n      dup3\n        /* \"#utility.yul\":6908:6947   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6963:7034   */\n      tag_235\n        /* \"#utility.yul\":7027:7033   */\n      dup2\n        /* \"#utility.yul\":7022:7025   */\n      dup6\n        /* \"#utility.yul\":6963:7034   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6956:7034   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7095   */\n      tag_237\n        /* \"#utility.yul\":7088:7094   */\n      dup2\n        /* \"#utility.yul\":7083:7086   */\n      dup6\n        /* \"#utility.yul\":7076:7080   */\n      0x20\n        /* \"#utility.yul\":7069:7074   */\n      dup7\n        /* \"#utility.yul\":7065:7081   */\n      add\n        /* \"#utility.yul\":7043:7095   */\n      tag_209\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7120:7149   */\n      tag_238\n        /* \"#utility.yul\":7142:7148   */\n      dup2\n        /* \"#utility.yul\":7120:7149   */\n      tag_201\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7115:7118   */\n      dup5\n        /* \"#utility.yul\":7111:7150   */\n      add\n        /* \"#utility.yul\":7104:7150   */\n      swap2\n      pop\n        /* \"#utility.yul\":6884:7156   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7162:7528   */\n    tag_239:\n        /* \"#utility.yul\":7304:7307   */\n      0x00\n        /* \"#utility.yul\":7325:7392   */\n      tag_241\n        /* \"#utility.yul\":7389:7391   */\n      0x37\n        /* \"#utility.yul\":7384:7387   */\n      dup4\n        /* \"#utility.yul\":7325:7392   */\n      tag_236\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7318:7392   */\n      swap2\n      pop\n        /* \"#utility.yul\":7401:7494   */\n      tag_242\n        /* \"#utility.yul\":7490:7493   */\n      dup3\n        /* \"#utility.yul\":7401:7494   */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7519:7521   */\n      0x40\n        /* \"#utility.yul\":7514:7517   */\n      dup3\n        /* \"#utility.yul\":7510:7522   */\n      add\n        /* \"#utility.yul\":7503:7522   */\n      swap1\n      pop\n        /* \"#utility.yul\":7308:7528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7534:7900   */\n    tag_244:\n        /* \"#utility.yul\":7676:7679   */\n      0x00\n        /* \"#utility.yul\":7697:7764   */\n      tag_246\n        /* \"#utility.yul\":7761:7763   */\n      0x26\n        /* \"#utility.yul\":7756:7759   */\n      dup4\n        /* \"#utility.yul\":7697:7764   */\n      tag_236\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7690:7764   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7866   */\n      tag_247\n        /* \"#utility.yul\":7862:7865   */\n      dup3\n        /* \"#utility.yul\":7773:7866   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7891:7893   */\n      0x40\n        /* \"#utility.yul\":7886:7889   */\n      dup3\n        /* \"#utility.yul\":7882:7894   */\n      add\n        /* \"#utility.yul\":7875:7894   */\n      swap1\n      pop\n        /* \"#utility.yul\":7680:7900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:8272   */\n    tag_249:\n        /* \"#utility.yul\":8048:8051   */\n      0x00\n        /* \"#utility.yul\":8069:8136   */\n      tag_251\n        /* \"#utility.yul\":8133:8135   */\n      0x1d\n        /* \"#utility.yul\":8128:8131   */\n      dup4\n        /* \"#utility.yul\":8069:8136   */\n      tag_236\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8062:8136   */\n      swap2\n      pop\n        /* \"#utility.yul\":8145:8238   */\n      tag_252\n        /* \"#utility.yul\":8234:8237   */\n      dup3\n        /* \"#utility.yul\":8145:8238   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"#utility.yul\":8258:8261   */\n      dup3\n        /* \"#utility.yul\":8254:8266   */\n      add\n        /* \"#utility.yul\":8247:8266   */\n      swap1\n      pop\n        /* \"#utility.yul\":8052:8272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8278:8644   */\n    tag_254:\n        /* \"#utility.yul\":8420:8423   */\n      0x00\n        /* \"#utility.yul\":8441:8508   */\n      tag_256\n        /* \"#utility.yul\":8505:8507   */\n      0x2a\n        /* \"#utility.yul\":8500:8503   */\n      dup4\n        /* \"#utility.yul\":8441:8508   */\n      tag_236\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8434:8508   */\n      swap2\n      pop\n        /* \"#utility.yul\":8517:8610   */\n      tag_257\n        /* \"#utility.yul\":8606:8609   */\n      dup3\n        /* \"#utility.yul\":8517:8610   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8635:8637   */\n      0x40\n        /* \"#utility.yul\":8630:8633   */\n      dup3\n        /* \"#utility.yul\":8626:8638   */\n      add\n        /* \"#utility.yul\":8619:8638   */\n      swap1\n      pop\n        /* \"#utility.yul\":8424:8644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8650:9016   */\n    tag_259:\n        /* \"#utility.yul\":8792:8795   */\n      0x00\n        /* \"#utility.yul\":8813:8880   */\n      tag_261\n        /* \"#utility.yul\":8877:8879   */\n      0x36\n        /* \"#utility.yul\":8872:8875   */\n      dup4\n        /* \"#utility.yul\":8813:8880   */\n      tag_236\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8806:8880   */\n      swap2\n      pop\n        /* \"#utility.yul\":8889:8982   */\n      tag_262\n        /* \"#utility.yul\":8978:8981   */\n      dup3\n        /* \"#utility.yul\":8889:8982   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9007:9009   */\n      0x40\n        /* \"#utility.yul\":9002:9005   */\n      dup3\n        /* \"#utility.yul\":8998:9010   */\n      add\n        /* \"#utility.yul\":8991:9010   */\n      swap1\n      pop\n        /* \"#utility.yul\":8796:9016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9094:9901   */\n    tag_264:\n        /* \"#utility.yul\":9213:9216   */\n      0x00\n        /* \"#utility.yul\":9249:9253   */\n      0x60\n        /* \"#utility.yul\":9244:9247   */\n      dup4\n        /* \"#utility.yul\":9240:9254   */\n      add\n        /* \"#utility.yul\":9345:9349   */\n      0x00\n        /* \"#utility.yul\":9338:9343   */\n      dup4\n        /* \"#utility.yul\":9334:9350   */\n      add\n        /* \"#utility.yul\":9328:9351   */\n      mload\n        /* \"#utility.yul\":9364:9427   */\n      tag_266\n        /* \"#utility.yul\":9421:9425   */\n      0x00\n        /* \"#utility.yul\":9416:9419   */\n      dup7\n        /* \"#utility.yul\":9412:9426   */\n      add\n        /* \"#utility.yul\":9398:9410   */\n      dup3\n        /* \"#utility.yul\":9364:9427   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9264:9437   */\n      pop\n        /* \"#utility.yul\":9530:9534   */\n      0x20\n        /* \"#utility.yul\":9523:9528   */\n      dup4\n        /* \"#utility.yul\":9519:9535   */\n      add\n        /* \"#utility.yul\":9513:9536   */\n      mload\n        /* \"#utility.yul\":9549:9612   */\n      tag_268\n        /* \"#utility.yul\":9606:9610   */\n      0x20\n        /* \"#utility.yul\":9601:9604   */\n      dup7\n        /* \"#utility.yul\":9597:9611   */\n      add\n        /* \"#utility.yul\":9583:9595   */\n      dup3\n        /* \"#utility.yul\":9549:9612   */\n      tag_267\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9447:9622   */\n      pop\n        /* \"#utility.yul\":9713:9717   */\n      0x40\n        /* \"#utility.yul\":9706:9711   */\n      dup4\n        /* \"#utility.yul\":9702:9718   */\n      add\n        /* \"#utility.yul\":9696:9719   */\n      mload\n        /* \"#utility.yul\":9766:9769   */\n      dup5\n        /* \"#utility.yul\":9760:9764   */\n      dup3\n        /* \"#utility.yul\":9756:9770   */\n      sub\n        /* \"#utility.yul\":9749:9753   */\n      0x40\n        /* \"#utility.yul\":9744:9747   */\n      dup7\n        /* \"#utility.yul\":9740:9754   */\n      add\n        /* \"#utility.yul\":9733:9771   */\n      mstore\n        /* \"#utility.yul\":9792:9863   */\n      tag_269\n        /* \"#utility.yul\":9858:9862   */\n      dup3\n        /* \"#utility.yul\":9844:9856   */\n      dup3\n        /* \"#utility.yul\":9792:9863   */\n      tag_202\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9784:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9632:9874   */\n      pop\n        /* \"#utility.yul\":9891:9895   */\n      dup1\n        /* \"#utility.yul\":9884:9895   */\n      swap2\n      pop\n        /* \"#utility.yul\":9218:9901   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9907:10022   */\n    tag_270:\n        /* \"#utility.yul\":9992:10015   */\n      tag_272\n        /* \"#utility.yul\":10009:10014   */\n      dup2\n        /* \"#utility.yul\":9992:10015   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9987:9990   */\n      dup3\n        /* \"#utility.yul\":9980:10016   */\n      mstore\n        /* \"#utility.yul\":9970:10022   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10028:10136   */\n    tag_267:\n        /* \"#utility.yul\":10105:10129   */\n      tag_275\n        /* \"#utility.yul\":10123:10128   */\n      dup2\n        /* \"#utility.yul\":10105:10129   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10100:10103   */\n      dup3\n        /* \"#utility.yul\":10093:10130   */\n      mstore\n        /* \"#utility.yul\":10083:10136   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10142:10260   */\n    tag_277:\n        /* \"#utility.yul\":10229:10253   */\n      tag_279\n        /* \"#utility.yul\":10247:10252   */\n      dup2\n        /* \"#utility.yul\":10229:10253   */\n      tag_276\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10224:10227   */\n      dup3\n        /* \"#utility.yul\":10217:10254   */\n      mstore\n        /* \"#utility.yul\":10207:10260   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10266:10522   */\n    tag_46:\n        /* \"#utility.yul\":10378:10381   */\n      0x00\n        /* \"#utility.yul\":10393:10468   */\n      tag_281\n        /* \"#utility.yul\":10464:10467   */\n      dup3\n        /* \"#utility.yul\":10455:10461   */\n      dup5\n        /* \"#utility.yul\":10393:10468   */\n      tag_186\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10493:10495   */\n      0x14\n        /* \"#utility.yul\":10488:10491   */\n      dup3\n        /* \"#utility.yul\":10484:10496   */\n      add\n        /* \"#utility.yul\":10477:10496   */\n      swap2\n      pop\n        /* \"#utility.yul\":10513:10516   */\n      dup2\n        /* \"#utility.yul\":10506:10516   */\n      swap1\n      pop\n        /* \"#utility.yul\":10382:10522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10528:10799   */\n    tag_90:\n        /* \"#utility.yul\":10658:10661   */\n      0x00\n        /* \"#utility.yul\":10680:10773   */\n      tag_283\n        /* \"#utility.yul\":10769:10772   */\n      dup3\n        /* \"#utility.yul\":10760:10766   */\n      dup5\n        /* \"#utility.yul\":10680:10773   */\n      tag_217\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10673:10773   */\n      swap2\n      pop\n        /* \"#utility.yul\":10790:10793   */\n      dup2\n        /* \"#utility.yul\":10783:10793   */\n      swap1\n      pop\n        /* \"#utility.yul\":10662:10799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10805:11027   */\n    tag_15:\n        /* \"#utility.yul\":10898:10902   */\n      0x00\n        /* \"#utility.yul\":10936:10938   */\n      0x20\n        /* \"#utility.yul\":10925:10934   */\n      dup3\n        /* \"#utility.yul\":10921:10939   */\n      add\n        /* \"#utility.yul\":10913:10939   */\n      swap1\n      pop\n        /* \"#utility.yul\":10949:11020   */\n      tag_285\n        /* \"#utility.yul\":11017:11018   */\n      0x00\n        /* \"#utility.yul\":11006:11015   */\n      dup4\n        /* \"#utility.yul\":11002:11019   */\n      add\n        /* \"#utility.yul\":10993:10999   */\n      dup5\n        /* \"#utility.yul\":10949:11020   */\n      tag_182\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10903:11027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11033:11365   */\n    tag_61:\n        /* \"#utility.yul\":11154:11158   */\n      0x00\n        /* \"#utility.yul\":11192:11194   */\n      0x40\n        /* \"#utility.yul\":11181:11190   */\n      dup3\n        /* \"#utility.yul\":11177:11195   */\n      add\n        /* \"#utility.yul\":11169:11195   */\n      swap1\n      pop\n        /* \"#utility.yul\":11205:11276   */\n      tag_287\n        /* \"#utility.yul\":11273:11274   */\n      0x00\n        /* \"#utility.yul\":11262:11271   */\n      dup4\n        /* \"#utility.yul\":11258:11275   */\n      add\n        /* \"#utility.yul\":11249:11255   */\n      dup6\n        /* \"#utility.yul\":11205:11276   */\n      tag_182\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11286:11358   */\n      tag_288\n        /* \"#utility.yul\":11354:11356   */\n      0x20\n        /* \"#utility.yul\":11343:11352   */\n      dup4\n        /* \"#utility.yul\":11339:11357   */\n      add\n        /* \"#utility.yul\":11330:11336   */\n      dup5\n        /* \"#utility.yul\":11286:11358   */\n      tag_182\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11159:11365   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11371:11813   */\n    tag_56:\n        /* \"#utility.yul\":11520:11524   */\n      0x00\n        /* \"#utility.yul\":11558:11560   */\n      0x60\n        /* \"#utility.yul\":11547:11556   */\n      dup3\n        /* \"#utility.yul\":11543:11561   */\n      add\n        /* \"#utility.yul\":11535:11561   */\n      swap1\n      pop\n        /* \"#utility.yul\":11571:11642   */\n      tag_290\n        /* \"#utility.yul\":11639:11640   */\n      0x00\n        /* \"#utility.yul\":11628:11637   */\n      dup4\n        /* \"#utility.yul\":11624:11641   */\n      add\n        /* \"#utility.yul\":11615:11621   */\n      dup7\n        /* \"#utility.yul\":11571:11642   */\n      tag_182\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11652:11724   */\n      tag_291\n        /* \"#utility.yul\":11720:11722   */\n      0x20\n        /* \"#utility.yul\":11709:11718   */\n      dup4\n        /* \"#utility.yul\":11705:11723   */\n      add\n        /* \"#utility.yul\":11696:11702   */\n      dup6\n        /* \"#utility.yul\":11652:11724   */\n      tag_182\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11734:11806   */\n      tag_292\n        /* \"#utility.yul\":11802:11804   */\n      0x40\n        /* \"#utility.yul\":11791:11800   */\n      dup4\n        /* \"#utility.yul\":11787:11805   */\n      add\n        /* \"#utility.yul\":11778:11784   */\n      dup5\n        /* \"#utility.yul\":11734:11806   */\n      tag_277\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11525:11813   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11819:12151   */\n    tag_72:\n        /* \"#utility.yul\":11940:11944   */\n      0x00\n        /* \"#utility.yul\":11978:11980   */\n      0x40\n        /* \"#utility.yul\":11967:11976   */\n      dup3\n        /* \"#utility.yul\":11963:11981   */\n      add\n        /* \"#utility.yul\":11955:11981   */\n      swap1\n      pop\n        /* \"#utility.yul\":11991:12062   */\n      tag_294\n        /* \"#utility.yul\":12059:12060   */\n      0x00\n        /* \"#utility.yul\":12048:12057   */\n      dup4\n        /* \"#utility.yul\":12044:12061   */\n      add\n        /* \"#utility.yul\":12035:12041   */\n      dup6\n        /* \"#utility.yul\":11991:12062   */\n      tag_182\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":12072:12144   */\n      tag_295\n        /* \"#utility.yul\":12140:12142   */\n      0x20\n        /* \"#utility.yul\":12129:12138   */\n      dup4\n        /* \"#utility.yul\":12125:12143   */\n      add\n        /* \"#utility.yul\":12116:12122   */\n      dup5\n        /* \"#utility.yul\":12072:12144   */\n      tag_277\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":11945:12151   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12157:12375   */\n    tag_20:\n        /* \"#utility.yul\":12248:12252   */\n      0x00\n        /* \"#utility.yul\":12286:12288   */\n      0x20\n        /* \"#utility.yul\":12275:12284   */\n      dup3\n        /* \"#utility.yul\":12271:12289   */\n      add\n        /* \"#utility.yul\":12263:12289   */\n      swap1\n      pop\n        /* \"#utility.yul\":12299:12368   */\n      tag_297\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12354:12363   */\n      dup4\n        /* \"#utility.yul\":12350:12367   */\n      add\n        /* \"#utility.yul\":12341:12347   */\n      dup5\n        /* \"#utility.yul\":12299:12368   */\n      tag_191\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":12253:12375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12381:12694   */\n    tag_112:\n        /* \"#utility.yul\":12494:12498   */\n      0x00\n        /* \"#utility.yul\":12532:12534   */\n      0x20\n        /* \"#utility.yul\":12521:12530   */\n      dup3\n        /* \"#utility.yul\":12517:12535   */\n      add\n        /* \"#utility.yul\":12509:12535   */\n      swap1\n      pop\n        /* \"#utility.yul\":12581:12590   */\n      dup2\n        /* \"#utility.yul\":12575:12579   */\n      dup2\n        /* \"#utility.yul\":12571:12591   */\n      sub\n        /* \"#utility.yul\":12567:12568   */\n      0x00\n        /* \"#utility.yul\":12556:12565   */\n      dup4\n        /* \"#utility.yul\":12552:12569   */\n      add\n        /* \"#utility.yul\":12545:12592   */\n      mstore\n        /* \"#utility.yul\":12609:12687   */\n      tag_299\n        /* \"#utility.yul\":12682:12686   */\n      dup2\n        /* \"#utility.yul\":12673:12679   */\n      dup5\n        /* \"#utility.yul\":12609:12687   */\n      tag_231\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":12601:12687   */\n      swap1\n      pop\n        /* \"#utility.yul\":12499:12694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12700:13119   */\n    tag_33:\n        /* \"#utility.yul\":12866:12870   */\n      0x00\n        /* \"#utility.yul\":12904:12906   */\n      0x20\n        /* \"#utility.yul\":12893:12902   */\n      dup3\n        /* \"#utility.yul\":12889:12907   */\n      add\n        /* \"#utility.yul\":12881:12907   */\n      swap1\n      pop\n        /* \"#utility.yul\":12953:12962   */\n      dup2\n        /* \"#utility.yul\":12947:12951   */\n      dup2\n        /* \"#utility.yul\":12943:12963   */\n      sub\n        /* \"#utility.yul\":12939:12940   */\n      0x00\n        /* \"#utility.yul\":12928:12937   */\n      dup4\n        /* \"#utility.yul\":12924:12941   */\n      add\n        /* \"#utility.yul\":12917:12964   */\n      mstore\n        /* \"#utility.yul\":12981:13112   */\n      tag_301\n        /* \"#utility.yul\":13107:13111   */\n      dup2\n        /* \"#utility.yul\":12981:13112   */\n      tag_239\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":12973:13112   */\n      swap1\n      pop\n        /* \"#utility.yul\":12871:13119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13125:13544   */\n    tag_88:\n        /* \"#utility.yul\":13291:13295   */\n      0x00\n        /* \"#utility.yul\":13329:13331   */\n      0x20\n        /* \"#utility.yul\":13318:13327   */\n      dup3\n        /* \"#utility.yul\":13314:13332   */\n      add\n        /* \"#utility.yul\":13306:13332   */\n      swap1\n      pop\n        /* \"#utility.yul\":13378:13387   */\n      dup2\n        /* \"#utility.yul\":13372:13376   */\n      dup2\n        /* \"#utility.yul\":13368:13388   */\n      sub\n        /* \"#utility.yul\":13364:13365   */\n      0x00\n        /* \"#utility.yul\":13353:13362   */\n      dup4\n        /* \"#utility.yul\":13349:13366   */\n      add\n        /* \"#utility.yul\":13342:13389   */\n      mstore\n        /* \"#utility.yul\":13406:13537   */\n      tag_303\n        /* \"#utility.yul\":13532:13536   */\n      dup2\n        /* \"#utility.yul\":13406:13537   */\n      tag_244\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13398:13537   */\n      swap1\n      pop\n        /* \"#utility.yul\":13296:13544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13550:13969   */\n    tag_103:\n        /* \"#utility.yul\":13716:13720   */\n      0x00\n        /* \"#utility.yul\":13754:13756   */\n      0x20\n        /* \"#utility.yul\":13743:13752   */\n      dup3\n        /* \"#utility.yul\":13739:13757   */\n      add\n        /* \"#utility.yul\":13731:13757   */\n      swap1\n      pop\n        /* \"#utility.yul\":13803:13812   */\n      dup2\n        /* \"#utility.yul\":13797:13801   */\n      dup2\n        /* \"#utility.yul\":13793:13813   */\n      sub\n        /* \"#utility.yul\":13789:13790   */\n      0x00\n        /* \"#utility.yul\":13778:13787   */\n      dup4\n        /* \"#utility.yul\":13774:13791   */\n      add\n        /* \"#utility.yul\":13767:13814   */\n      mstore\n        /* \"#utility.yul\":13831:13962   */\n      tag_305\n        /* \"#utility.yul\":13957:13961   */\n      dup2\n        /* \"#utility.yul\":13831:13962   */\n      tag_249\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13823:13962   */\n      swap1\n      pop\n        /* \"#utility.yul\":13721:13969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13975:14394   */\n    tag_81:\n        /* \"#utility.yul\":14141:14145   */\n      0x00\n        /* \"#utility.yul\":14179:14181   */\n      0x20\n        /* \"#utility.yul\":14168:14177   */\n      dup3\n        /* \"#utility.yul\":14164:14182   */\n      add\n        /* \"#utility.yul\":14156:14182   */\n      swap1\n      pop\n        /* \"#utility.yul\":14228:14237   */\n      dup2\n        /* \"#utility.yul\":14222:14226   */\n      dup2\n        /* \"#utility.yul\":14218:14238   */\n      sub\n        /* \"#utility.yul\":14214:14215   */\n      0x00\n        /* \"#utility.yul\":14203:14212   */\n      dup4\n        /* \"#utility.yul\":14199:14216   */\n      add\n        /* \"#utility.yul\":14192:14239   */\n      mstore\n        /* \"#utility.yul\":14256:14387   */\n      tag_307\n        /* \"#utility.yul\":14382:14386   */\n      dup2\n        /* \"#utility.yul\":14256:14387   */\n      tag_254\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":14248:14387   */\n      swap1\n      pop\n        /* \"#utility.yul\":14146:14394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14400:14819   */\n    tag_69:\n        /* \"#utility.yul\":14566:14570   */\n      0x00\n        /* \"#utility.yul\":14604:14606   */\n      0x20\n        /* \"#utility.yul\":14593:14602   */\n      dup3\n        /* \"#utility.yul\":14589:14607   */\n      add\n        /* \"#utility.yul\":14581:14607   */\n      swap1\n      pop\n        /* \"#utility.yul\":14653:14662   */\n      dup2\n        /* \"#utility.yul\":14647:14651   */\n      dup2\n        /* \"#utility.yul\":14643:14663   */\n      sub\n        /* \"#utility.yul\":14639:14640   */\n      0x00\n        /* \"#utility.yul\":14628:14637   */\n      dup4\n        /* \"#utility.yul\":14624:14641   */\n      add\n        /* \"#utility.yul\":14617:14664   */\n      mstore\n        /* \"#utility.yul\":14681:14812   */\n      tag_309\n        /* \"#utility.yul\":14807:14811   */\n      dup2\n        /* \"#utility.yul\":14681:14812   */\n      tag_259\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":14673:14812   */\n      swap1\n      pop\n        /* \"#utility.yul\":14571:14819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14825:16354   */\n    tag_48:\n        /* \"#utility.yul\":15276:15280   */\n      0x00\n        /* \"#utility.yul\":15314:15317   */\n      0x0120\n        /* \"#utility.yul\":15303:15312   */\n      dup3\n        /* \"#utility.yul\":15299:15318   */\n      add\n        /* \"#utility.yul\":15291:15318   */\n      swap1\n      pop\n        /* \"#utility.yul\":15328:15397   */\n      tag_311\n        /* \"#utility.yul\":15394:15395   */\n      0x00\n        /* \"#utility.yul\":15383:15392   */\n      dup4\n        /* \"#utility.yul\":15379:15396   */\n      add\n        /* \"#utility.yul\":15370:15376   */\n      dup14\n        /* \"#utility.yul\":15328:15397   */\n      tag_270\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":15407:15487   */\n      tag_312\n        /* \"#utility.yul\":15483:15485   */\n      0x20\n        /* \"#utility.yul\":15472:15481   */\n      dup4\n        /* \"#utility.yul\":15468:15486   */\n      add\n        /* \"#utility.yul\":15459:15465   */\n      dup13\n        /* \"#utility.yul\":15407:15487   */\n      tag_227\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":15497:15577   */\n      tag_313\n        /* \"#utility.yul\":15573:15575   */\n      0x40\n        /* \"#utility.yul\":15562:15571   */\n      dup4\n        /* \"#utility.yul\":15558:15576   */\n      add\n        /* \"#utility.yul\":15549:15555   */\n      dup12\n        /* \"#utility.yul\":15497:15577   */\n      tag_227\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":15587:15675   */\n      tag_314\n        /* \"#utility.yul\":15671:15673   */\n      0x60\n        /* \"#utility.yul\":15660:15669   */\n      dup4\n        /* \"#utility.yul\":15656:15674   */\n      add\n        /* \"#utility.yul\":15647:15653   */\n      dup11\n        /* \"#utility.yul\":15587:15675   */\n      tag_178\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":15685:15758   */\n      tag_315\n        /* \"#utility.yul\":15753:15756   */\n      0x80\n        /* \"#utility.yul\":15742:15751   */\n      dup4\n        /* \"#utility.yul\":15738:15757   */\n      add\n        /* \"#utility.yul\":15729:15735   */\n      dup10\n        /* \"#utility.yul\":15685:15758   */\n      tag_277\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":15768:15849   */\n      tag_316\n        /* \"#utility.yul\":15844:15847   */\n      0xa0\n        /* \"#utility.yul\":15833:15842   */\n      dup4\n        /* \"#utility.yul\":15829:15848   */\n      add\n        /* \"#utility.yul\":15820:15826   */\n      dup9\n        /* \"#utility.yul\":15768:15849   */\n      tag_223\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":15897:15906   */\n      dup2\n        /* \"#utility.yul\":15891:15895   */\n      dup2\n        /* \"#utility.yul\":15887:15907   */\n      sub\n        /* \"#utility.yul\":15881:15884   */\n      0xc0\n        /* \"#utility.yul\":15870:15879   */\n      dup4\n        /* \"#utility.yul\":15866:15885   */\n      add\n        /* \"#utility.yul\":15859:15908   */\n      mstore\n        /* \"#utility.yul\":15925:16033   */\n      tag_317\n        /* \"#utility.yul\":16028:16032   */\n      dup2\n        /* \"#utility.yul\":16019:16025   */\n      dup8\n        /* \"#utility.yul\":15925:16033   */\n      tag_264\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":15917:16033   */\n      swap1\n      pop\n        /* \"#utility.yul\":16081:16090   */\n      dup2\n        /* \"#utility.yul\":16075:16079   */\n      dup2\n        /* \"#utility.yul\":16071:16091   */\n      sub\n        /* \"#utility.yul\":16065:16068   */\n      0xe0\n        /* \"#utility.yul\":16054:16063   */\n      dup4\n        /* \"#utility.yul\":16050:16069   */\n      add\n        /* \"#utility.yul\":16043:16092   */\n      mstore\n        /* \"#utility.yul\":16109:16185   */\n      tag_318\n        /* \"#utility.yul\":16180:16184   */\n      dup2\n        /* \"#utility.yul\":16171:16177   */\n      dup7\n        /* \"#utility.yul\":16109:16185   */\n      tag_211\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":16101:16185   */\n      swap1\n      pop\n        /* \"#utility.yul\":16233:16242   */\n      dup2\n        /* \"#utility.yul\":16227:16231   */\n      dup2\n        /* \"#utility.yul\":16223:16243   */\n      sub\n        /* \"#utility.yul\":16217:16220   */\n      0x0100\n        /* \"#utility.yul\":16206:16215   */\n      dup4\n        /* \"#utility.yul\":16202:16221   */\n      add\n        /* \"#utility.yul\":16195:16244   */\n      mstore\n        /* \"#utility.yul\":16261:16347   */\n      tag_319\n        /* \"#utility.yul\":16342:16346   */\n      dup2\n        /* \"#utility.yul\":16333:16339   */\n      dup5\n        /* \"#utility.yul\":16325:16331   */\n      dup7\n        /* \"#utility.yul\":16261:16347   */\n      tag_195\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":16253:16347   */\n      swap1\n      pop\n        /* \"#utility.yul\":15281:16354   */\n      swap12\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16360:16582   */\n    tag_39:\n        /* \"#utility.yul\":16453:16457   */\n      0x00\n        /* \"#utility.yul\":16491:16493   */\n      0x20\n        /* \"#utility.yul\":16480:16489   */\n      dup3\n        /* \"#utility.yul\":16476:16494   */\n      add\n        /* \"#utility.yul\":16468:16494   */\n      swap1\n      pop\n        /* \"#utility.yul\":16504:16575   */\n      tag_321\n        /* \"#utility.yul\":16572:16573   */\n      0x00\n        /* \"#utility.yul\":16561:16570   */\n      dup4\n        /* \"#utility.yul\":16557:16574   */\n      add\n        /* \"#utility.yul\":16548:16554   */\n      dup5\n        /* \"#utility.yul\":16504:16575   */\n      tag_277\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":16458:16582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16588:16717   */\n    tag_119:\n        /* \"#utility.yul\":16622:16628   */\n      0x00\n        /* \"#utility.yul\":16649:16669   */\n      tag_323\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":16639:16669   */\n      swap1\n      pop\n        /* \"#utility.yul\":16678:16711   */\n      tag_325\n        /* \"#utility.yul\":16706:16710   */\n      dup3\n        /* \"#utility.yul\":16698:16704   */\n      dup3\n        /* \"#utility.yul\":16678:16711   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":16629:16717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16723:16798   */\n    tag_324:\n        /* \"#utility.yul\":16756:16762   */\n      0x00\n        /* \"#utility.yul\":16789:16791   */\n      0x40\n        /* \"#utility.yul\":16783:16792   */\n      mload\n        /* \"#utility.yul\":16773:16792   */\n      swap1\n      pop\n        /* \"#utility.yul\":16763:16798   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16804:17111   */\n    tag_118:\n        /* \"#utility.yul\":16865:16869   */\n      0x00\n        /* \"#utility.yul\":16955:16973   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16947:16953   */\n      dup3\n        /* \"#utility.yul\":16944:16974   */\n      gt\n        /* \"#utility.yul\":16941:16943   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":16977:16995   */\n      tag_330\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":16941:16943   */\n    tag_329:\n        /* \"#utility.yul\":17015:17044   */\n      tag_332\n        /* \"#utility.yul\":17037:17043   */\n      dup3\n        /* \"#utility.yul\":17015:17044   */\n      tag_201\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":17007:17044   */\n      swap1\n      pop\n        /* \"#utility.yul\":17099:17103   */\n      0x20\n        /* \"#utility.yul\":17093:17097   */\n      dup2\n        /* \"#utility.yul\":17089:17104   */\n      add\n        /* \"#utility.yul\":17081:17104   */\n      swap1\n      pop\n        /* \"#utility.yul\":16870:17111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17117:17215   */\n    tag_205:\n        /* \"#utility.yul\":17168:17174   */\n      0x00\n        /* \"#utility.yul\":17202:17207   */\n      dup2\n        /* \"#utility.yul\":17196:17208   */\n      mload\n        /* \"#utility.yul\":17186:17208   */\n      swap1\n      pop\n        /* \"#utility.yul\":17175:17215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17221:17320   */\n    tag_234:\n        /* \"#utility.yul\":17273:17279   */\n      0x00\n        /* \"#utility.yul\":17307:17312   */\n      dup2\n        /* \"#utility.yul\":17301:17313   */\n      mload\n        /* \"#utility.yul\":17291:17313   */\n      swap1\n      pop\n        /* \"#utility.yul\":17280:17320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17326:17484   */\n    tag_207:\n        /* \"#utility.yul\":17399:17410   */\n      0x00\n        /* \"#utility.yul\":17433:17439   */\n      dup3\n        /* \"#utility.yul\":17428:17431   */\n      dup3\n        /* \"#utility.yul\":17421:17440   */\n      mstore\n        /* \"#utility.yul\":17473:17477   */\n      0x20\n        /* \"#utility.yul\":17468:17471   */\n      dup3\n        /* \"#utility.yul\":17464:17478   */\n      add\n        /* \"#utility.yul\":17449:17478   */\n      swap1\n      pop\n        /* \"#utility.yul\":17411:17484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17490:17658   */\n    tag_198:\n        /* \"#utility.yul\":17573:17584   */\n      0x00\n        /* \"#utility.yul\":17607:17613   */\n      dup3\n        /* \"#utility.yul\":17602:17605   */\n      dup3\n        /* \"#utility.yul\":17595:17614   */\n      mstore\n        /* \"#utility.yul\":17647:17651   */\n      0x20\n        /* \"#utility.yul\":17642:17645   */\n      dup3\n        /* \"#utility.yul\":17638:17652   */\n      add\n        /* \"#utility.yul\":17623:17652   */\n      swap1\n      pop\n        /* \"#utility.yul\":17585:17658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17664:17811   */\n    tag_221:\n        /* \"#utility.yul\":17765:17776   */\n      0x00\n        /* \"#utility.yul\":17802:17805   */\n      dup2\n        /* \"#utility.yul\":17787:17805   */\n      swap1\n      pop\n        /* \"#utility.yul\":17777:17811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17817:17986   */\n    tag_236:\n        /* \"#utility.yul\":17901:17912   */\n      0x00\n        /* \"#utility.yul\":17935:17941   */\n      dup3\n        /* \"#utility.yul\":17930:17933   */\n      dup3\n        /* \"#utility.yul\":17923:17942   */\n      mstore\n        /* \"#utility.yul\":17975:17979   */\n      0x20\n        /* \"#utility.yul\":17970:17973   */\n      dup3\n        /* \"#utility.yul\":17966:17980   */\n      add\n        /* \"#utility.yul\":17951:17980   */\n      swap1\n      pop\n        /* \"#utility.yul\":17913:17986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17992:18088   */\n    tag_185:\n        /* \"#utility.yul\":18029:18036   */\n      0x00\n        /* \"#utility.yul\":18058:18082   */\n      tag_340\n        /* \"#utility.yul\":18076:18081   */\n      dup3\n        /* \"#utility.yul\":18058:18082   */\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":18047:18082   */\n      swap1\n      pop\n        /* \"#utility.yul\":18037:18088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18094:18198   */\n    tag_181:\n        /* \"#utility.yul\":18139:18146   */\n      0x00\n        /* \"#utility.yul\":18168:18192   */\n      tag_343\n        /* \"#utility.yul\":18186:18191   */\n      dup3\n        /* \"#utility.yul\":18168:18192   */\n      tag_341\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":18157:18192   */\n      swap1\n      pop\n        /* \"#utility.yul\":18147:18198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18204:18294   */\n    tag_344:\n        /* \"#utility.yul\":18238:18245   */\n      0x00\n        /* \"#utility.yul\":18281:18286   */\n      dup2\n        /* \"#utility.yul\":18274:18287   */\n      iszero\n        /* \"#utility.yul\":18267:18288   */\n      iszero\n        /* \"#utility.yul\":18256:18288   */\n      swap1\n      pop\n        /* \"#utility.yul\":18246:18294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18300:18449   */\n    tag_194:\n        /* \"#utility.yul\":18336:18343   */\n      0x00\n        /* \"#utility.yul\":18376:18442   */\n      0xffff000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18369:18374   */\n      dup3\n        /* \"#utility.yul\":18365:18443   */\n      and\n        /* \"#utility.yul\":18354:18443   */\n      swap1\n      pop\n        /* \"#utility.yul\":18344:18449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18455:18544   */\n    tag_273:\n        /* \"#utility.yul\":18491:18498   */\n      0x00\n        /* \"#utility.yul\":18531:18537   */\n      0xffff\n        /* \"#utility.yul\":18524:18529   */\n      dup3\n        /* \"#utility.yul\":18520:18538   */\n      and\n        /* \"#utility.yul\":18509:18538   */\n      swap1\n      pop\n        /* \"#utility.yul\":18499:18544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18550:18676   */\n    tag_341:\n        /* \"#utility.yul\":18587:18594   */\n      0x00\n        /* \"#utility.yul\":18627:18669   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18620:18625   */\n      dup3\n        /* \"#utility.yul\":18616:18670   */\n      and\n        /* \"#utility.yul\":18605:18670   */\n      swap1\n      pop\n        /* \"#utility.yul\":18595:18676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18682:18759   */\n    tag_276:\n        /* \"#utility.yul\":18719:18726   */\n      0x00\n        /* \"#utility.yul\":18748:18753   */\n      dup2\n        /* \"#utility.yul\":18737:18753   */\n      swap1\n      pop\n        /* \"#utility.yul\":18727:18759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18765:18886   */\n    tag_226:\n        /* \"#utility.yul\":18823:18832   */\n      0x00\n        /* \"#utility.yul\":18856:18880   */\n      tag_351\n        /* \"#utility.yul\":18874:18879   */\n      dup3\n        /* \"#utility.yul\":18856:18880   */\n      tag_276\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":18843:18880   */\n      swap1\n      pop\n        /* \"#utility.yul\":18833:18886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18892:19013   */\n    tag_230:\n        /* \"#utility.yul\":18950:18959   */\n      0x00\n        /* \"#utility.yul\":18983:19007   */\n      tag_353\n        /* \"#utility.yul\":19001:19006   */\n      dup3\n        /* \"#utility.yul\":18983:19007   */\n      tag_276\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":18970:19007   */\n      swap1\n      pop\n        /* \"#utility.yul\":18960:19013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19019:19173   */\n    tag_122:\n        /* \"#utility.yul\":19103:19109   */\n      dup3\n        /* \"#utility.yul\":19098:19101   */\n      dup2\n        /* \"#utility.yul\":19093:19096   */\n      dup4\n        /* \"#utility.yul\":19080:19110   */\n      calldatacopy\n        /* \"#utility.yul\":19165:19166   */\n      0x00\n        /* \"#utility.yul\":19156:19162   */\n      dup4\n        /* \"#utility.yul\":19151:19154   */\n      dup4\n        /* \"#utility.yul\":19147:19163   */\n      add\n        /* \"#utility.yul\":19140:19167   */\n      mstore\n        /* \"#utility.yul\":19070:19173   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19179:19486   */\n    tag_209:\n        /* \"#utility.yul\":19247:19248   */\n      0x00\n        /* \"#utility.yul\":19257:19370   */\n    tag_356:\n        /* \"#utility.yul\":19271:19277   */\n      dup4\n        /* \"#utility.yul\":19268:19269   */\n      dup2\n        /* \"#utility.yul\":19265:19278   */\n      lt\n        /* \"#utility.yul\":19257:19370   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":19356:19357   */\n      dup1\n        /* \"#utility.yul\":19351:19354   */\n      dup3\n        /* \"#utility.yul\":19347:19358   */\n      add\n        /* \"#utility.yul\":19341:19359   */\n      mload\n        /* \"#utility.yul\":19337:19338   */\n      dup2\n        /* \"#utility.yul\":19332:19335   */\n      dup5\n        /* \"#utility.yul\":19328:19339   */\n      add\n        /* \"#utility.yul\":19321:19360   */\n      mstore\n        /* \"#utility.yul\":19293:19295   */\n      0x20\n        /* \"#utility.yul\":19290:19291   */\n      dup2\n        /* \"#utility.yul\":19286:19296   */\n      add\n        /* \"#utility.yul\":19281:19296   */\n      swap1\n      pop\n        /* \"#utility.yul\":19257:19370   */\n      jump(tag_356)\n    tag_358:\n        /* \"#utility.yul\":19388:19394   */\n      dup4\n        /* \"#utility.yul\":19385:19386   */\n      dup2\n        /* \"#utility.yul\":19382:19395   */\n      gt\n        /* \"#utility.yul\":19379:19381   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":19468:19469   */\n      0x00\n        /* \"#utility.yul\":19459:19465   */\n      dup5\n        /* \"#utility.yul\":19454:19457   */\n      dup5\n        /* \"#utility.yul\":19450:19466   */\n      add\n        /* \"#utility.yul\":19443:19470   */\n      mstore\n        /* \"#utility.yul\":19379:19381   */\n    tag_359:\n        /* \"#utility.yul\":19228:19486   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19492:19773   */\n    tag_326:\n        /* \"#utility.yul\":19575:19602   */\n      tag_361\n        /* \"#utility.yul\":19597:19601   */\n      dup3\n        /* \"#utility.yul\":19575:19602   */\n      tag_201\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":19567:19573   */\n      dup2\n        /* \"#utility.yul\":19563:19603   */\n      add\n        /* \"#utility.yul\":19705:19711   */\n      dup2\n        /* \"#utility.yul\":19693:19703   */\n      dup2\n        /* \"#utility.yul\":19690:19712   */\n      lt\n        /* \"#utility.yul\":19669:19687   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19657:19667   */\n      dup3\n        /* \"#utility.yul\":19654:19688   */\n      gt\n        /* \"#utility.yul\":19651:19713   */\n      or\n        /* \"#utility.yul\":19648:19650   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":19716:19734   */\n      tag_363\n      tag_331\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":19648:19650   */\n    tag_362:\n        /* \"#utility.yul\":19756:19766   */\n      dup1\n        /* \"#utility.yul\":19752:19754   */\n      0x40\n        /* \"#utility.yul\":19745:19767   */\n      mstore\n        /* \"#utility.yul\":19535:19773   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19779:19879   */\n    tag_190:\n        /* \"#utility.yul\":19818:19825   */\n      0x00\n        /* \"#utility.yul\":19847:19873   */\n      tag_365\n        /* \"#utility.yul\":19867:19872   */\n      dup3\n        /* \"#utility.yul\":19847:19873   */\n      tag_366\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":19836:19873   */\n      swap1\n      pop\n        /* \"#utility.yul\":19826:19879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19885:19979   */\n    tag_366:\n        /* \"#utility.yul\":19924:19931   */\n      0x00\n        /* \"#utility.yul\":19953:19973   */\n      tag_368\n        /* \"#utility.yul\":19967:19972   */\n      dup3\n        /* \"#utility.yul\":19953:19973   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":19942:19973   */\n      swap1\n      pop\n        /* \"#utility.yul\":19932:19979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19985:20165   */\n    tag_331:\n        /* \"#utility.yul\":20033:20110   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20030:20031   */\n      0x00\n        /* \"#utility.yul\":20023:20111   */\n      mstore\n        /* \"#utility.yul\":20130:20134   */\n      0x41\n        /* \"#utility.yul\":20127:20128   */\n      0x04\n        /* \"#utility.yul\":20120:20135   */\n      mstore\n        /* \"#utility.yul\":20154:20158   */\n      0x24\n        /* \"#utility.yul\":20151:20152   */\n      0x00\n        /* \"#utility.yul\":20144:20159   */\n      revert\n        /* \"#utility.yul\":20171:20273   */\n    tag_201:\n        /* \"#utility.yul\":20212:20218   */\n      0x00\n        /* \"#utility.yul\":20263:20265   */\n      0x1f\n        /* \"#utility.yul\":20259:20266   */\n      not\n        /* \"#utility.yul\":20254:20256   */\n      0x1f\n        /* \"#utility.yul\":20247:20252   */\n      dup4\n        /* \"#utility.yul\":20243:20257   */\n      add\n        /* \"#utility.yul\":20239:20267   */\n      and\n        /* \"#utility.yul\":20229:20267   */\n      swap1\n      pop\n        /* \"#utility.yul\":20219:20273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20279:20373   */\n    tag_369:\n        /* \"#utility.yul\":20312:20320   */\n      0x00\n        /* \"#utility.yul\":20360:20365   */\n      dup2\n        /* \"#utility.yul\":20356:20358   */\n      0x60\n        /* \"#utility.yul\":20352:20366   */\n      shl\n        /* \"#utility.yul\":20331:20366   */\n      swap1\n      pop\n        /* \"#utility.yul\":20321:20373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20379:20621   */\n    tag_243:\n        /* \"#utility.yul\":20519:20553   */\n      0x73746172676174652072657175697265732061206d73672e76616c756520746f\n        /* \"#utility.yul\":20515:20516   */\n      0x00\n        /* \"#utility.yul\":20507:20513   */\n      dup3\n        /* \"#utility.yul\":20503:20517   */\n      add\n        /* \"#utility.yul\":20496:20554   */\n      mstore\n        /* \"#utility.yul\":20588:20613   */\n      0x207061792063726f7373636861696e206d657373616765000000000000000000\n        /* \"#utility.yul\":20583:20585   */\n      0x20\n        /* \"#utility.yul\":20575:20581   */\n      dup3\n        /* \"#utility.yul\":20571:20586   */\n      add\n        /* \"#utility.yul\":20564:20614   */\n      mstore\n        /* \"#utility.yul\":20485:20621   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20627:20852   */\n    tag_248:\n        /* \"#utility.yul\":20767:20801   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":20763:20764   */\n      0x00\n        /* \"#utility.yul\":20755:20761   */\n      dup3\n        /* \"#utility.yul\":20751:20765   */\n      add\n        /* \"#utility.yul\":20744:20802   */\n      mstore\n        /* \"#utility.yul\":20836:20844   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20831:20833   */\n      0x20\n        /* \"#utility.yul\":20823:20829   */\n      dup3\n        /* \"#utility.yul\":20819:20834   */\n      add\n        /* \"#utility.yul\":20812:20845   */\n      mstore\n        /* \"#utility.yul\":20733:20852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20858:21037   */\n    tag_253:\n        /* \"#utility.yul\":20998:21029   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":20994:20995   */\n      0x00\n        /* \"#utility.yul\":20986:20992   */\n      dup3\n        /* \"#utility.yul\":20982:20996   */\n      add\n        /* \"#utility.yul\":20975:21030   */\n      mstore\n        /* \"#utility.yul\":20964:21037   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21043:21272   */\n    tag_258:\n        /* \"#utility.yul\":21183:21217   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21179:21180   */\n      0x00\n        /* \"#utility.yul\":21171:21177   */\n      dup3\n        /* \"#utility.yul\":21167:21181   */\n      add\n        /* \"#utility.yul\":21160:21218   */\n      mstore\n        /* \"#utility.yul\":21252:21264   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21247:21249   */\n      0x20\n        /* \"#utility.yul\":21239:21245   */\n      dup3\n        /* \"#utility.yul\":21235:21250   */\n      add\n        /* \"#utility.yul\":21228:21265   */\n      mstore\n        /* \"#utility.yul\":21149:21272   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21278:21519   */\n    tag_263:\n        /* \"#utility.yul\":21418:21452   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":21414:21415   */\n      0x00\n        /* \"#utility.yul\":21406:21412   */\n      dup3\n        /* \"#utility.yul\":21402:21416   */\n      add\n        /* \"#utility.yul\":21395:21453   */\n      mstore\n        /* \"#utility.yul\":21487:21511   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":21482:21484   */\n      0x20\n        /* \"#utility.yul\":21474:21480   */\n      dup3\n        /* \"#utility.yul\":21470:21485   */\n      add\n        /* \"#utility.yul\":21463:21512   */\n      mstore\n        /* \"#utility.yul\":21384:21519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21525:21647   */\n    tag_126:\n        /* \"#utility.yul\":21598:21622   */\n      tag_379\n        /* \"#utility.yul\":21616:21621   */\n      dup2\n        /* \"#utility.yul\":21598:21622   */\n      tag_185\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":21591:21596   */\n      dup2\n        /* \"#utility.yul\":21588:21623   */\n      eq\n        /* \"#utility.yul\":21578:21580   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":21637:21638   */\n      0x00\n        /* \"#utility.yul\":21634:21635   */\n      dup1\n        /* \"#utility.yul\":21627:21639   */\n      revert\n        /* \"#utility.yul\":21578:21580   */\n    tag_380:\n        /* \"#utility.yul\":21568:21647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21653:21769   */\n    tag_130:\n        /* \"#utility.yul\":21723:21744   */\n      tag_382\n        /* \"#utility.yul\":21738:21743   */\n      dup2\n        /* \"#utility.yul\":21723:21744   */\n      tag_344\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":21716:21721   */\n      dup2\n        /* \"#utility.yul\":21713:21745   */\n      eq\n        /* \"#utility.yul\":21703:21705   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":21759:21760   */\n      0x00\n        /* \"#utility.yul\":21756:21757   */\n      dup1\n        /* \"#utility.yul\":21749:21761   */\n      revert\n        /* \"#utility.yul\":21703:21705   */\n    tag_383:\n        /* \"#utility.yul\":21693:21769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21775:21895   */\n    tag_143:\n        /* \"#utility.yul\":21847:21870   */\n      tag_385\n        /* \"#utility.yul\":21864:21869   */\n      dup2\n        /* \"#utility.yul\":21847:21870   */\n      tag_273\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":21840:21845   */\n      dup2\n        /* \"#utility.yul\":21837:21871   */\n      eq\n        /* \"#utility.yul\":21827:21829   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":21885:21886   */\n      0x00\n        /* \"#utility.yul\":21882:21883   */\n      dup1\n        /* \"#utility.yul\":21875:21887   */\n      revert\n        /* \"#utility.yul\":21827:21829   */\n    tag_386:\n        /* \"#utility.yul\":21817:21895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21901:22023   */\n    tag_150:\n        /* \"#utility.yul\":21974:21998   */\n      tag_388\n        /* \"#utility.yul\":21992:21997   */\n      dup2\n        /* \"#utility.yul\":21974:21998   */\n      tag_276\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":21967:21972   */\n      dup2\n        /* \"#utility.yul\":21964:21999   */\n      eq\n        /* \"#utility.yul\":21954:21956   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":22013:22014   */\n      0x00\n        /* \"#utility.yul\":22010:22011   */\n      dup1\n        /* \"#utility.yul\":22003:22015   */\n      revert\n        /* \"#utility.yul\":21954:21956   */\n    tag_389:\n        /* \"#utility.yul\":21944:22023   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072c80231e4ffbb7c5debad3620fb834b353fb52bd05b6cbee264a52e1009ec9a64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1117:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "7:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:485:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "322:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "325:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "315:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "288:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "297:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "280:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:32:9"
															},
															"nodeType": "YulIf",
															"src": "277:2:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "339:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "354:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "368:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "358:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "383:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "429:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "440:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "425:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "425:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "449:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "393:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "393:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "383:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "477:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "492:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "506:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "496:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "522:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "568:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "579:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "564:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "564:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "532:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "532:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "522:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "616:129:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "631:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "645:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "635:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "661:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "707:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "718:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "703:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "703:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "727:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "671:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "661:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "252:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "260:6:9",
														"type": ""
													}
												],
												"src": "156:596:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "803:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "813:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "842:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "824:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "813:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "785:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "795:7:9",
														"type": ""
													}
												],
												"src": "758:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "915:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "930:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "915:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "887:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "897:7:9",
														"type": ""
													}
												],
												"src": "860:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1035:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1104:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1058:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1083:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1065:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1065:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1055:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1055:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:43:9"
															},
															"nodeType": "YulIf",
															"src": "1045:2:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1028:5:9",
														"type": ""
													}
												],
												"src": "992:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2789 PUSH1 0x1 PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x277A PUSH1 0x1 PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xDF0360AD8C5CCF25095AA97EE5F2785C8D848620 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1751 CODESIZE SUB DUP1 PUSH3 0x1751 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x1AC JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x250 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1A6 DUP2 PUSH3 0x236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1D2 DUP7 DUP3 DUP8 ADD PUSH3 0x195 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1E5 DUP7 DUP3 DUP8 ADD PUSH3 0x195 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1F8 DUP7 DUP3 DUP8 ADD PUSH3 0x195 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20F DUP3 PUSH3 0x216 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x241 DUP2 PUSH3 0x202 JUMP JUMPDEST DUP2 EQ PUSH3 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14F1 DUP1 PUSH3 0x260 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3576CA46 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0xA9E56F3C EQ PUSH2 0x6B JUMPI DUP1 PUSH4 0xAA37DB6C EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xAB8236F3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDD1BC08E EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x115 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x158 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A7 CALLER ADDRESS DUP6 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x472 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x214 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4FB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x977F2CB9 CHAINID PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0xA48 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9FBF10FC CALLVALUE PUSH1 0x1 PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x1 DUP1 CALLER DUP11 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x30D40 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP14 DUP14 PUSH1 0x40 MLOAD DUP13 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL DUP2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4F5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x493 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x659 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x594 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP3 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST EQ JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CA SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x654 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5F2 SWAP3 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x659 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x721 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x6DD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST JUMPDEST PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x730 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x739 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7FA DUP8 DUP4 DUP4 DUP8 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x861 JUMPI PUSH2 0x821 DUP6 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x874 JUMP JUMPDEST PUSH2 0x873 DUP4 DUP4 PUSH2 0x89F JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x8B2 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x902 PUSH2 0x8FD DUP5 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x925 DUP5 DUP3 DUP6 PUSH2 0x1216 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x951 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9C2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9DA DUP2 PUSH2 0x148D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9EF DUP2 PUSH2 0x148D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA04 DUP2 PUSH2 0x14A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA19 DUP2 PUSH2 0x14A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP5 DUP3 DUP6 ADD PUSH2 0x942 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA68 DUP5 DUP3 DUP6 ADD PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA98 DUP10 DUP3 DUP11 ADD PUSH2 0x9CB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC1 DUP10 DUP3 DUP11 ADD PUSH2 0x9A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xAD2 DUP10 DUP3 DUP11 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xAE3 DUP10 DUP3 DUP11 ADD PUSH2 0x92D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xAF4 DUP10 DUP3 DUP11 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1D DUP10 DUP3 DUP11 ADD PUSH2 0x9A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xA0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP7 DUP3 DUP8 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9F DUP7 DUP3 DUP8 ADD PUSH2 0x957 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0x1170 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0x115E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBDA PUSH2 0xBD5 DUP3 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x1289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBE9 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFB DUP4 DUP6 PUSH2 0x1131 JUMP JUMPDEST SWAP4 POP PUSH2 0xC08 DUP4 DUP6 DUP5 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0xC11 DUP4 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC27 DUP3 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xC31 DUP2 DUP6 PUSH2 0x1120 JUMP JUMPDEST SWAP4 POP PUSH2 0xC41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC60 DUP3 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xC6A DUP2 DUP6 PUSH2 0x1131 JUMP JUMPDEST SWAP4 POP PUSH2 0xC7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xC83 DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP3 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xCA3 DUP2 DUP6 PUSH2 0x1142 JUMP JUMPDEST SWAP4 POP PUSH2 0xCB3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x11F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 DUP3 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xCF2 DUP2 DUP6 PUSH2 0x114D JUMP JUMPDEST SWAP4 POP PUSH2 0xD02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x37 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0x26 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH1 0x1D DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 DUP3 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8C PUSH1 0x2A DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD97 DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF PUSH1 0x36 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xDBA DUP3 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xDDD PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xE24 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xDF0 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xE24 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xE08 DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1E DUP2 PUSH2 0x11BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE2D DUP2 PUSH2 0x11E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x11E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE69 DUP3 DUP5 PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEA4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xEB1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xECD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xF11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF4D DUP2 DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8E DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFAE DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFCE DUP2 PUSH2 0xD7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFEE DUP2 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x100B PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x1018 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x1032 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0x103F PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x104C PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xCBF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x105E DUP2 DUP8 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x1072 DUP2 DUP7 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x1088 DUP2 DUP5 DUP7 PUSH2 0xBEF JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BE PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP PUSH2 0x10CA DUP3 DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10F4 JUMPI PUSH2 0x10F3 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH2 0x10FD DUP3 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP3 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117B DUP3 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FD DUP3 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120F DUP3 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1243 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1228 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1261 DUP3 PUSH2 0x12DC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1280 JUMPI PUSH2 0x127F PUSH2 0x12AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1294 DUP3 PUSH2 0x129B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A6 DUP3 PUSH2 0x12ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73746172676174652072657175697265732061206D73672E76616C756520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207061792063726F7373636861696E206D657373616765000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x115E JUMP JUMPDEST DUP2 EQ PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x147F DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP2 EQ PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1496 DUP2 PUSH2 0x11BA JUMP JUMPDEST DUP2 EQ PUSH2 0x14A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14AD DUP2 PUSH2 0x11E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC80231E4FFBB7C5DEBAD3620FB834B353FB52B 0xD0 JUMPDEST PUSH13 0xBEE264A52E1009EC9A64736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "389:3309:4:-:0;;;705:5;687:23;;;;;;;;;;;;;;;;;;;;733:5;717:21;;;;;;;;;;;;;;;;;;;;762:42;747:57;;;;;;;;;;;;;;;;;;;;941:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1061:15;1044:14;;:32;;;;;;;;;;;;;;;;;;1108:19;1087:18;;:40;;;;;;;;;;;;;;;;;;1156:16;1138:15;;:34;;;;;;;;;;;;;;;;;;941:241;;;389:3309;;7:143:9;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:596::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:2;;;325:1;322;315:12;277:2;368:1;393:64;449:7;440:6;429:9;425:22;393:64;:::i;:::-;383:74;;339:128;506:2;532:64;588:7;579:6;568:9;564:22;532:64;:::i;:::-;522:74;;477:129;645:2;671:64;727:7;718:6;707:9;703:22;671:64;:::i;:::-;661:74;;616:129;267:485;;;;;:::o;758:96::-;795:7;824:24;842:5;824:24;:::i;:::-;813:35;;803:51;;;:::o;860:126::-;897:7;937:42;930:5;926:54;915:65;;905:81;;;:::o;992:122::-;1065:24;1083:5;1065:24;:::i;:::-;1058:5;1055:35;1045:2;;1104:1;1101;1094:12;1045:2;1035:79;:::o;389:3309:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22026:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:260:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "287:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "290:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "280:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:9"
															},
															"nodeType": "YulIf",
															"src": "249:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "327:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "332:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "337:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "303:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:9",
														"type": ""
													}
												],
												"src": "7:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "408:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "418:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "440:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "418:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "483:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "456:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "386:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "394:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "402:5:9",
														"type": ""
													}
												],
												"src": "356:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "561:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "571:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "586:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "580:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "580:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "571:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "626:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "602:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "539:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "547:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "555:5:9",
														"type": ""
													}
												],
												"src": "501:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "731:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "780:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "759:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "767:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "755:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "755:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "774:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "751:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "751:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:35:9"
															},
															"nodeType": "YulIf",
															"src": "741:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "805:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "815:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "850:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "858:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "847:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:30:9"
															},
															"nodeType": "YulIf",
															"src": "844:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "919:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "927:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "915:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "903:8:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "986:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "995:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "998:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "988:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "988:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "988:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "951:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "965:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "973:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "961:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "961:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "947:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "981:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "944:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:41:9"
															},
															"nodeType": "YulIf",
															"src": "941:2:9"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "698:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "706:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "714:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "724:6:9",
														"type": ""
													}
												],
												"src": "657:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1088:210:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1116:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1124:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1112:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1112:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1131:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:35:9"
															},
															"nodeType": "YulIf",
															"src": "1098:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1162:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1176:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1166:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1273:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1261:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1280:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1288:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1214:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1066:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1074:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1082:5:9",
														"type": ""
													}
												],
												"src": "1027:271:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1355:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1365:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1387:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1374:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1365:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1429:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1403:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1333:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1341:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1349:5:9",
														"type": ""
													}
												],
												"src": "1304:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1509:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1519:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1534:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1528:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1519:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1576:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1550:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1550:32:9"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1487:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1495:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1503:5:9",
														"type": ""
													}
												],
												"src": "1447:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1646:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1656:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1678:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1665:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1656:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1721:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1694:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1694:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1624:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1632:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1640:5:9",
														"type": ""
													}
												],
												"src": "1594:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1802:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1812:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1821:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1812:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1870:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1843:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1780:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1788:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1796:5:9",
														"type": ""
													}
												],
												"src": "1739:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1962:204:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2008:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2017:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2020:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2010:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2010:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2010:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1983:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1992:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2004:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1975:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:32:9"
															},
															"nodeType": "YulIf",
															"src": "1972:2:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2034:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2049:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2063:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2053:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2078:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2121:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2132:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2117:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2117:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2141:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2088:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2078:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1932:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1943:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1955:6:9",
														"type": ""
													}
												],
												"src": "1888:278:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:206:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2294:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2303:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2306:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2296:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2296:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2296:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2269:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2278:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2290:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:32:9"
															},
															"nodeType": "YulIf",
															"src": "2258:2:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2320:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2335:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2339:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2364:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2409:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2420:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2405:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2405:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2429:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2374:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2374:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2364:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2218:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2229:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2241:6:9",
														"type": ""
													}
												],
												"src": "2172:282:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2628:1042:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2675:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2649:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2658:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2645:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2645:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2670:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2641:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:33:9"
															},
															"nodeType": "YulIf",
															"src": "2638:2:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2701:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2716:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2730:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2720:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2745:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2779:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2790:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2775:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2775:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2799:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "2755:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2755:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2745:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2827:220:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2842:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2873:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2884:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2869:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2869:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2856:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2846:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2935:16:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2944:1:9",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2947:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "2937:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2937:12:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2937:12:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2907:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2915:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2904:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "2901:2:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2965:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3009:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3005:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2975:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3057:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3072:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3086:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3137:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3133:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3112:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3185:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3200:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3214:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3265:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3240:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3230:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3313:119:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3328:17:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3342:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3332:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3359:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3394:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3405:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3390:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3390:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3414:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3369:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3369:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3359:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3442:221:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3457:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3488:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3499:3:9",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3484:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3471:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3471:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3461:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3551:16:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3560:1:9",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3563:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "3553:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3553:12:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3553:12:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3523:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3531:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3520:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3520:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3517:2:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3581:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3625:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3636:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3621:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3621:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3645:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3591:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3581:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2569:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2581:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2589:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2597:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2605:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2613:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2621:6:9",
														"type": ""
													}
												],
												"src": "2460:1210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3753:207:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3799:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3808:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3811:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3801:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3801:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3801:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3774:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3783:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3795:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3766:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3766:32:9"
															},
															"nodeType": "YulIf",
															"src": "3763:2:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3825:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3840:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3844:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3869:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3915:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3926:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3935:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3879:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3879:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3869:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3723:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3734:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3746:6:9",
														"type": ""
													}
												],
												"src": "3676:284:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4068:436:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4114:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4123:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4126:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4116:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4116:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4116:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4089:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4098:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4085:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4085:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4110:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:32:9"
															},
															"nodeType": "YulIf",
															"src": "4078:2:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4140:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4155:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4169:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4159:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4184:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4219:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4230:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4215:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4215:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4239:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4194:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4184:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4267:230:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4282:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4313:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4324:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4309:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4309:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4296:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4296:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4286:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4375:16:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4384:1:9",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4387:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4377:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4377:12:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4377:12:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4347:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4355:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4344:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4341:2:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4405:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4459:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4470:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4455:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4455:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4479:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4423:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4423:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4405:6:9"
																		},
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4413:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4022:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4033:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4045:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4053:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4061:6:9",
														"type": ""
													}
												],
												"src": "3966:538:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4639:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "4613:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4613:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:45:9"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4579:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4586:3:9",
														"type": ""
													}
												],
												"src": "4510:142:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4723:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4740:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4763:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4745:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4745:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4733:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4733:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4711:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4718:3:9",
														"type": ""
													}
												],
												"src": "4658:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4865:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4882:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4925:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4907:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4907:24:9"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4887:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4887:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4875:58:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4853:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4860:3:9",
														"type": ""
													}
												],
												"src": "4782:157:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5008:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5025:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5047:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes2",
																			"nodeType": "YulIdentifier",
																			"src": "5030:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5018:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5018:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes2_to_t_bytes2_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4996:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5003:3:9",
														"type": ""
													}
												],
												"src": "4945:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5188:201:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5198:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5263:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5205:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5205:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5309:5:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5316:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5321:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5285:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5285:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5337:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5348:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5375:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5353:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5344:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5344:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5337:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5161:5:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5168:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5176:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5184:3:9",
														"type": ""
													}
												],
												"src": "5088:301:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5475:260:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5485:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5531:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5499:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5489:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5546:67:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5601:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5553:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:60:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5648:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5655:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5644:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5662:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5667:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5622:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5622:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5622:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5683:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5694:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5721:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5699:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5690:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5456:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5463:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5471:3:9",
														"type": ""
													}
												],
												"src": "5395:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5831:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5841:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5887:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5855:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5845:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5967:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5972:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5909:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6014:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6010:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6010:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6028:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6033:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5988:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5988:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6049:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6060:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6065:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6065:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6049:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5812:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5819:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5827:3:9",
														"type": ""
													}
												],
												"src": "5741:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6215:265:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6225:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6271:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6239:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6229:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6286:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6369:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6374:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6293:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6293:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6416:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6423:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6412:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6412:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6430:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6390:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6390:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6451:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6462:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6467:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6458:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6196:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6203:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6211:3:9",
														"type": ""
													}
												],
												"src": "6107:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6559:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6576:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6620:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6581:38:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6569:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6547:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6554:3:9",
														"type": ""
													}
												],
												"src": "6486:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6712:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6729:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6773:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6734:38:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6734:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6722:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6722:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6700:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6707:3:9",
														"type": ""
													}
												],
												"src": "6639:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6884:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6894:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6941:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6908:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6898:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6956:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7022:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7027:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6963:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7069:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7076:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7065:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7065:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7083:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7088:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7043:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7043:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7104:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7115:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7142:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7120:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7120:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7104:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6865:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6872:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6880:3:9",
														"type": ""
													}
												],
												"src": "6792:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7308:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7318:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7384:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7389:2:9",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7325:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7325:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7318:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7490:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317",
																	"nodeType": "YulIdentifier",
																	"src": "7401:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7401:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7401:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7503:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7514:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7510:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7510:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7503:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7296:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7304:3:9",
														"type": ""
													}
												],
												"src": "7162:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7680:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7690:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7756:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7697:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7690:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7862:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "7773:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7875:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7891:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7668:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7676:3:9",
														"type": ""
													}
												],
												"src": "7534:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8052:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8062:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8128:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8133:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8069:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8062:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8234:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "8145:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8145:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8145:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8247:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8258:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8254:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8254:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8040:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8048:3:9",
														"type": ""
													}
												],
												"src": "7906:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8424:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8434:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8500:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8505:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8441:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8441:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8434:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8606:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "8517:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8517:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8517:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8619:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8630:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8635:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8626:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8626:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8619:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8412:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8420:3:9",
														"type": ""
													}
												],
												"src": "8278:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8796:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8806:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8872:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8877:2:9",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8813:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8806:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8978:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "8889:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8889:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8889:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8991:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9002:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9007:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8998:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8784:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8792:3:9",
														"type": ""
													}
												],
												"src": "8650:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9218:683:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9228:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9244:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9249:4:9",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "9232:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9264:173:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9308:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9338:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9345:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9334:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9334:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9328:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9328:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9312:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9398:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9416:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9421:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9412:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9412:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9364:33:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9364:63:9"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9364:63:9"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9447:175:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9523:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9530:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9519:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9519:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9513:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9513:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9497:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9583:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9601:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9606:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9597:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9597:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9549:33:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:63:9"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9549:63:9"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9632:242:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9676:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9706:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9713:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9702:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9702:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9696:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9696:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9680:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9744:3:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9749:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9740:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9740:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "9760:4:9"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9766:3:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9756:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9756:14:9"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "9733:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9733:38:9"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9733:38:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9784:79:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9844:12:9"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9858:4:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9792:51:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9792:71:9"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "9784:4:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9884:11:9",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "9891:4:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9884:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_lzTxObj_$1017_memory_ptr_to_t_struct$_lzTxObj_$1017_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9197:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9204:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9213:3:9",
														"type": ""
													}
												],
												"src": "9094:807:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9970:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9987:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10009:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "9992:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9992:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9980:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9980:36:9"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9958:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9965:3:9",
														"type": ""
													}
												],
												"src": "9907:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10083:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10100:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10123:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10105:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10105:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10093:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10071:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10078:3:9",
														"type": ""
													}
												],
												"src": "10028:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10207:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10224:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10247:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10229:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10229:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10217:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10217:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10217:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10195:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10202:3:9",
														"type": ""
													}
												],
												"src": "10142:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10382:140:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10464:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10393:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10393:75:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10393:75:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10477:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10488:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10493:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10484:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10484:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10477:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10506:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10513:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10506:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10361:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10367:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10378:3:9",
														"type": ""
													}
												],
												"src": "10266:256:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10662:137:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10673:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10769:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10680:79:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10673:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10783:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10790:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10783:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10641:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10647:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10658:3:9",
														"type": ""
													}
												],
												"src": "10528:271:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10903:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10913:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10925:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10936:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10921:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10921:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10913:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10993:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11006:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11017:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11002:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11002:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10949:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10949:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10949:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10875:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10887:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10898:4:9",
														"type": ""
													}
												],
												"src": "10805:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11159:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11169:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11181:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11177:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11169:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11249:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11262:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11273:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11205:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11205:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11205:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11330:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11343:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11354:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11339:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11286:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11286:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11286:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11123:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11135:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11143:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11154:4:9",
														"type": ""
													}
												],
												"src": "11033:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11525:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11535:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11547:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11558:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11543:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11543:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11535:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11615:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11628:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11639:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11624:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11624:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11571:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11571:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11571:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11696:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11709:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11720:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11705:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11705:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11652:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11652:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11652:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11778:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11791:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11802:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11787:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11787:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11734:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11734:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11481:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11493:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11501:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11509:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11520:4:9",
														"type": ""
													}
												],
												"src": "11371:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11945:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11955:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11967:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11978:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11963:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11963:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11955:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12035:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12048:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12059:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12044:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12044:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11991:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11991:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12116:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12129:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12140:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12125:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12125:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12072:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12072:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12072:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11909:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11921:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11929:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11940:4:9",
														"type": ""
													}
												],
												"src": "11819:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12253:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12263:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12275:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12286:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12271:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12271:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12263:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12341:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12354:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12365:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12350:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12350:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes2_to_t_bytes2_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12299:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12299:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12299:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes2__to_t_bytes2__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12225:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12237:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12248:4:9",
														"type": ""
													}
												],
												"src": "12157:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12509:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12521:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12532:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12517:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12509:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12556:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12567:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12552:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12575:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12581:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12571:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12545:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12545:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12601:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12673:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12682:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12609:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12609:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12601:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12471:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12483:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12494:4:9",
														"type": ""
													}
												],
												"src": "12381:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12871:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12881:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12893:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12904:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12889:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12889:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12881:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12939:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12924:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12947:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12953:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12943:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12943:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12917:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12917:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12973:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13107:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12981:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12981:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12973:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12851:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12866:4:9",
														"type": ""
													}
												],
												"src": "12700:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13296:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13306:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13318:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13329:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13314:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13314:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13306:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13353:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13364:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13349:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13349:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13372:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13378:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13368:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13368:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13342:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13342:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13398:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13532:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13406:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13406:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13398:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13276:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13291:4:9",
														"type": ""
													}
												],
												"src": "13125:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13721:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13731:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13743:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13754:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13739:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13739:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13731:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13778:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13789:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13774:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13774:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13797:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13803:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13793:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13793:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13767:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13767:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13767:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13823:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13957:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13831:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13831:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13823:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13701:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13716:4:9",
														"type": ""
													}
												],
												"src": "13550:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14146:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14156:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14168:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14179:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14164:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14164:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14156:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14203:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14214:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14199:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14199:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14222:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14228:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14218:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14218:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14192:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14192:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14192:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14248:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14382:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14256:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14256:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14248:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14126:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14141:4:9",
														"type": ""
													}
												],
												"src": "13975:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14571:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14581:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14593:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14604:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14589:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14589:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14581:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14628:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14639:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14624:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14624:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14647:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14653:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14643:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14617:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14617:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14617:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14673:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14807:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14681:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14673:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14551:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14566:4:9",
														"type": ""
													}
												],
												"src": "14400:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15281:1073:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15291:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15303:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15314:3:9",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15299:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15299:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15291:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15370:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15383:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15394:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15379:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15379:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15328:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15328:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15328:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15459:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15472:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15483:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15468:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15468:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15407:51:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15407:80:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15407:80:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15549:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15562:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15573:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15558:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15558:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15497:51:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15497:80:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15497:80:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15647:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15660:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15671:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15656:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15656:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15587:59:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15587:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15587:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15729:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15742:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15753:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15738:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15738:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15685:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15685:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15685:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "15820:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15833:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15844:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15829:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15829:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15768:51:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15768:81:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15768:81:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15870:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15881:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15866:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15891:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15897:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15887:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15887:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15859:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15917:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "16019:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16028:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_lzTxObj_$1017_memory_ptr_to_t_struct$_lzTxObj_$1017_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15925:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15925:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15917:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16054:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16065:3:9",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16050:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16050:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16075:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16081:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16071:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16071:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16101:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "16171:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16180:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16109:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16109:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16101:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16206:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16217:3:9",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16202:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16202:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16227:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16233:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16223:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16223:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16195:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16195:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16195:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16253:94:9",
															"value": {
																"arguments": [
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "16325:6:9"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "16333:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16342:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16261:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16261:86:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16253:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_rational_1_by_1_t_rational_1_by_1_t_address_payable_t_uint256_t_rational_0_by_1_t_struct$_lzTxObj_$1017_memory_ptr_t_bytes_memory_ptr_t_bytes_calldata_ptr__to_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1017_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15181:9:9",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "15193:6:9",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "15201:6:9",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "15209:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "15217:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "15225:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15233:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15241:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15249:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15257:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15265:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15276:4:9",
														"type": ""
													}
												],
												"src": "14825:1529:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16458:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16468:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16480:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16491:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16476:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16476:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16468:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16548:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16561:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16572:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16557:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16557:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16504:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16504:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16504:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16430:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16442:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16453:4:9",
														"type": ""
													}
												],
												"src": "16360:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16629:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16639:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "16649:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16649:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16639:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16698:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "16706:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16678:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16678:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16678:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16613:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16622:6:9",
														"type": ""
													}
												],
												"src": "16588:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16763:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16773:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16789:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16783:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16783:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16773:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16756:6:9",
														"type": ""
													}
												],
												"src": "16723:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16870:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16975:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16977:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16977:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16977:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16947:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16955:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16944:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16944:30:9"
															},
															"nodeType": "YulIf",
															"src": "16941:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17007:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17037:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "17015:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17015:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17007:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17081:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17093:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17099:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17089:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17089:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17081:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16854:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16865:4:9",
														"type": ""
													}
												],
												"src": "16804:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17175:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17186:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17202:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17196:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17196:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17186:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17158:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17168:6:9",
														"type": ""
													}
												],
												"src": "17117:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17280:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17291:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17307:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17301:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17301:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17291:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17263:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17273:6:9",
														"type": ""
													}
												],
												"src": "17221:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17411:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17428:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17433:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17421:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17421:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17421:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17449:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17468:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17473:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17464:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17464:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17449:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17383:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17388:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17399:11:9",
														"type": ""
													}
												],
												"src": "17326:158:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17585:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17602:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17607:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17595:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17595:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17595:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17623:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17642:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17647:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17638:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17638:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17623:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17557:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17562:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17573:11:9",
														"type": ""
													}
												],
												"src": "17490:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17777:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17787:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17802:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17787:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17749:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17754:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17765:11:9",
														"type": ""
													}
												],
												"src": "17664:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17913:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17930:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17935:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17923:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17923:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17923:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17951:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17970:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17975:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17966:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17966:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17951:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17885:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17890:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17901:11:9",
														"type": ""
													}
												],
												"src": "17817:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18037:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18047:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18076:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18058:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18058:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18047:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18019:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18029:7:9",
														"type": ""
													}
												],
												"src": "17992:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18147:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18157:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18186:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18168:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18168:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18157:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18129:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18139:7:9",
														"type": ""
													}
												],
												"src": "18094:104:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18246:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18256:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18281:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18274:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18274:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18267:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18256:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18228:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18238:7:9",
														"type": ""
													}
												],
												"src": "18204:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18344:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18354:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18369:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18376:66:9",
																		"type": "",
																		"value": "0xffff000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18365:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18365:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18354:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18326:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18336:7:9",
														"type": ""
													}
												],
												"src": "18300:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18499:45:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18509:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18524:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18531:6:9",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18520:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18520:18:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18509:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18481:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18491:7:9",
														"type": ""
													}
												],
												"src": "18455:89:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18595:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18605:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18620:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18627:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18616:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18616:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18605:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18577:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18587:7:9",
														"type": ""
													}
												],
												"src": "18550:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18727:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18737:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18748:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18737:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18709:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18719:7:9",
														"type": ""
													}
												],
												"src": "18682:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18833:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18843:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18874:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18856:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18856:24:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18843:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18813:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18823:9:9",
														"type": ""
													}
												],
												"src": "18765:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18960:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18970:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19001:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18983:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18983:24:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "18970:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18940:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "18950:9:9",
														"type": ""
													}
												],
												"src": "18892:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19070:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "19093:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "19098:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19103:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "19080:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19080:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19080:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "19151:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19156:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19147:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19165:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19140:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19140:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19052:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "19057:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19062:6:9",
														"type": ""
													}
												],
												"src": "19019:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19228:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19238:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19247:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "19242:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19307:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19332:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19337:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19328:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19328:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "19351:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19356:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19347:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19347:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19341:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19341:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19321:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19321:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19321:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19268:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19271:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19265:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19279:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19281:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19290:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19293:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19286:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19286:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19281:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19261:3:9",
																"statements": []
															},
															"src": "19257:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19404:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19454:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "19459:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19450:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19450:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19468:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19443:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19443:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19443:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19385:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19388:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19382:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19382:13:9"
															},
															"nodeType": "YulIf",
															"src": "19379:2:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19210:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "19215:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19220:6:9",
														"type": ""
													}
												],
												"src": "19179:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19535:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19545:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "19567:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "19597:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "19575:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19575:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19563:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19563:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "19549:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19714:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "19716:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19716:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19716:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "19657:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19669:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19654:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19654:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "19693:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19705:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19690:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19690:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19651:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19651:62:9"
															},
															"nodeType": "YulIf",
															"src": "19648:2:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19752:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "19756:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19745:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19745:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19745:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19521:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "19529:4:9",
														"type": ""
													}
												],
												"src": "19492:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19826:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19836:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19867:5:9"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19847:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19847:26:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "19836:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19808:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "19818:7:9",
														"type": ""
													}
												],
												"src": "19779:100:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19932:47:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19942:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19967:5:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "19953:13:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19953:20:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "19942:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19914:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "19924:7:9",
														"type": ""
													}
												],
												"src": "19885:94:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20013:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20030:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20033:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20023:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20023:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20023:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20127:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20130:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20120:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20151:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20154:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20144:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20144:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "19985:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20219:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20229:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20247:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20254:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20243:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20243:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20263:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "20259:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20259:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20239:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20239:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "20229:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20202:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "20212:6:9",
														"type": ""
													}
												],
												"src": "20171:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20321:52:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20331:35:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20356:2:9",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20360:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "20352:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20352:14:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "20331:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20302:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "20312:8:9",
														"type": ""
													}
												],
												"src": "20279:94:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20485:136:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20507:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20515:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20503:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20503:14:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20519:34:9",
																		"type": "",
																		"value": "stargate requires a msg.value to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20496:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20496:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20496:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20575:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20583:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20571:15:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20588:25:9",
																		"type": "",
																		"value": " pay crosschain message"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20564:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20564:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20564:50:9"
														}
													]
												},
												"name": "store_literal_in_memory_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20477:6:9",
														"type": ""
													}
												],
												"src": "20379:242:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20733:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20755:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20763:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20751:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20751:14:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20767:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20744:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20744:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20744:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20823:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20831:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20819:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20819:15:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20836:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20812:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20812:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20812:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20725:6:9",
														"type": ""
													}
												],
												"src": "20627:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20964:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20986:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20994:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20982:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20982:14:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20998:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20975:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20975:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20956:6:9",
														"type": ""
													}
												],
												"src": "20858:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21149:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21171:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21167:14:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21183:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21160:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21160:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21239:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21247:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21235:15:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21252:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21228:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21228:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21141:6:9",
														"type": ""
													}
												],
												"src": "21043:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21384:135:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21406:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21414:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21402:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21402:14:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21418:34:9",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21395:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21395:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21395:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21474:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21482:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21470:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21470:15:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21487:24:9",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21463:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21463:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21463:49:9"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21376:6:9",
														"type": ""
													}
												],
												"src": "21278:241:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21568:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21625:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21634:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21637:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21627:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21627:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21627:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21591:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21616:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "21598:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21598:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21588:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21588:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21581:43:9"
															},
															"nodeType": "YulIf",
															"src": "21578:2:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21561:5:9",
														"type": ""
													}
												],
												"src": "21525:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21693:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21747:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21756:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21759:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21749:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21749:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21749:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21716:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21738:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21723:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21723:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21713:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21713:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21706:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21706:40:9"
															},
															"nodeType": "YulIf",
															"src": "21703:2:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21686:5:9",
														"type": ""
													}
												],
												"src": "21653:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21817:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21873:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21882:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21885:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21875:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21875:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21875:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21840:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21864:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "21847:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21847:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21837:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21837:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21830:42:9"
															},
															"nodeType": "YulIf",
															"src": "21827:2:9"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21810:5:9",
														"type": ""
													}
												],
												"src": "21775:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21944:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22001:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22010:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22013:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22003:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22003:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22003:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21967:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21992:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "21974:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21974:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21964:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21964:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21957:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21957:43:9"
															},
															"nodeType": "YulIf",
															"src": "21954:2:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21937:5:9",
														"type": ""
													}
												],
												"src": "21901:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value5 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_bytes2_to_t_bytes2_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes2(value))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    // struct IStargateRouter.lzTxObj -> struct IStargateRouter.lzTxObj\n    function abi_encode_t_struct$_lzTxObj_$1017_memory_ptr_to_t_struct$_lzTxObj_$1017_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // dstGasForCall\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // dstNativeAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // dstNativeAddr\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes2__to_t_bytes2__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes2_to_t_bytes2_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_rational_1_by_1_t_rational_1_by_1_t_address_payable_t_uint256_t_rational_0_by_1_t_struct$_lzTxObj_$1017_memory_ptr_t_bytes_memory_ptr_t_bytes_calldata_ptr__to_t_uint16_t_uint256_t_uint256_t_address_payable_t_uint256_t_uint256_t_struct$_lzTxObj_$1017_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_struct$_lzTxObj_$1017_memory_ptr_to_t_struct$_lzTxObj_$1017_memory_ptr_fromStack(value6,  tail)\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value7,  tail)\n\n        mstore(add(headStart, 256), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value8, value9,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes2(value) -> cleaned {\n        cleaned := and(value, 0xffff000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function store_literal_in_memory_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317(memPtr) {\n\n        mstore(add(memPtr, 0), \"stargate requires a msg.value to\")\n\n        mstore(add(memPtr, 32), \" pay crosschain message\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633576ca461461004f578063a9e56f3c1461006b578063aa37db6c14610096578063ab8236f3146100c1578063dd1bc08e146100ea575b600080fd5b61006960048036038101906100649190610b53565b610115565b005b34801561007757600080fd5b5061008061040d565b60405161008d9190610e74565b60405180910390f35b3480156100a257600080fd5b506100ab610431565b6040516100b89190610f18565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190610a71565b610444565b005b3480156100f657600080fd5b506100ff61044c565b60405161010c9190610e74565b60405180910390f35b60003411610158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014f90610f55565b60405180910390fd5b6101a7333085600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610472909392919063ffffffff16565b61021460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166104fb9092919063ffffffff16565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663977f2cb9466040518263ffffffff1660e01b81526004016102719190611099565b60206040518083038186803b15801561028957600080fd5b505afa15801561029d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c19190610a48565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639fbf10fc34600160189054906101000a900461ffff16600180338a6000604051806060016040528062030d408152602001600081526020016040518060400160405280600281526020017f3078000000000000000000000000000000000000000000000000000000000000815250815250600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405160200161039f9190610e42565b6040516020818303038152906040528d8d6040518c63ffffffff1660e01b81526004016103d59a99989796959493929190610ff5565b6000604051808303818588803b1580156103ee57600080fd5b505af1158015610402573d6000803e3d6000fd5b505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460f01b81565b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f5846323b872dd60e01b85858560405160240161049393929190610eb8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610659565b50505050565b6000811480610594575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610542929190610e8f565b60206040518083038186803b15801561055a57600080fd5b505afa15801561056e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190610b2a565b145b6105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610fd5565b60405180910390fd5b6106548363095ea7b360e01b84846040516024016105f2929190610eef565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610659565b505050565b60006106bb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107219092919063ffffffff16565b90506000815114806106dd5750808060200190518101906106dc9190610a1f565b5b61071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390610fb5565b60405180910390fd5b505050565b60606107308484600085610739565b90509392505050565b60608247101561077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590610f75565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516107a79190610e5d565b60006040518083038185875af1925050503d80600081146107e4576040519150601f19603f3d011682016040523d82523d6000602084013e6107e9565b606091505b50915091506107fa87838387610806565b92505050949350505050565b6060831561086957600083511415610861576108218561087c565b610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085790610f95565b60405180910390fd5b5b829050610874565b610873838361089f565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156108b25781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e69190610f33565b60405180910390fd5b60006109026108fd846110d9565b6110b4565b90508281526020810184848401111561091a57600080fd5b610925848285611216565b509392505050565b60008135905061093c8161145f565b92915050565b60008151905061095181611476565b92915050565b60008083601f84011261096957600080fd5b8235905067ffffffffffffffff81111561098257600080fd5b60208301915083600182028301111561099a57600080fd5b9250929050565b600082601f8301126109b257600080fd5b81356109c28482602086016108ef565b91505092915050565b6000813590506109da8161148d565b92915050565b6000815190506109ef8161148d565b92915050565b600081359050610a04816114a4565b92915050565b600081519050610a19816114a4565b92915050565b600060208284031215610a3157600080fd5b6000610a3f84828501610942565b91505092915050565b600060208284031215610a5a57600080fd5b6000610a68848285016109e0565b91505092915050565b60008060008060008060c08789031215610a8a57600080fd5b6000610a9889828a016109cb565b965050602087013567ffffffffffffffff811115610ab557600080fd5b610ac189828a016109a1565b9550506040610ad289828a016109f5565b9450506060610ae389828a0161092d565b9350506080610af489828a016109f5565b92505060a087013567ffffffffffffffff811115610b1157600080fd5b610b1d89828a016109a1565b9150509295509295509295565b600060208284031215610b3c57600080fd5b6000610b4a84828501610a0a565b91505092915050565b600080600060408486031215610b6857600080fd5b6000610b76868287016109f5565b935050602084013567ffffffffffffffff811115610b9357600080fd5b610b9f86828701610957565b92509250509250925092565b610bb481611170565b82525050565b610bc38161115e565b82525050565b610bda610bd58261115e565b611289565b82525050565b610be98161118e565b82525050565b6000610bfb8385611131565b9350610c08838584611216565b610c11836112dc565b840190509392505050565b6000610c278261110a565b610c318185611120565b9350610c41818560208601611225565b610c4a816112dc565b840191505092915050565b6000610c608261110a565b610c6a8185611131565b9350610c7a818560208601611225565b610c83816112dc565b840191505092915050565b6000610c998261110a565b610ca38185611142565b9350610cb3818560208601611225565b80840191505092915050565b610cc8816111f2565b82525050565b610cd781611204565b82525050565b6000610ce882611115565b610cf2818561114d565b9350610d02818560208601611225565b610d0b816112dc565b840191505092915050565b6000610d2360378361114d565b9150610d2e826112fa565b604082019050919050565b6000610d4660268361114d565b9150610d5182611349565b604082019050919050565b6000610d69601d8361114d565b9150610d7482611398565b602082019050919050565b6000610d8c602a8361114d565b9150610d97826113c1565b604082019050919050565b6000610daf60368361114d565b9150610dba82611410565b604082019050919050565b6000606083016000830151610ddd6000860182610e24565b506020830151610df06020860182610e24565b5060408301518482036040860152610e088282610c1c565b9150508091505092915050565b610e1e816111ba565b82525050565b610e2d816111e8565b82525050565b610e3c816111e8565b82525050565b6000610e4e8284610bc9565b60148201915081905092915050565b6000610e698284610c8e565b915081905092915050565b6000602082019050610e896000830184610bba565b92915050565b6000604082019050610ea46000830185610bba565b610eb16020830184610bba565b9392505050565b6000606082019050610ecd6000830186610bba565b610eda6020830185610bba565b610ee76040830184610e33565b949350505050565b6000604082019050610f046000830185610bba565b610f116020830184610e33565b9392505050565b6000602082019050610f2d6000830184610be0565b92915050565b60006020820190508181036000830152610f4d8184610cdd565b905092915050565b60006020820190508181036000830152610f6e81610d16565b9050919050565b60006020820190508181036000830152610f8e81610d39565b9050919050565b60006020820190508181036000830152610fae81610d5c565b9050919050565b60006020820190508181036000830152610fce81610d7f565b9050919050565b60006020820190508181036000830152610fee81610da2565b9050919050565b60006101208201905061100b600083018d610e15565b611018602083018c610cce565b611025604083018b610cce565b611032606083018a610bab565b61103f6080830189610e33565b61104c60a0830188610cbf565b81810360c083015261105e8187610dc5565b905081810360e08301526110728186610c55565b9050818103610100830152611088818486610bef565b90509b9a5050505050505050505050565b60006020820190506110ae6000830184610e33565b92915050565b60006110be6110cf565b90506110ca8282611258565b919050565b6000604051905090565b600067ffffffffffffffff8211156110f4576110f36112ad565b5b6110fd826112dc565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611169826111c8565b9050919050565b600061117b826111c8565b9050919050565b60008115159050919050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111fd826111e8565b9050919050565b600061120f826111e8565b9050919050565b82818337600083830152505050565b60005b83811015611243578082015181840152602081019050611228565b83811115611252576000848401525b50505050565b611261826112dc565b810181811067ffffffffffffffff821117156112805761127f6112ad565b5b80604052505050565b60006112948261129b565b9050919050565b60006112a6826112ed565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f73746172676174652072657175697265732061206d73672e76616c756520746f60008201527f207061792063726f7373636861696e206d657373616765000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6114688161115e565b811461147357600080fd5b50565b61147f81611182565b811461148a57600080fd5b50565b611496816111ba565b81146114a157600080fd5b50565b6114ad816111e8565b81146114b857600080fd5b5056fea264697066735822122072c80231e4ffbb7c5debad3620fb834b353fb52bd05b6cbee264a52e1009ec9a64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3576CA46 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0xA9E56F3C EQ PUSH2 0x6B JUMPI DUP1 PUSH4 0xAA37DB6C EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xAB8236F3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xDD1BC08E EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x115 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x80 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x158 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A7 CALLER ADDRESS DUP6 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x472 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x214 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4FB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x977F2CB9 CHAINID PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0xA48 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9FBF10FC CALLVALUE PUSH1 0x1 PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x1 DUP1 CALLER DUP11 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x30D40 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP14 DUP14 PUSH1 0x40 MLOAD DUP13 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL DUP2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4F5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x493 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x659 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x594 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP3 SWAP2 SWAP1 PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST EQ JUMPDEST PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CA SWAP1 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x654 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5F2 SWAP3 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x659 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x721 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x6DD JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xA1F JUMP JUMPDEST JUMPDEST PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x730 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x739 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x7FA DUP8 DUP4 DUP4 DUP8 PUSH2 0x806 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x869 JUMPI PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x861 JUMPI PUSH2 0x821 DUP6 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x874 JUMP JUMPDEST PUSH2 0x873 DUP4 DUP4 PUSH2 0x89F JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x8B2 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x902 PUSH2 0x8FD DUP5 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x925 DUP5 DUP3 DUP6 PUSH2 0x1216 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x951 DUP2 PUSH2 0x1476 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9C2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9DA DUP2 PUSH2 0x148D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9EF DUP2 PUSH2 0x148D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA04 DUP2 PUSH2 0x14A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA19 DUP2 PUSH2 0x14A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP5 DUP3 DUP6 ADD PUSH2 0x942 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA68 DUP5 DUP3 DUP6 ADD PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA98 DUP10 DUP3 DUP11 ADD PUSH2 0x9CB JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC1 DUP10 DUP3 DUP11 ADD PUSH2 0x9A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xAD2 DUP10 DUP3 DUP11 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xAE3 DUP10 DUP3 DUP11 ADD PUSH2 0x92D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xAF4 DUP10 DUP3 DUP11 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1D DUP10 DUP3 DUP11 ADD PUSH2 0x9A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB4A DUP5 DUP3 DUP6 ADD PUSH2 0xA0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB76 DUP7 DUP3 DUP8 ADD PUSH2 0x9F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9F DUP7 DUP3 DUP8 ADD PUSH2 0x957 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0x1170 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0x115E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBDA PUSH2 0xBD5 DUP3 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x1289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBE9 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFB DUP4 DUP6 PUSH2 0x1131 JUMP JUMPDEST SWAP4 POP PUSH2 0xC08 DUP4 DUP6 DUP5 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0xC11 DUP4 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC27 DUP3 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xC31 DUP2 DUP6 PUSH2 0x1120 JUMP JUMPDEST SWAP4 POP PUSH2 0xC41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC60 DUP3 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xC6A DUP2 DUP6 PUSH2 0x1131 JUMP JUMPDEST SWAP4 POP PUSH2 0xC7A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xC83 DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP3 PUSH2 0x110A JUMP JUMPDEST PUSH2 0xCA3 DUP2 DUP6 PUSH2 0x1142 JUMP JUMPDEST SWAP4 POP PUSH2 0xCB3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x11F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0x1204 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 DUP3 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0xCF2 DUP2 DUP6 PUSH2 0x114D JUMP JUMPDEST SWAP4 POP PUSH2 0xD02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0x12DC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x37 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0x26 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH1 0x1D DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 DUP3 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8C PUSH1 0x2A DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xD97 DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF PUSH1 0x36 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xDBA DUP3 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xDDD PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xE24 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xDF0 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xE24 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xE08 DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE1E DUP2 PUSH2 0x11BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE2D DUP2 PUSH2 0x11E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE3C DUP2 PUSH2 0x11E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 DUP5 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE69 DUP3 DUP5 PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xEA4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xEB1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xECD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xF11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF4D DUP2 DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF8E DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFAE DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFCE DUP2 PUSH2 0xD7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFEE DUP2 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x100B PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x1018 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x1032 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0x103F PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x104C PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0xCBF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x105E DUP2 DUP8 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x1072 DUP2 DUP7 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x1088 DUP2 DUP5 DUP7 PUSH2 0xBEF JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BE PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP PUSH2 0x10CA DUP3 DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10F4 JUMPI PUSH2 0x10F3 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST PUSH2 0x10FD DUP3 PUSH2 0x12DC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP3 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117B DUP3 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFF000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FD DUP3 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120F DUP3 PUSH2 0x11E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1243 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1228 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1261 DUP3 PUSH2 0x12DC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1280 JUMPI PUSH2 0x127F PUSH2 0x12AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1294 DUP3 PUSH2 0x129B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A6 DUP3 PUSH2 0x12ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73746172676174652072657175697265732061206D73672E76616C756520746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207061792063726F7373636861696E206D657373616765000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x115E JUMP JUMPDEST DUP2 EQ PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x147F DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP2 EQ PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1496 DUP2 PUSH2 0x11BA JUMP JUMPDEST DUP2 EQ PUSH2 0x14A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14AD DUP2 PUSH2 0x11E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC80231E4FFBB7C5DEBAD3620FB834B353FB52B 0xD0 JUMPDEST PUSH13 0xBEE264A52E1009EC9A64736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "389:3309:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:1552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;472:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3187:506;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;544:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1285:1552;1395:1;1383:9;:13;1375:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1650:64;1680:10;1700:4;1707:6;1657:4;;;;;;;;;;;1650:29;;;;:64;;;;;;:::i;:::-;1725:57;1758:14;;;;;;;;;;1775:6;1732:4;;;;;;;;;;;1725:24;;;;:57;;;;;:::i;:::-;1795:16;1824:15;;;;;;;;;;;1814:40;;;1855:13;1814:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1795:74;;1910:14;;;;;;;;;;1894:36;;;1937:9;1962:6;;;;;;;;;;;2048:1;2139;2242:10;2365:6;2475:1;2575:40;;;;;;;;2599:6;2575:40;;;;2607:1;2575:40;;;;;;;;;;;;;;;;;;;;;;;;2673:18;;;;;;;;;;;2656:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;2768:7;;1894:935;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:1552;;;;:::o;472:29::-;;;;;;;;;;;;:::o;576:23::-;;;;;;;;;;;;;:::o;3187:506::-;;;;;;;:::o;544:25::-;;;;;;;;;;;;;:::o;1355:203:2:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;1818:573::-;2152:1;2143:5;:10;2142:62;;;;2202:1;2159:5;:15;;;2183:4;2190:7;2159:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;2294:90;2314:5;2344:22;;;2368:7;2377:5;2321:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;5173:642::-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5726:1;5705:10;:17;:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5705:56;5697:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5173:642;;;:::o;4108:223:3:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;9161:133;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:343:9;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;402:5;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;501:137::-;555:5;586:6;580:13;571:22;;602:30;626:5;602:30;:::i;:::-;561:77;;;;:::o;657:351::-;714:8;724:6;774:3;767:4;759:6;755:17;751:27;741:2;;792:1;789;782:12;741:2;828:6;815:20;805:30;;858:18;850:6;847:30;844:2;;;890:1;887;880:12;844:2;927:4;919:6;915:17;903:29;;981:3;973:4;965:6;961:17;951:8;947:32;944:41;941:2;;;998:1;995;988:12;941:2;731:277;;;;;:::o;1027:271::-;1082:5;1131:3;1124:4;1116:6;1112:17;1108:27;1098:2;;1149:1;1146;1139:12;1098:2;1189:6;1176:20;1214:78;1288:3;1280:6;1273:4;1265:6;1261:17;1214:78;:::i;:::-;1205:87;;1088:210;;;;;:::o;1304:137::-;1349:5;1387:6;1374:20;1365:29;;1403:32;1429:5;1403:32;:::i;:::-;1355:86;;;;:::o;1447:141::-;1503:5;1534:6;1528:13;1519:22;;1550:32;1576:5;1550:32;:::i;:::-;1509:79;;;;:::o;1594:139::-;1640:5;1678:6;1665:20;1656:29;;1694:33;1721:5;1694:33;:::i;:::-;1646:87;;;;:::o;1739:143::-;1796:5;1827:6;1821:13;1812:22;;1843:33;1870:5;1843:33;:::i;:::-;1802:80;;;;:::o;1888:278::-;1955:6;2004:2;1992:9;1983:7;1979:23;1975:32;1972:2;;;2020:1;2017;2010:12;1972:2;2063:1;2088:61;2141:7;2132:6;2121:9;2117:22;2088:61;:::i;:::-;2078:71;;2034:125;1962:204;;;;:::o;2172:282::-;2241:6;2290:2;2278:9;2269:7;2265:23;2261:32;2258:2;;;2306:1;2303;2296:12;2258:2;2349:1;2374:63;2429:7;2420:6;2409:9;2405:22;2374:63;:::i;:::-;2364:73;;2320:127;2248:206;;;;:::o;2460:1210::-;2581:6;2589;2597;2605;2613;2621;2670:3;2658:9;2649:7;2645:23;2641:33;2638:2;;;2687:1;2684;2677:12;2638:2;2730:1;2755:52;2799:7;2790:6;2779:9;2775:22;2755:52;:::i;:::-;2745:62;;2701:116;2884:2;2873:9;2869:18;2856:32;2915:18;2907:6;2904:30;2901:2;;;2947:1;2944;2937:12;2901:2;2975:62;3029:7;3020:6;3009:9;3005:22;2975:62;:::i;:::-;2965:72;;2827:220;3086:2;3112:53;3157:7;3148:6;3137:9;3133:22;3112:53;:::i;:::-;3102:63;;3057:118;3214:2;3240:53;3285:7;3276:6;3265:9;3261:22;3240:53;:::i;:::-;3230:63;;3185:118;3342:3;3369:53;3414:7;3405:6;3394:9;3390:22;3369:53;:::i;:::-;3359:63;;3313:119;3499:3;3488:9;3484:19;3471:33;3531:18;3523:6;3520:30;3517:2;;;3563:1;3560;3553:12;3517:2;3591:62;3645:7;3636:6;3625:9;3621:22;3591:62;:::i;:::-;3581:72;;3442:221;2628:1042;;;;;;;;:::o;3676:284::-;3746:6;3795:2;3783:9;3774:7;3770:23;3766:32;3763:2;;;3811:1;3808;3801:12;3763:2;3854:1;3879:64;3935:7;3926:6;3915:9;3911:22;3879:64;:::i;:::-;3869:74;;3825:128;3753:207;;;;:::o;3966:538::-;4045:6;4053;4061;4110:2;4098:9;4089:7;4085:23;4081:32;4078:2;;;4126:1;4123;4116:12;4078:2;4169:1;4194:53;4239:7;4230:6;4219:9;4215:22;4194:53;:::i;:::-;4184:63;;4140:117;4324:2;4313:9;4309:18;4296:32;4355:18;4347:6;4344:30;4341:2;;;4387:1;4384;4377:12;4341:2;4423:64;4479:7;4470:6;4459:9;4455:22;4423:64;:::i;:::-;4405:82;;;;4267:230;4068:436;;;;;:::o;4510:142::-;4613:32;4639:5;4613:32;:::i;:::-;4608:3;4601:45;4591:61;;:::o;4658:118::-;4745:24;4763:5;4745:24;:::i;:::-;4740:3;4733:37;4723:53;;:::o;4782:157::-;4887:45;4907:24;4925:5;4907:24;:::i;:::-;4887:45;:::i;:::-;4882:3;4875:58;4865:74;;:::o;4945:115::-;5030:23;5047:5;5030:23;:::i;:::-;5025:3;5018:36;5008:52;;:::o;5088:301::-;5184:3;5205:70;5268:6;5263:3;5205:70;:::i;:::-;5198:77;;5285:43;5321:6;5316:3;5309:5;5285:43;:::i;:::-;5353:29;5375:6;5353:29;:::i;:::-;5348:3;5344:39;5337:46;;5188:201;;;;;:::o;5395:340::-;5471:3;5499:38;5531:5;5499:38;:::i;:::-;5553:60;5606:6;5601:3;5553:60;:::i;:::-;5546:67;;5622:52;5667:6;5662:3;5655:4;5648:5;5644:16;5622:52;:::i;:::-;5699:29;5721:6;5699:29;:::i;:::-;5694:3;5690:39;5683:46;;5475:260;;;;;:::o;5741:360::-;5827:3;5855:38;5887:5;5855:38;:::i;:::-;5909:70;5972:6;5967:3;5909:70;:::i;:::-;5902:77;;5988:52;6033:6;6028:3;6021:4;6014:5;6010:16;5988:52;:::i;:::-;6065:29;6087:6;6065:29;:::i;:::-;6060:3;6056:39;6049:46;;5831:270;;;;;:::o;6107:373::-;6211:3;6239:38;6271:5;6239:38;:::i;:::-;6293:88;6374:6;6369:3;6293:88;:::i;:::-;6286:95;;6390:52;6435:6;6430:3;6423:4;6416:5;6412:16;6390:52;:::i;:::-;6467:6;6462:3;6458:16;6451:23;;6215:265;;;;;:::o;6486:147::-;6581:45;6620:5;6581:45;:::i;:::-;6576:3;6569:58;6559:74;;:::o;6639:147::-;6734:45;6773:5;6734:45;:::i;:::-;6729:3;6722:58;6712:74;;:::o;6792:364::-;6880:3;6908:39;6941:5;6908:39;:::i;:::-;6963:71;7027:6;7022:3;6963:71;:::i;:::-;6956:78;;7043:52;7088:6;7083:3;7076:4;7069:5;7065:16;7043:52;:::i;:::-;7120:29;7142:6;7120:29;:::i;:::-;7115:3;7111:39;7104:46;;6884:272;;;;;:::o;7162:366::-;7304:3;7325:67;7389:2;7384:3;7325:67;:::i;:::-;7318:74;;7401:93;7490:3;7401:93;:::i;:::-;7519:2;7514:3;7510:12;7503:19;;7308:220;;;:::o;7534:366::-;7676:3;7697:67;7761:2;7756:3;7697:67;:::i;:::-;7690:74;;7773:93;7862:3;7773:93;:::i;:::-;7891:2;7886:3;7882:12;7875:19;;7680:220;;;:::o;7906:366::-;8048:3;8069:67;8133:2;8128:3;8069:67;:::i;:::-;8062:74;;8145:93;8234:3;8145:93;:::i;:::-;8263:2;8258:3;8254:12;8247:19;;8052:220;;;:::o;8278:366::-;8420:3;8441:67;8505:2;8500:3;8441:67;:::i;:::-;8434:74;;8517:93;8606:3;8517:93;:::i;:::-;8635:2;8630:3;8626:12;8619:19;;8424:220;;;:::o;8650:366::-;8792:3;8813:67;8877:2;8872:3;8813:67;:::i;:::-;8806:74;;8889:93;8978:3;8889:93;:::i;:::-;9007:2;9002:3;8998:12;8991:19;;8796:220;;;:::o;9094:807::-;9213:3;9249:4;9244:3;9240:14;9345:4;9338:5;9334:16;9328:23;9364:63;9421:4;9416:3;9412:14;9398:12;9364:63;:::i;:::-;9264:173;9530:4;9523:5;9519:16;9513:23;9549:63;9606:4;9601:3;9597:14;9583:12;9549:63;:::i;:::-;9447:175;9713:4;9706:5;9702:16;9696:23;9766:3;9760:4;9756:14;9749:4;9744:3;9740:14;9733:38;9792:71;9858:4;9844:12;9792:71;:::i;:::-;9784:79;;9632:242;9891:4;9884:11;;9218:683;;;;;:::o;9907:115::-;9992:23;10009:5;9992:23;:::i;:::-;9987:3;9980:36;9970:52;;:::o;10028:108::-;10105:24;10123:5;10105:24;:::i;:::-;10100:3;10093:37;10083:53;;:::o;10142:118::-;10229:24;10247:5;10229:24;:::i;:::-;10224:3;10217:37;10207:53;;:::o;10266:256::-;10378:3;10393:75;10464:3;10455:6;10393:75;:::i;:::-;10493:2;10488:3;10484:12;10477:19;;10513:3;10506:10;;10382:140;;;;:::o;10528:271::-;10658:3;10680:93;10769:3;10760:6;10680:93;:::i;:::-;10673:100;;10790:3;10783:10;;10662:137;;;;:::o;10805:222::-;10898:4;10936:2;10925:9;10921:18;10913:26;;10949:71;11017:1;11006:9;11002:17;10993:6;10949:71;:::i;:::-;10903:124;;;;:::o;11033:332::-;11154:4;11192:2;11181:9;11177:18;11169:26;;11205:71;11273:1;11262:9;11258:17;11249:6;11205:71;:::i;:::-;11286:72;11354:2;11343:9;11339:18;11330:6;11286:72;:::i;:::-;11159:206;;;;;:::o;11371:442::-;11520:4;11558:2;11547:9;11543:18;11535:26;;11571:71;11639:1;11628:9;11624:17;11615:6;11571:71;:::i;:::-;11652:72;11720:2;11709:9;11705:18;11696:6;11652:72;:::i;:::-;11734;11802:2;11791:9;11787:18;11778:6;11734:72;:::i;:::-;11525:288;;;;;;:::o;11819:332::-;11940:4;11978:2;11967:9;11963:18;11955:26;;11991:71;12059:1;12048:9;12044:17;12035:6;11991:71;:::i;:::-;12072:72;12140:2;12129:9;12125:18;12116:6;12072:72;:::i;:::-;11945:206;;;;;:::o;12157:218::-;12248:4;12286:2;12275:9;12271:18;12263:26;;12299:69;12365:1;12354:9;12350:17;12341:6;12299:69;:::i;:::-;12253:122;;;;:::o;12381:313::-;12494:4;12532:2;12521:9;12517:18;12509:26;;12581:9;12575:4;12571:20;12567:1;12556:9;12552:17;12545:47;12609:78;12682:4;12673:6;12609:78;:::i;:::-;12601:86;;12499:195;;;;:::o;12700:419::-;12866:4;12904:2;12893:9;12889:18;12881:26;;12953:9;12947:4;12943:20;12939:1;12928:9;12924:17;12917:47;12981:131;13107:4;12981:131;:::i;:::-;12973:139;;12871:248;;;:::o;13125:419::-;13291:4;13329:2;13318:9;13314:18;13306:26;;13378:9;13372:4;13368:20;13364:1;13353:9;13349:17;13342:47;13406:131;13532:4;13406:131;:::i;:::-;13398:139;;13296:248;;;:::o;13550:419::-;13716:4;13754:2;13743:9;13739:18;13731:26;;13803:9;13797:4;13793:20;13789:1;13778:9;13774:17;13767:47;13831:131;13957:4;13831:131;:::i;:::-;13823:139;;13721:248;;;:::o;13975:419::-;14141:4;14179:2;14168:9;14164:18;14156:26;;14228:9;14222:4;14218:20;14214:1;14203:9;14199:17;14192:47;14256:131;14382:4;14256:131;:::i;:::-;14248:139;;14146:248;;;:::o;14400:419::-;14566:4;14604:2;14593:9;14589:18;14581:26;;14653:9;14647:4;14643:20;14639:1;14628:9;14624:17;14617:47;14681:131;14807:4;14681:131;:::i;:::-;14673:139;;14571:248;;;:::o;14825:1529::-;15276:4;15314:3;15303:9;15299:19;15291:27;;15328:69;15394:1;15383:9;15379:17;15370:6;15328:69;:::i;:::-;15407:80;15483:2;15472:9;15468:18;15459:6;15407:80;:::i;:::-;15497;15573:2;15562:9;15558:18;15549:6;15497:80;:::i;:::-;15587:88;15671:2;15660:9;15656:18;15647:6;15587:88;:::i;:::-;15685:73;15753:3;15742:9;15738:19;15729:6;15685:73;:::i;:::-;15768:81;15844:3;15833:9;15829:19;15820:6;15768:81;:::i;:::-;15897:9;15891:4;15887:20;15881:3;15870:9;15866:19;15859:49;15925:108;16028:4;16019:6;15925:108;:::i;:::-;15917:116;;16081:9;16075:4;16071:20;16065:3;16054:9;16050:19;16043:49;16109:76;16180:4;16171:6;16109:76;:::i;:::-;16101:84;;16233:9;16227:4;16223:20;16217:3;16206:9;16202:19;16195:49;16261:86;16342:4;16333:6;16325;16261:86;:::i;:::-;16253:94;;15281:1073;;;;;;;;;;;;;:::o;16360:222::-;16453:4;16491:2;16480:9;16476:18;16468:26;;16504:71;16572:1;16561:9;16557:17;16548:6;16504:71;:::i;:::-;16458:124;;;;:::o;16588:129::-;16622:6;16649:20;;:::i;:::-;16639:30;;16678:33;16706:4;16698:6;16678:33;:::i;:::-;16629:88;;;:::o;16723:75::-;16756:6;16789:2;16783:9;16773:19;;16763:35;:::o;16804:307::-;16865:4;16955:18;16947:6;16944:30;16941:2;;;16977:18;;:::i;:::-;16941:2;17015:29;17037:6;17015:29;:::i;:::-;17007:37;;17099:4;17093;17089:15;17081:23;;16870:241;;;:::o;17117:98::-;17168:6;17202:5;17196:12;17186:22;;17175:40;;;:::o;17221:99::-;17273:6;17307:5;17301:12;17291:22;;17280:40;;;:::o;17326:158::-;17399:11;17433:6;17428:3;17421:19;17473:4;17468:3;17464:14;17449:29;;17411:73;;;;:::o;17490:168::-;17573:11;17607:6;17602:3;17595:19;17647:4;17642:3;17638:14;17623:29;;17585:73;;;;:::o;17664:147::-;17765:11;17802:3;17787:18;;17777:34;;;;:::o;17817:169::-;17901:11;17935:6;17930:3;17923:19;17975:4;17970:3;17966:14;17951:29;;17913:73;;;;:::o;17992:96::-;18029:7;18058:24;18076:5;18058:24;:::i;:::-;18047:35;;18037:51;;;:::o;18094:104::-;18139:7;18168:24;18186:5;18168:24;:::i;:::-;18157:35;;18147:51;;;:::o;18204:90::-;18238:7;18281:5;18274:13;18267:21;18256:32;;18246:48;;;:::o;18300:149::-;18336:7;18376:66;18369:5;18365:78;18354:89;;18344:105;;;:::o;18455:89::-;18491:7;18531:6;18524:5;18520:18;18509:29;;18499:45;;;:::o;18550:126::-;18587:7;18627:42;18620:5;18616:54;18605:65;;18595:81;;;:::o;18682:77::-;18719:7;18748:5;18737:16;;18727:32;;;:::o;18765:121::-;18823:9;18856:24;18874:5;18856:24;:::i;:::-;18843:37;;18833:53;;;:::o;18892:121::-;18950:9;18983:24;19001:5;18983:24;:::i;:::-;18970:37;;18960:53;;;:::o;19019:154::-;19103:6;19098:3;19093;19080:30;19165:1;19156:6;19151:3;19147:16;19140:27;19070:103;;;:::o;19179:307::-;19247:1;19257:113;19271:6;19268:1;19265:13;19257:113;;;19356:1;19351:3;19347:11;19341:18;19337:1;19332:3;19328:11;19321:39;19293:2;19290:1;19286:10;19281:15;;19257:113;;;19388:6;19385:1;19382:13;19379:2;;;19468:1;19459:6;19454:3;19450:16;19443:27;19379:2;19228:258;;;;:::o;19492:281::-;19575:27;19597:4;19575:27;:::i;:::-;19567:6;19563:40;19705:6;19693:10;19690:22;19669:18;19657:10;19654:34;19651:62;19648:2;;;19716:18;;:::i;:::-;19648:2;19756:10;19752:2;19745:22;19535:238;;;:::o;19779:100::-;19818:7;19847:26;19867:5;19847:26;:::i;:::-;19836:37;;19826:53;;;:::o;19885:94::-;19924:7;19953:20;19967:5;19953:20;:::i;:::-;19942:31;;19932:47;;;:::o;19985:180::-;20033:77;20030:1;20023:88;20130:4;20127:1;20120:15;20154:4;20151:1;20144:15;20171:102;20212:6;20263:2;20259:7;20254:2;20247:5;20243:14;20239:28;20229:38;;20219:54;;;:::o;20279:94::-;20312:8;20360:5;20356:2;20352:14;20331:35;;20321:52;;;:::o;20379:242::-;20519:34;20515:1;20507:6;20503:14;20496:58;20588:25;20583:2;20575:6;20571:15;20564:50;20485:136;:::o;20627:225::-;20767:34;20763:1;20755:6;20751:14;20744:58;20836:8;20831:2;20823:6;20819:15;20812:33;20733:119;:::o;20858:179::-;20998:31;20994:1;20986:6;20982:14;20975:55;20964:73;:::o;21043:229::-;21183:34;21179:1;21171:6;21167:14;21160:58;21252:12;21247:2;21239:6;21235:15;21228:37;21149:123;:::o;21278:241::-;21418:34;21414:1;21406:6;21402:14;21395:58;21487:24;21482:2;21474:6;21470:15;21463:49;21384:135;:::o;21525:122::-;21598:24;21616:5;21598:24;:::i;:::-;21591:5;21588:35;21578:2;;21637:1;21634;21627:12;21578:2;21568:79;:::o;21653:116::-;21723:21;21738:5;21723:21;:::i;:::-;21716:5;21713:32;21703:2;;21759:1;21756;21749:12;21703:2;21693:76;:::o;21775:120::-;21847:23;21864:5;21847:23;:::i;:::-;21840:5;21837:34;21827:2;;21885:1;21882;21875:12;21827:2;21817:78;:::o;21901:122::-;21974:24;21992:5;21974:24;:::i;:::-;21967:5;21964:35;21954:2;;22013:1;22010;22003:12;21954:2;21944:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1072200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bridgeAndSwap(uint256,bytes)": "infinite",
								"partnerId()": "1243",
								"sgReceive(uint16,bytes,uint256,address,uint256,bytes)": "infinite",
								"stargateRouter()": "1211",
								"widgetSwap()": "1280"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 705,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "2789"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "FFFF"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "FFFF"
								},
								{
									"begin": 687,
									"end": 710,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 687,
									"end": 710,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 733,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "277A"
								},
								{
									"begin": 717,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 717,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 717,
									"end": 738,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "FFFF"
								},
								{
									"begin": 717,
									"end": 738,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "FFFF"
								},
								{
									"begin": 717,
									"end": 738,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 717,
									"end": 738,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 762,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "DF0360AD8C5CCF25095AA97EE5F2785C8D848620"
								},
								{
									"begin": 747,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 747,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 747,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 747,
									"end": 804,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 804,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 804,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 747,
									"end": 804,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1058,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1058,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1044,
									"end": 1076,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1108,
									"end": 1127,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1127,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1156,
									"end": 1172,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1153,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1138,
									"end": 1153,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1172,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 941,
									"end": 1182,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 244,
									"end": 250,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 266,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 311,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 288,
									"end": 295,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 284,
									"end": 307,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 277,
									"end": 279,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 279,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 322,
									"end": 323,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 315,
									"end": 327,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 277,
									"end": 279,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 279,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 449,
									"end": 456,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 440,
									"end": 446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 429,
									"end": 438,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 425,
									"end": 447,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 393,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 393,
									"end": 457,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 393,
									"end": 457,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 393,
									"end": 457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 457,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 383,
									"end": 457,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 339,
									"end": 467,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 506,
									"end": 508,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 596,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 588,
									"end": 595,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 579,
									"end": 585,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 568,
									"end": 577,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 564,
									"end": 586,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 532,
									"end": 596,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 532,
									"end": 596,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 596,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 596,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 522,
									"end": 596,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 522,
									"end": 596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 477,
									"end": 606,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 645,
									"end": 647,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 727,
									"end": 734,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 718,
									"end": 724,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 707,
									"end": 716,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 703,
									"end": 725,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 671,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 671,
									"end": 735,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 671,
									"end": 735,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 671,
									"end": 735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 661,
									"end": 735,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 661,
									"end": 735,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 616,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 267,
									"end": 752,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 267,
									"end": 752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 267,
									"end": 752,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 267,
									"end": 752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 267,
									"end": 752,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 267,
									"end": 752,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 758,
									"end": 854,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 758,
									"end": 854,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 795,
									"end": 802,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 842,
									"end": 847,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 824,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 848,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 824,
									"end": 848,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 824,
									"end": 848,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 813,
									"end": 848,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 813,
									"end": 848,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 803,
									"end": 854,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 803,
									"end": 854,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 803,
									"end": 854,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 803,
									"end": 854,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 860,
									"end": 986,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 897,
									"end": 904,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 979,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 930,
									"end": 935,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 926,
									"end": 980,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 915,
									"end": 980,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 915,
									"end": 980,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 986,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 905,
									"end": 986,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 905,
									"end": 986,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 986,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 992,
									"end": 1114,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 992,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1065,
									"end": 1089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1065,
									"end": 1089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1065,
									"end": 1089,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1065,
									"end": 1089,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1065,
									"end": 1089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1058,
									"end": 1063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 1090,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1045,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1047,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1102,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1094,
									"end": 1106,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1045,
									"end": 1047,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1045,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1114,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1035,
									"end": 1114,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 3698,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072c80231e4ffbb7c5debad3620fb834b353fb52bd05b6cbee264a52e1009ec9a64736f6c63430008040033",
									".code": [
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "3576CA46"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "A9E56F3C"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "AA37DB6C"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "AB8236F3"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "DD1BC08E"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 3698,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1392,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1396,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1375,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1680,
											"end": 1690,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1704,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1657,
											"end": 1661,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1679,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1679,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1650,
											"end": 1679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1650,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1725,
											"end": 1749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1725,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "977F2CB9"
										},
										{
											"begin": 1855,
											"end": 1868,
											"name": "CHAINID",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1814,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "PUSH",
											"source": 4,
											"value": "9FBF10FC"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "FFFF"
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2371,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "30D40"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "3078000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1285,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 472,
											"end": 501,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "PUSH",
											"source": 4,
											"value": "F0"
										},
										{
											"begin": 576,
											"end": 599,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 576,
											"end": 599,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3187,
											"end": 3693,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 544,
											"end": 569,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1818,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1818,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2164,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2174,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2159,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2121,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2375,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2382,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2294,
											"end": 2384,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2384,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2294,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 2391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 2391,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5626,
											"end": 5631,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5727,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 5752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9294,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 9161,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7,
											"end": 350,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 249,
											"end": 251,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 249,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 280,
											"end": 292,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 249,
											"end": 251,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 337,
											"end": 343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 332,
											"end": 335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 327,
											"end": 330,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 350,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 356,
											"end": 495,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 356,
											"end": 495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 427,
											"end": 447,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 456,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 456,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 408,
											"end": 495,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 408,
											"end": 495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 495,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 501,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 555,
											"end": 560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 580,
											"end": 593,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 626,
											"end": 631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 602,
											"end": 632,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 632,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 602,
											"end": 632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 561,
											"end": 638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 638,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 657,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 657,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 714,
											"end": 722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 774,
											"end": 777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 755,
											"end": 772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 751,
											"end": 778,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 741,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 741,
											"end": 743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 792,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 782,
											"end": 794,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 741,
											"end": 743,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 741,
											"end": 743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 815,
											"end": 835,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 805,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 805,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 858,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 847,
											"end": 877,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 844,
											"end": 846,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 844,
											"end": 846,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 844,
											"end": 846,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 844,
											"end": 846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 915,
											"end": 932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 903,
											"end": 932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 903,
											"end": 932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 981,
											"end": 984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 973,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 961,
											"end": 978,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 951,
											"end": 959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 947,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 944,
											"end": 985,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 941,
											"end": 943,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 998,
											"end": 999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 941,
											"end": 943,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 731,
											"end": 1008,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 731,
											"end": 1008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 731,
											"end": 1008,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 731,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 731,
											"end": 1008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 731,
											"end": 1008,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1027,
											"end": 1298,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1027,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1135,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1151,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1196,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1288,
											"end": 1291,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1280,
											"end": 1286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1273,
											"end": 1277,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1214,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1292,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1298,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1298,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1088,
											"end": 1298,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1441,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1304,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1349,
											"end": 1354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1394,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1429,
											"end": 1434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1441,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1447,
											"end": 1588,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1447,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1541,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1576,
											"end": 1581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1588,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1588,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1588,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1594,
											"end": 1733,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1594,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1640,
											"end": 1645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1685,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1721,
											"end": 1726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1694,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1733,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1739,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1834,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1843,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1882,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1888,
											"end": 2166,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1888,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2007,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2141,
											"end": 2148,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2132,
											"end": 2138,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2088,
											"end": 2149,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2149,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2088,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2034,
											"end": 2159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2166,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2166,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 2166,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2172,
											"end": 2454,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2172,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2292,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2288,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2293,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2308,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2374,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2454,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2454,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 3670,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2460,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2627,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2658,
											"end": 2667,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2649,
											"end": 2656,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2674,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2689,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2775,
											"end": 2797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2755,
											"end": 2807,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2807,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2755,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2807,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2886,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2873,
											"end": 2882,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2888,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2934,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 2949,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2975,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3037,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3088,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3112,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3157,
											"end": 3164,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3112,
											"end": 3165,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3112,
											"end": 3165,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3112,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3102,
											"end": 3165,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3102,
											"end": 3165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3240,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3285,
											"end": 3292,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3240,
											"end": 3293,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3240,
											"end": 3293,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3240,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3293,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3185,
											"end": 3303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3369,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3414,
											"end": 3421,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3369,
											"end": 3422,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3422,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3369,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3422,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3504,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3550,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3519,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3517,
											"end": 3519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3563,
											"end": 3564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3517,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3645,
											"end": 3652,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3591,
											"end": 3653,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3591,
											"end": 3653,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3591,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3670,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3676,
											"end": 3960,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3676,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3770,
											"end": 3793,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3798,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3813,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3879,
											"end": 3943,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3943,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3879,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3943,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3869,
											"end": 3943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3825,
											"end": 3953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3960,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3960,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3966,
											"end": 4504,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3966,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4061,
											"end": 4067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4112,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4096,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4108,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4113,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4128,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4078,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4239,
											"end": 4246,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4237,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4194,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4247,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4140,
											"end": 4257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4322,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4296,
											"end": 4328,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4373,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4374,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4389,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4479,
											"end": 4486,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4468,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 4423,
											"end": 4487,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4423,
											"end": 4487,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4423,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4487,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4487,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4504,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4504,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4504,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4504,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4504,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4510,
											"end": 4652,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4510,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4639,
											"end": 4644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4613,
											"end": 4645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4613,
											"end": 4645,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4613,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 4646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4652,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4658,
											"end": 4776,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4658,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4763,
											"end": 4768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4745,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 4743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4776,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4782,
											"end": 4939,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4782,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4887,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4875,
											"end": 4933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4939,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4945,
											"end": 5060,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4945,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5030,
											"end": 5053,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5053,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5030,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5054,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5060,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5060,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5088,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5088,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5184,
											"end": 5187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5263,
											"end": 5266,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5205,
											"end": 5275,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5275,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5205,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5198,
											"end": 5275,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5198,
											"end": 5275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5285,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5319,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5285,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5285,
											"end": 5328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5285,
											"end": 5328,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5285,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5353,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5351,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5389,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5389,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5389,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5395,
											"end": 5735,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 5395,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5531,
											"end": 5536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5499,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 5499,
											"end": 5537,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5537,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5499,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5606,
											"end": 5612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5601,
											"end": 5604,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 5553,
											"end": 5613,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5553,
											"end": 5613,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5553,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5613,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5665,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5653,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5699,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5697,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5690,
											"end": 5729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5735,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5735,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5741,
											"end": 6101,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 5741,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5887,
											"end": 5892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5855,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5972,
											"end": 5978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 5970,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5909,
											"end": 5979,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 5979,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5909,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5979,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 6033,
											"end": 6039,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6031,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6025,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6014,
											"end": 6019,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 5988,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 6065,
											"end": 6094,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6094,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 6065,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 6101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 6101,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 6101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 6101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 6101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 6101,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6107,
											"end": 6480,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 6107,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6271,
											"end": 6276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 6239,
											"end": 6277,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6277,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 6239,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 6293,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6286,
											"end": 6381,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6286,
											"end": 6381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6433,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6416,
											"end": 6421,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6412,
											"end": 6428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6390,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6390,
											"end": 6442,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6442,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6390,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 6465,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6474,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6480,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6480,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6215,
											"end": 6480,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6486,
											"end": 6633,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6486,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6620,
											"end": 6625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6581,
											"end": 6626,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6581,
											"end": 6626,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6581,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6576,
											"end": 6579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6627,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6633,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6639,
											"end": 6786,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 6639,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6734,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6773,
											"end": 6778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6734,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6734,
											"end": 6779,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6734,
											"end": 6779,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6734,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6712,
											"end": 6786,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6792,
											"end": 7156,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6792,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6880,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6941,
											"end": 6946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6908,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6908,
											"end": 6947,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6908,
											"end": 6947,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6908,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6963,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7025,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6963,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6963,
											"end": 7034,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6963,
											"end": 7034,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6963,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 7034,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 7034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7083,
											"end": 7086,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7076,
											"end": 7080,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7074,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7065,
											"end": 7081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7043,
											"end": 7095,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7043,
											"end": 7095,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 7043,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7120,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7118,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7150,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 7156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 7156,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 7156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 7156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 7156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 7156,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7162,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7304,
											"end": 7307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7325,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7490,
											"end": 7493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7401,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7514,
											"end": 7517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7503,
											"end": 7522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7528,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7534,
											"end": 7900,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7534,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7697,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7761,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 7756,
											"end": 7759,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7697,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 7697,
											"end": 7764,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7697,
											"end": 7764,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7697,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7862,
											"end": 7865,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7773,
											"end": 7866,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7773,
											"end": 7866,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7773,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7886,
											"end": 7889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7894,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7680,
											"end": 7900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7680,
											"end": 7900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7680,
											"end": 7900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7680,
											"end": 7900,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8133,
											"end": 8135,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 8128,
											"end": 8131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8258,
											"end": 8261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8272,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8052,
											"end": 8272,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8278,
											"end": 8644,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8278,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8420,
											"end": 8423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8505,
											"end": 8507,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 8500,
											"end": 8503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8441,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 8441,
											"end": 8508,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8441,
											"end": 8508,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8441,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8434,
											"end": 8508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8434,
											"end": 8508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8517,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8606,
											"end": 8609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8517,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 8517,
											"end": 8610,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8517,
											"end": 8610,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 8517,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8630,
											"end": 8633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8424,
											"end": 8644,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8877,
											"end": 8879,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 8872,
											"end": 8875,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8806,
											"end": 8880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8978,
											"end": 8981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9007,
											"end": 9009,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9002,
											"end": 9005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8998,
											"end": 9010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 9016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 9016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 9016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 9016,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9094,
											"end": 9901,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 9094,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9244,
											"end": 9247,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9345,
											"end": 9349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9343,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9328,
											"end": 9351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 9421,
											"end": 9425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9419,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 9364,
											"end": 9427,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9364,
											"end": 9427,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 9364,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9534,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9528,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9513,
											"end": 9536,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 9606,
											"end": 9610,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9601,
											"end": 9604,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9597,
											"end": 9611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9549,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 9549,
											"end": 9612,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9549,
											"end": 9612,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 9549,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9447,
											"end": 9622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9713,
											"end": 9717,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9711,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9719,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9769,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9770,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9744,
											"end": 9747,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9733,
											"end": 9771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9792,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9792,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 9792,
											"end": 9863,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9792,
											"end": 9863,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 9792,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9863,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9784,
											"end": 9863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9891,
											"end": 9895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 9895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 9895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9901,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9901,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9901,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9907,
											"end": 10022,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9992,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10009,
											"end": 10014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9992,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 9992,
											"end": 10015,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9992,
											"end": 10015,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 9992,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 9990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9980,
											"end": 10016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10022,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10028,
											"end": 10136,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 10028,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10105,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10123,
											"end": 10128,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10105,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10105,
											"end": 10129,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10105,
											"end": 10129,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10105,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10100,
											"end": 10103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10093,
											"end": 10130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10136,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10142,
											"end": 10260,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10142,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10247,
											"end": 10252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10229,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10229,
											"end": 10253,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10229,
											"end": 10253,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10229,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10224,
											"end": 10227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10217,
											"end": 10254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10260,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10266,
											"end": 10522,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10266,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 10464,
											"end": 10467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10393,
											"end": 10468,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10393,
											"end": 10468,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 10393,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10495,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10484,
											"end": 10496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10477,
											"end": 10496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10477,
											"end": 10496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10382,
											"end": 10522,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10382,
											"end": 10522,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10382,
											"end": 10522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10382,
											"end": 10522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10382,
											"end": 10522,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10528,
											"end": 10799,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 10528,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10658,
											"end": 10661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 10769,
											"end": 10772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10760,
											"end": 10766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 10680,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10673,
											"end": 10773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10673,
											"end": 10773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10662,
											"end": 10799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10662,
											"end": 10799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10662,
											"end": 10799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10662,
											"end": 10799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10662,
											"end": 10799,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10805,
											"end": 11027,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 10805,
											"end": 11027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10898,
											"end": 10902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10936,
											"end": 10938,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10925,
											"end": 10934,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10921,
											"end": 10939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10913,
											"end": 10939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10913,
											"end": 10939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 11017,
											"end": 11018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11002,
											"end": 11019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 10949,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 11027,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 11027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 11027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 11027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 11027,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11033,
											"end": 11365,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 11033,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11194,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11181,
											"end": 11190,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11205,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11273,
											"end": 11274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11262,
											"end": 11271,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11205,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11205,
											"end": 11276,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11276,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11205,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11354,
											"end": 11356,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11343,
											"end": 11352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11339,
											"end": 11357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11330,
											"end": 11336,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11286,
											"end": 11358,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11286,
											"end": 11358,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11286,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11365,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11365,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11365,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11371,
											"end": 11813,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 11371,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11520,
											"end": 11524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11560,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11535,
											"end": 11561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11535,
											"end": 11561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11571,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11639,
											"end": 11640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11628,
											"end": 11637,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11624,
											"end": 11641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11571,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11571,
											"end": 11642,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11571,
											"end": 11642,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11571,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11720,
											"end": 11722,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11702,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11652,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11652,
											"end": 11724,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11652,
											"end": 11724,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11652,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11802,
											"end": 11804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11784,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11819,
											"end": 12151,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 11819,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11940,
											"end": 11944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11978,
											"end": 11980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11967,
											"end": 11976,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 11981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 12059,
											"end": 12060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12048,
											"end": 12057,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12044,
											"end": 12061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12035,
											"end": 12041,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11991,
											"end": 12062,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11991,
											"end": 12062,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11991,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 12140,
											"end": 12142,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12129,
											"end": 12138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12116,
											"end": 12122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12072,
											"end": 12144,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12072,
											"end": 12144,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 12072,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 12151,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 12151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 12151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 12151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 12151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11945,
											"end": 12151,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12157,
											"end": 12375,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12157,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12248,
											"end": 12252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12288,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12275,
											"end": 12284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12271,
											"end": 12289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12263,
											"end": 12289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12263,
											"end": 12289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12354,
											"end": 12363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12367,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12341,
											"end": 12347,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 12299,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12375,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12375,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12381,
											"end": 12694,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 12381,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12532,
											"end": 12534,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12521,
											"end": 12530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12509,
											"end": 12535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12509,
											"end": 12535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12581,
											"end": 12590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12591,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12567,
											"end": 12568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12552,
											"end": 12569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12609,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12682,
											"end": 12686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12679,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12609,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 12609,
											"end": 12687,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12609,
											"end": 12687,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12609,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12694,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12694,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12700,
											"end": 13119,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 12700,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12866,
											"end": 12870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12893,
											"end": 12902,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12889,
											"end": 12907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12881,
											"end": 12907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12881,
											"end": 12907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12953,
											"end": 12962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12943,
											"end": 12963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12939,
											"end": 12940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12928,
											"end": 12937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12924,
											"end": 12941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12964,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12981,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 13107,
											"end": 13111,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12981,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 12981,
											"end": 13112,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12981,
											"end": 13112,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12981,
											"end": 13112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12973,
											"end": 13112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12973,
											"end": 13112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12871,
											"end": 13119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12871,
											"end": 13119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12871,
											"end": 13119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12871,
											"end": 13119,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 13125,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13291,
											"end": 13295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13329,
											"end": 13331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13378,
											"end": 13387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13372,
											"end": 13376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13364,
											"end": 13365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13353,
											"end": 13362,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13349,
											"end": 13366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13342,
											"end": 13389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 13532,
											"end": 13536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 13406,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13398,
											"end": 13537,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13398,
											"end": 13537,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13544,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13550,
											"end": 13969,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 13550,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13754,
											"end": 13756,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 13757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13803,
											"end": 13812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13797,
											"end": 13801,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13793,
											"end": 13813,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13789,
											"end": 13790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13774,
											"end": 13791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13767,
											"end": 13814,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13831,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 13957,
											"end": 13961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13831,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 13831,
											"end": 13962,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13831,
											"end": 13962,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 13831,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13823,
											"end": 13962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13823,
											"end": 13962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13969,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13721,
											"end": 13969,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13975,
											"end": 14394,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 13975,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14179,
											"end": 14181,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14168,
											"end": 14177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14164,
											"end": 14182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14156,
											"end": 14182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14156,
											"end": 14182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14228,
											"end": 14237,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14222,
											"end": 14226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14218,
											"end": 14238,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14214,
											"end": 14215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14203,
											"end": 14212,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14199,
											"end": 14216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14192,
											"end": 14239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 14382,
											"end": 14386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14256,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 14256,
											"end": 14387,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14256,
											"end": 14387,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 14256,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14248,
											"end": 14387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14248,
											"end": 14387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14394,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14400,
											"end": 14819,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 14400,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14570,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14604,
											"end": 14606,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14593,
											"end": 14602,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14589,
											"end": 14607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14653,
											"end": 14662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14643,
											"end": 14663,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14639,
											"end": 14640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14628,
											"end": 14637,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14617,
											"end": 14664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 14807,
											"end": 14811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14681,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14681,
											"end": 14812,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14681,
											"end": 14812,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 14681,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14673,
											"end": 14812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14673,
											"end": 14812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14819,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14819,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14825,
											"end": 16354,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 14825,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15314,
											"end": 15317,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 15303,
											"end": 15312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15299,
											"end": 15318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15328,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 15394,
											"end": 15395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15383,
											"end": 15392,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15379,
											"end": 15396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15370,
											"end": 15376,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 15328,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 15328,
											"end": 15397,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15328,
											"end": 15397,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 15328,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15407,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 15483,
											"end": 15485,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15472,
											"end": 15481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15468,
											"end": 15486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15459,
											"end": 15465,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 15407,
											"end": 15487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15407,
											"end": 15487,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15407,
											"end": 15487,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 15407,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 15573,
											"end": 15575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15562,
											"end": 15571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15558,
											"end": 15576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15549,
											"end": 15555,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 15497,
											"end": 15577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15497,
											"end": 15577,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15497,
											"end": 15577,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 15497,
											"end": 15577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15587,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 15671,
											"end": 15673,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15660,
											"end": 15669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15647,
											"end": 15653,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 15587,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 15587,
											"end": 15675,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15587,
											"end": 15675,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 15587,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 15753,
											"end": 15756,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 15742,
											"end": 15751,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15738,
											"end": 15757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15729,
											"end": 15735,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 15685,
											"end": 15758,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15685,
											"end": 15758,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 15685,
											"end": 15758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15768,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 15844,
											"end": 15847,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15833,
											"end": 15842,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15820,
											"end": 15826,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15768,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 15768,
											"end": 15849,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15768,
											"end": 15849,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 15768,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15897,
											"end": 15906,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15891,
											"end": 15895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15887,
											"end": 15907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15881,
											"end": 15884,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15866,
											"end": 15885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15925,
											"end": 16033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 16028,
											"end": 16032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16025,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15925,
											"end": 16033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 15925,
											"end": 16033,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15925,
											"end": 16033,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 15925,
											"end": 16033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15917,
											"end": 16033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15917,
											"end": 16033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16081,
											"end": 16090,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16075,
											"end": 16079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16071,
											"end": 16091,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16065,
											"end": 16068,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16050,
											"end": 16069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16043,
											"end": 16092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16109,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 16180,
											"end": 16184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16171,
											"end": 16177,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16109,
											"end": 16185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 16109,
											"end": 16185,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16109,
											"end": 16185,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 16109,
											"end": 16185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16101,
											"end": 16185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16101,
											"end": 16185,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16233,
											"end": 16242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16227,
											"end": 16231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16223,
											"end": 16243,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16217,
											"end": 16220,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 16206,
											"end": 16215,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16202,
											"end": 16221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16195,
											"end": 16244,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 16342,
											"end": 16346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16333,
											"end": 16339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16331,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 16261,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16253,
											"end": 16347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16253,
											"end": 16347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15281,
											"end": 16354,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16360,
											"end": 16582,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 16360,
											"end": 16582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16453,
											"end": 16457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16491,
											"end": 16493,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16480,
											"end": 16489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16476,
											"end": 16494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16468,
											"end": 16494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16468,
											"end": 16494,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16504,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 16572,
											"end": 16573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16561,
											"end": 16570,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16557,
											"end": 16574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16548,
											"end": 16554,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16504,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 16504,
											"end": 16575,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16504,
											"end": 16575,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 16504,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16582,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16582,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16582,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16588,
											"end": 16717,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 16588,
											"end": 16717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16622,
											"end": 16628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16649,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 16649,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 16649,
											"end": 16669,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16649,
											"end": 16669,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 16649,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16639,
											"end": 16669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16639,
											"end": 16669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16678,
											"end": 16711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 16706,
											"end": 16710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16698,
											"end": 16704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16678,
											"end": 16711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 16678,
											"end": 16711,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16678,
											"end": 16711,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 16678,
											"end": 16711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16629,
											"end": 16717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16629,
											"end": 16717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16629,
											"end": 16717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16629,
											"end": 16717,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16723,
											"end": 16798,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 16723,
											"end": 16798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16756,
											"end": 16762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16789,
											"end": 16791,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16783,
											"end": 16792,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16773,
											"end": 16792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16773,
											"end": 16792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16763,
											"end": 16798,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16804,
											"end": 17111,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 16804,
											"end": 17111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16865,
											"end": 16869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 16973,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16947,
											"end": 16953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16944,
											"end": 16974,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17015,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 17037,
											"end": 17043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17015,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 17015,
											"end": 17044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17015,
											"end": 17044,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 17015,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17007,
											"end": 17044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17007,
											"end": 17044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17099,
											"end": 17103,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17093,
											"end": 17097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17089,
											"end": 17104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17081,
											"end": 17104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17081,
											"end": 17104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16870,
											"end": 17111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16870,
											"end": 17111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16870,
											"end": 17111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16870,
											"end": 17111,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17117,
											"end": 17215,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 17117,
											"end": 17215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17202,
											"end": 17207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17196,
											"end": 17208,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17186,
											"end": 17208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17186,
											"end": 17208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17215,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17175,
											"end": 17215,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17221,
											"end": 17320,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 17221,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17273,
											"end": 17279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17307,
											"end": 17312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17301,
											"end": 17313,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17291,
											"end": 17313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17291,
											"end": 17313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17280,
											"end": 17320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17280,
											"end": 17320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17280,
											"end": 17320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17280,
											"end": 17320,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17326,
											"end": 17484,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 17326,
											"end": 17484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17399,
											"end": 17410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17433,
											"end": 17439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17421,
											"end": 17440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17473,
											"end": 17477,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17468,
											"end": 17471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17464,
											"end": 17478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17449,
											"end": 17478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17449,
											"end": 17478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17484,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17484,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17411,
											"end": 17484,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17490,
											"end": 17658,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 17490,
											"end": 17658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17573,
											"end": 17584,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17602,
											"end": 17605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17595,
											"end": 17614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17647,
											"end": 17651,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17642,
											"end": 17645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17638,
											"end": 17652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17623,
											"end": 17652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17623,
											"end": 17652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17658,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17658,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17664,
											"end": 17811,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 17664,
											"end": 17811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17765,
											"end": 17776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17802,
											"end": 17805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17787,
											"end": 17805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17787,
											"end": 17805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17777,
											"end": 17811,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17777,
											"end": 17811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17777,
											"end": 17811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17777,
											"end": 17811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17777,
											"end": 17811,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17817,
											"end": 17986,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 17817,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17901,
											"end": 17912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17935,
											"end": 17941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17930,
											"end": 17933,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17923,
											"end": 17942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 17979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17970,
											"end": 17973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17966,
											"end": 17980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17951,
											"end": 17980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17951,
											"end": 17980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 17986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 17986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 17986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 17986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17913,
											"end": 17986,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17992,
											"end": 18088,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 17992,
											"end": 18088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18029,
											"end": 18036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18058,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 18076,
											"end": 18081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18058,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 18058,
											"end": 18082,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18058,
											"end": 18082,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 18058,
											"end": 18082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18047,
											"end": 18082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18047,
											"end": 18082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18037,
											"end": 18088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18037,
											"end": 18088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18037,
											"end": 18088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18037,
											"end": 18088,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18094,
											"end": 18198,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 18094,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18139,
											"end": 18146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18168,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 18186,
											"end": 18191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18168,
											"end": 18192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 18168,
											"end": 18192,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18168,
											"end": 18192,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 18168,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18157,
											"end": 18192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18157,
											"end": 18192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18198,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18204,
											"end": 18294,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 18204,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18238,
											"end": 18245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18281,
											"end": 18286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18274,
											"end": 18287,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18267,
											"end": 18288,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18256,
											"end": 18288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18256,
											"end": 18288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18246,
											"end": 18294,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18246,
											"end": 18294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18246,
											"end": 18294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18246,
											"end": 18294,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18300,
											"end": 18449,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 18300,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18336,
											"end": 18343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18376,
											"end": 18442,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18369,
											"end": 18374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18365,
											"end": 18443,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18354,
											"end": 18443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18344,
											"end": 18449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18344,
											"end": 18449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18344,
											"end": 18449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18344,
											"end": 18449,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18455,
											"end": 18544,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 18455,
											"end": 18544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18491,
											"end": 18498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18531,
											"end": 18537,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 18524,
											"end": 18529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18520,
											"end": 18538,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18509,
											"end": 18538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18509,
											"end": 18538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18544,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18550,
											"end": 18676,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 18550,
											"end": 18676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18587,
											"end": 18594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18627,
											"end": 18669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18620,
											"end": 18625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18616,
											"end": 18670,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18605,
											"end": 18670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18605,
											"end": 18670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18595,
											"end": 18676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18595,
											"end": 18676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18595,
											"end": 18676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18595,
											"end": 18676,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18682,
											"end": 18759,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 18682,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18719,
											"end": 18726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18748,
											"end": 18753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 18753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18737,
											"end": 18753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 18759,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18765,
											"end": 18886,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 18765,
											"end": 18886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18823,
											"end": 18832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18856,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 18874,
											"end": 18879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18856,
											"end": 18880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 18856,
											"end": 18880,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18856,
											"end": 18880,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 18856,
											"end": 18880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18843,
											"end": 18880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18886,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18892,
											"end": 19013,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 18892,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18950,
											"end": 18959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 19007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 19001,
											"end": 19006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18983,
											"end": 19007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 18983,
											"end": 19007,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18983,
											"end": 19007,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 18983,
											"end": 19007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18970,
											"end": 19007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18970,
											"end": 19007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18960,
											"end": 19013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18960,
											"end": 19013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18960,
											"end": 19013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18960,
											"end": 19013,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19019,
											"end": 19173,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 19019,
											"end": 19173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19103,
											"end": 19109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19098,
											"end": 19101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19093,
											"end": 19096,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19080,
											"end": 19110,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 19165,
											"end": 19166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19156,
											"end": 19162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19151,
											"end": 19154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19140,
											"end": 19167,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19070,
											"end": 19173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19070,
											"end": 19173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19070,
											"end": 19173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19070,
											"end": 19173,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19179,
											"end": 19486,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 19179,
											"end": 19486,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19247,
											"end": 19248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19271,
											"end": 19277,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19268,
											"end": 19269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19265,
											"end": 19278,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19356,
											"end": 19357,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19351,
											"end": 19354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19347,
											"end": 19358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19341,
											"end": 19359,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19337,
											"end": 19338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19332,
											"end": 19335,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19328,
											"end": 19339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19321,
											"end": 19360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19293,
											"end": 19295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19290,
											"end": 19291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19286,
											"end": 19296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19281,
											"end": 19296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19281,
											"end": 19296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 19257,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19388,
											"end": 19394,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19385,
											"end": 19386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19382,
											"end": 19395,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 19379,
											"end": 19381,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19379,
											"end": 19381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 19379,
											"end": 19381,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19468,
											"end": 19469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19459,
											"end": 19465,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19454,
											"end": 19457,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19450,
											"end": 19466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19443,
											"end": 19470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19379,
											"end": 19381,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 19379,
											"end": 19381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19228,
											"end": 19486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19228,
											"end": 19486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19228,
											"end": 19486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19228,
											"end": 19486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19228,
											"end": 19486,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19492,
											"end": 19773,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 19492,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 19597,
											"end": 19601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 19575,
											"end": 19602,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19575,
											"end": 19602,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 19575,
											"end": 19602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19567,
											"end": 19573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19563,
											"end": 19603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19705,
											"end": 19711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19693,
											"end": 19703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19690,
											"end": 19712,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 19669,
											"end": 19687,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19657,
											"end": 19667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19654,
											"end": 19688,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 19651,
											"end": 19713,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19716,
											"end": 19734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 19716,
											"end": 19734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 19716,
											"end": 19734,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19716,
											"end": 19734,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 19716,
											"end": 19734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 19648,
											"end": 19650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19756,
											"end": 19766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19752,
											"end": 19754,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19745,
											"end": 19767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19535,
											"end": 19773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19535,
											"end": 19773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19535,
											"end": 19773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19535,
											"end": 19773,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19779,
											"end": 19879,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 19779,
											"end": 19879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19818,
											"end": 19825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19847,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 19867,
											"end": 19872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19847,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 19847,
											"end": 19873,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19847,
											"end": 19873,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 19847,
											"end": 19873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19836,
											"end": 19873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19836,
											"end": 19873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19826,
											"end": 19879,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19826,
											"end": 19879,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19826,
											"end": 19879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19826,
											"end": 19879,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19885,
											"end": 19979,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 19885,
											"end": 19979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19924,
											"end": 19931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19953,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 19967,
											"end": 19972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19953,
											"end": 19973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 19953,
											"end": 19973,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19953,
											"end": 19973,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 19953,
											"end": 19973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 19973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19942,
											"end": 19973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19932,
											"end": 19979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19932,
											"end": 19979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19932,
											"end": 19979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19932,
											"end": 19979,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19985,
											"end": 20165,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 19985,
											"end": 20165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20033,
											"end": 20110,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20030,
											"end": 20031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20023,
											"end": 20111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20130,
											"end": 20134,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 20127,
											"end": 20128,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20120,
											"end": 20135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20154,
											"end": 20158,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20151,
											"end": 20152,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20144,
											"end": 20159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20171,
											"end": 20273,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 20171,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20212,
											"end": 20218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20263,
											"end": 20265,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20259,
											"end": 20266,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 20254,
											"end": 20256,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20247,
											"end": 20252,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20243,
											"end": 20257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20239,
											"end": 20267,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20229,
											"end": 20267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20229,
											"end": 20267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20273,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20279,
											"end": 20373,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 20279,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20312,
											"end": 20320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20360,
											"end": 20365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20356,
											"end": 20358,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20352,
											"end": 20366,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 20331,
											"end": 20366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20331,
											"end": 20366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20321,
											"end": 20373,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20321,
											"end": 20373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20321,
											"end": 20373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20321,
											"end": 20373,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20379,
											"end": 20621,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 20379,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20553,
											"name": "PUSH",
											"source": 9,
											"value": "73746172676174652072657175697265732061206D73672E76616C756520746F"
										},
										{
											"begin": 20515,
											"end": 20516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20507,
											"end": 20513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20503,
											"end": 20517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20496,
											"end": 20554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20588,
											"end": 20613,
											"name": "PUSH",
											"source": 9,
											"value": "207061792063726F7373636861696E206D657373616765000000000000000000"
										},
										{
											"begin": 20583,
											"end": 20585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20575,
											"end": 20581,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20571,
											"end": 20586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20564,
											"end": 20614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20485,
											"end": 20621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20485,
											"end": 20621,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20627,
											"end": 20852,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 20627,
											"end": 20852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20767,
											"end": 20801,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 20763,
											"end": 20764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20755,
											"end": 20761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20751,
											"end": 20765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20744,
											"end": 20802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20836,
											"end": 20844,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20831,
											"end": 20833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20823,
											"end": 20829,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20819,
											"end": 20834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20812,
											"end": 20845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20733,
											"end": 20852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20733,
											"end": 20852,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20858,
											"end": 21037,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 20858,
											"end": 21037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20998,
											"end": 21029,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 20994,
											"end": 20995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20986,
											"end": 20992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20982,
											"end": 20996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20975,
											"end": 21030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20964,
											"end": 21037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20964,
											"end": 21037,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21043,
											"end": 21272,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 21043,
											"end": 21272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21183,
											"end": 21217,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21179,
											"end": 21180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21171,
											"end": 21177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21167,
											"end": 21181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21160,
											"end": 21218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21252,
											"end": 21264,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21247,
											"end": 21249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21239,
											"end": 21245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21235,
											"end": 21250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21228,
											"end": 21265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21149,
											"end": 21272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21149,
											"end": 21272,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21278,
											"end": 21519,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 21278,
											"end": 21519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21418,
											"end": 21452,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 21414,
											"end": 21415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21406,
											"end": 21412,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21402,
											"end": 21416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21395,
											"end": 21453,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21487,
											"end": 21511,
											"name": "PUSH",
											"source": 9,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 21482,
											"end": 21484,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21474,
											"end": 21480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21470,
											"end": 21485,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21519,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21525,
											"end": 21647,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 21525,
											"end": 21647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21598,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 21616,
											"end": 21621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21598,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 21598,
											"end": 21622,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21598,
											"end": 21622,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 21598,
											"end": 21622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21591,
											"end": 21596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21588,
											"end": 21623,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21578,
											"end": 21580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 21578,
											"end": 21580,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21637,
											"end": 21638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21634,
											"end": 21635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21627,
											"end": 21639,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21578,
											"end": 21580,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 21578,
											"end": 21580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21568,
											"end": 21647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21568,
											"end": 21647,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21653,
											"end": 21769,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 21653,
											"end": 21769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21723,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 21738,
											"end": 21743,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21723,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 21723,
											"end": 21744,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21723,
											"end": 21744,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 21723,
											"end": 21744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21716,
											"end": 21721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21713,
											"end": 21745,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21703,
											"end": 21705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 21703,
											"end": 21705,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21759,
											"end": 21760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21756,
											"end": 21757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21749,
											"end": 21761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21703,
											"end": 21705,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 21703,
											"end": 21705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21693,
											"end": 21769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21693,
											"end": 21769,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21775,
											"end": 21895,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 21775,
											"end": 21895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21847,
											"end": 21870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 21864,
											"end": 21869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21847,
											"end": 21870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 21847,
											"end": 21870,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21847,
											"end": 21870,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 21847,
											"end": 21870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21840,
											"end": 21845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21837,
											"end": 21871,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21827,
											"end": 21829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 21827,
											"end": 21829,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21885,
											"end": 21886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21882,
											"end": 21883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21875,
											"end": 21887,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21827,
											"end": 21829,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 21827,
											"end": 21829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21817,
											"end": 21895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21817,
											"end": 21895,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21901,
											"end": 22023,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 21901,
											"end": 22023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21974,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 21992,
											"end": 21997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21974,
											"end": 21998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 21974,
											"end": 21998,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21974,
											"end": 21998,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 21974,
											"end": 21998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21967,
											"end": 21972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21964,
											"end": 21999,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 21954,
											"end": 21956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 21954,
											"end": 21956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22013,
											"end": 22014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22010,
											"end": 22011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22015,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 21954,
											"end": 21956,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 21954,
											"end": 21956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21944,
											"end": 22023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21944,
											"end": 22023,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bridgeAndSwap(uint256,bytes)": "3576ca46",
							"partnerId()": "aa37db6c",
							"sgReceive(uint16,bytes,uint256,address,uint256,bytes)": "ab8236f3",
							"stargateRouter()": "a9e56f3c",
							"widgetSwap()": "dd1bc08e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stargateRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destinationAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"ReceivedOnDestination\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"someMsg\",\"type\":\"bytes\"}],\"name\":\"bridgeAndSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partnerId\",\"outputs\":[{\"internalType\":\"bytes2\",\"name\":\"\",\"type\":\"bytes2\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stargateRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"widgetSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":\"PolygonHub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"solidity-examples-main/contracts/Multistake/PolygonHub.sol\":{\"keccak256\":\"0x5c061759be0f1dedc40e7cd3b6617f9b87bce4198146d89fbe37deccd55324bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b51bf7d4434503c387099c687018d817c1ce4f8d0d969c5961de96cc5484e22f\",\"dweb:/ipfs/QmPBdLpLsbEaYwov3xGc3W2bhaU2EPRr9Lpy3zHazwQBYJ\"]},\"solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol\":{\"keccak256\":\"0x19842d6d84201812c1b46dc8447316f7d577dbe9c6a41933206d04d916f6065d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89831198534d91af722d78352fe0636d1e223fefaf4199229177c4b8e105904c\",\"dweb:/ipfs/QmSzSXYQdTumbVXFWUzw77DXgCuHr33Vr5f5GHT14cdzhE\"]},\"solidity-examples-main/contracts/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0x14fb888e3e73a90a0a7ea6da0bd8edc081350cf253aa84318ba0783e07c64397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eaf197951b4676b404eab0aeb0739100690ed02bb82145ded3e53e43b65c48cc\",\"dweb:/ipfs/QmYqDARHyajgWki7JJzkMUgcBxu1uYLi17eCk2HfwDxiJG\"]},\"solidity-examples-main/contracts/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x68a2773e7853ba51d5bb136e9447c9e5b31ec27c38e46861a5956b34e0612c1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://609d4edc0987a6014d104c4815477bb8f83a36f31c81057001585271fc1b9ad6\",\"dweb:/ipfs/QmR1z6FrraGxZszanRWugsSgtfcxr4oFoBgzbj5Hmy9bMY\"]},\"solidity-examples-main/contracts/interfaces/IStargateWidget.sol\":{\"keccak256\":\"0xa90c5882bb69970a6fd4ecc825527a5cb376601fca72101e61029e56e86d8390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eb8e1c9b0174a106b80f9b931aecd1c4343e407f40926f4d6bcc8cb191f93d8\",\"dweb:/ipfs/QmdSVRCQ6KZQQjtq8n5YJm6ByzTX2VmyiB15Xav73chz8Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 836,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "stargateRouter",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 838,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "widgetSwap",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 840,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "partnerId",
								"offset": 20,
								"slot": "1",
								"type": "t_bytes2"
							},
							{
								"astId": 843,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "GoerliId",
								"offset": 22,
								"slot": "1",
								"type": "t_uint16"
							},
							{
								"astId": 846,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "FujiId",
								"offset": 24,
								"slot": "1",
								"type": "t_uint16"
							},
							{
								"astId": 849,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "USDC",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 851,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "destinationAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 853,
								"contract": "solidity-examples-main/contracts/Multistake/PolygonHub.sol:PolygonHub",
								"label": "registryAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes2": {
								"encoding": "inplace",
								"label": "bytes2",
								"numberOfBytes": "2"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol": {
				"IRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								}
							],
							"name": "getStargateId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getStargateId(uint256)": "977f2cb9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getStargateId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol\":{\"keccak256\":\"0x19842d6d84201812c1b46dc8447316f7d577dbe9c6a41933206d04d916f6065d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89831198534d91af722d78352fe0636d1e223fefaf4199229177c4b8e105904c\",\"dweb:/ipfs/QmSzSXYQdTumbVXFWUzw77DXgCuHr33Vr5f5GHT14cdzhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity-examples-main/contracts/interfaces/IStargateReceiver.sol": {
				"IStargateReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_chainId",
									"type": "uint16"
								},
								{
									"internalType": "bytes",
									"name": "_srcAddress",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountLD",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "sgReceive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"sgReceive(uint16,bytes,uint256,address,uint256,bytes)": "ab8236f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-examples-main/contracts/interfaces/IStargateReceiver.sol\":\"IStargateReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-examples-main/contracts/interfaces/IStargateReceiver.sol\":{\"keccak256\":\"0x14fb888e3e73a90a0a7ea6da0bd8edc081350cf253aa84318ba0783e07c64397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eaf197951b4676b404eab0aeb0739100690ed02bb82145ded3e53e43b65c48cc\",\"dweb:/ipfs/QmYqDARHyajgWki7JJzkMUgcBxu1uYLi17eCk2HfwDxiJG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity-examples-main/contracts/interfaces/IStargateRouter.sol": {
				"IStargateRouter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amountLD",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_srcPoolId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_amountLP",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "instantRedeemLocal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "_functionType",
									"type": "uint8"
								},
								{
									"internalType": "bytes",
									"name": "_toAddress",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_transferAndCallPayload",
									"type": "bytes"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "dstGasForCall",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dstNativeAmount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "dstNativeAddr",
											"type": "bytes"
										}
									],
									"internalType": "struct IStargateRouter.lzTxObj",
									"name": "_lzTxParams",
									"type": "tuple"
								}
							],
							"name": "quoteLayerZeroFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_srcPoolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstPoolId",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_refundAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountLP",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_to",
									"type": "bytes"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "dstGasForCall",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dstNativeAmount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "dstNativeAddr",
											"type": "bytes"
										}
									],
									"internalType": "struct IStargateRouter.lzTxObj",
									"name": "_lzTxParams",
									"type": "tuple"
								}
							],
							"name": "redeemLocal",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_srcPoolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstPoolId",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_refundAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountLP",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minAmountLD",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_to",
									"type": "bytes"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "dstGasForCall",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dstNativeAmount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "dstNativeAddr",
											"type": "bytes"
										}
									],
									"internalType": "struct IStargateRouter.lzTxObj",
									"name": "_lzTxParams",
									"type": "tuple"
								}
							],
							"name": "redeemRemote",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_srcPoolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstPoolId",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_refundAddress",
									"type": "address"
								}
							],
							"name": "sendCredits",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_srcPoolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dstPoolId",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_refundAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountLD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minAmountLD",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "dstGasForCall",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dstNativeAmount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "dstNativeAddr",
											"type": "bytes"
										}
									],
									"internalType": "struct IStargateRouter.lzTxObj",
									"name": "_lzTxParams",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "_to",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_payload",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256,address)": "87b21efc",
							"instantRedeemLocal(uint16,uint256,address)": "c4de93a5",
							"quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))": "0a512369",
							"redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))": "8f2e1d18",
							"redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))": "84d0dba3",
							"sendCredits(uint16,uint256,uint256,address)": "9ba3aa74",
							"swap(uint16,uint256,uint256,address,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)": "9fbf10fc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcPoolId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"instantRedeemLocal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_functionType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_toAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_transferAndCallPayload\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"quoteLayerZeroFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"redeemLocal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"}],\"name\":\"redeemRemote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"sendCredits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-examples-main/contracts/interfaces/IStargateRouter.sol\":\"IStargateRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-examples-main/contracts/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x68a2773e7853ba51d5bb136e9447c9e5b31ec27c38e46861a5956b34e0612c1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://609d4edc0987a6014d104c4815477bb8f83a36f31c81057001585271fc1b9ad6\",\"dweb:/ipfs/QmR1z6FrraGxZszanRWugsSgtfcxr4oFoBgzbj5Hmy9bMY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"solidity-examples-main/contracts/interfaces/IStargateWidget.sol": {
				"IStargateWidget": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes2",
									"name": "partnerId",
									"type": "bytes2"
								}
							],
							"name": "PartnerSwap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes2",
									"name": "partnerId",
									"type": "bytes2"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tenthBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "widgetFee",
									"type": "uint256"
								}
							],
							"name": "WidgetSwapped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes2",
									"name": "_partnerId",
									"type": "bytes2"
								}
							],
							"name": "partnerSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_amountLD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minAmountLD",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_to",
									"type": "bytes"
								},
								{
									"internalType": "bytes2",
									"name": "_partnerId",
									"type": "bytes2"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tenthBps",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IStargateWidget.FeeObj",
									"name": "_feeObj",
									"type": "tuple"
								}
							],
							"name": "swapETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_dstChainId",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_srcPoolId",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_dstPoolId",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_amountLD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minAmountLD",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "dstGasForCall",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "dstNativeAmount",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "dstNativeAddr",
											"type": "bytes"
										}
									],
									"internalType": "struct IStargateRouter.lzTxObj",
									"name": "_lzTxParams",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "_to",
									"type": "bytes"
								},
								{
									"internalType": "bytes2",
									"name": "_partnerId",
									"type": "bytes2"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tenthBps",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "feeCollector",
											"type": "address"
										}
									],
									"internalType": "struct IStargateWidget.FeeObj",
									"name": "_feeObj",
									"type": "tuple"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"partnerSwap(bytes2)": "a87376e9",
							"swapETH(uint16,uint256,uint256,bytes,bytes2,(uint256,address))": "919d7637",
							"swapTokens(uint16,uint16,uint16,uint256,uint256,(uint256,uint256,bytes),bytes,bytes2,(uint256,address))": "2d62fc1a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes2\",\"name\":\"partnerId\",\"type\":\"bytes2\"}],\"name\":\"PartnerSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes2\",\"name\":\"partnerId\",\"type\":\"bytes2\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tenthBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"widgetFee\",\"type\":\"uint256\"}],\"name\":\"WidgetSwapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes2\",\"name\":\"_partnerId\",\"type\":\"bytes2\"}],\"name\":\"partnerSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"internalType\":\"bytes2\",\"name\":\"_partnerId\",\"type\":\"bytes2\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tenthBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IStargateWidget.FeeObj\",\"name\":\"_feeObj\",\"type\":\"tuple\"}],\"name\":\"swapETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_srcPoolId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_dstPoolId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_amountLD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountLD\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"_lzTxParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"internalType\":\"bytes2\",\"name\":\"_partnerId\",\"type\":\"bytes2\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tenthBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct IStargateWidget.FeeObj\",\"name\":\"_feeObj\",\"type\":\"tuple\"}],\"name\":\"swapTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-examples-main/contracts/interfaces/IStargateWidget.sol\":\"IStargateWidget\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-examples-main/contracts/interfaces/IStargateRouter.sol\":{\"keccak256\":\"0x68a2773e7853ba51d5bb136e9447c9e5b31ec27c38e46861a5956b34e0612c1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://609d4edc0987a6014d104c4815477bb8f83a36f31c81057001585271fc1b9ad6\",\"dweb:/ipfs/QmR1z6FrraGxZszanRWugsSgtfcxr4oFoBgzbj5Hmy9bMY\"]},\"solidity-examples-main/contracts/interfaces/IStargateWidget.sol\":{\"keccak256\":\"0xa90c5882bb69970a6fd4ecc825527a5cb376601fca72101e61029e56e86d8390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eb8e1c9b0174a106b80f9b931aecd1c4343e407f40926f4d6bcc8cb191f93d8\",\"dweb:/ipfs/QmdSVRCQ6KZQQjtq8n5YJm6ByzTX2VmyiB15Xav73chz8Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7863,
					"file": "@openzeppelin/contracts/utils/Address.sol",
					"start": 7851
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8678,
					"file": "@openzeppelin/contracts/utils/Address.sol",
					"start": 8666
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> solidity-examples-main/contracts/Multistake/PolygonHub.sol:60:9:\n   |\n60 |         uint16 polygonId = IRegistry(registryAddress).getStargateId(block.chainid);\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1811,
					"file": "solidity-examples-main/contracts/Multistake/PolygonHub.sol",
					"start": 1795
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:0"
									},
									"scope": 77,
									"src": "2646:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2534:0",
							"usedErrors": []
						}
					],
					"src": "106:2631:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1503:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1528:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1551:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1577:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1594:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1613:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:1"
									},
									"scope": 113,
									"src": "1455:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1959:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1997:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:1"
									},
									"scope": 113,
									"src": "1943:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2249:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:1"
									},
									"scope": 113,
									"src": "2198:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "629:1631:1",
							"usedErrors": []
						}
					],
					"src": "123:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							819
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							489
						]
					},
					"id": 490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 114,
							"src": "164:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 490,
							"sourceUnit": 820,
							"src": "205:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 489,
							"linearizedBaseContracts": [
								489
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "731:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1013:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1043:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 137,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "1073:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1073:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 140,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1098:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 141,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1102:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 135,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 133,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1023:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:2"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "963:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 124,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "963:6:2"
													},
													"referencedDeclaration": 77,
													"src": "963:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "977:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:2"
									},
									"scope": 489,
									"src": "941:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "1445:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1475:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 163,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1505:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1505:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 166,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1534:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 167,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1540:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 168,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1544:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 161,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 159,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1455:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:2"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1381:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 148,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1381:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1381:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1395:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1409:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:2"
									},
									"scope": 489,
									"src": "1355:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1894:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 185,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2143:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 188,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 193,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$489",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$489",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 191,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 195,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 179,
																					"src": "2190:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 189,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "2159:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "2159:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 208,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 177,
																			"src": "2344:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2344:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 211,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2368:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2377:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 206,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 204,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2294:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:2"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 175,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1839:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1839:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1870:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:2"
									},
									"scope": 489,
									"src": "1818:573:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2668:194:2",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "2678:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 234,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$489",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$489",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "2732:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 230,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2701:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2701:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2770:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 243,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "2800:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2800:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 246,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2824:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 247,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2833:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 248,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "2848:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 241,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 239,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2750:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:2"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2613:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2613:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2627:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2644:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:2"
									},
									"scope": 489,
									"src": "2582:280:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "3139:321:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:2",
												"statements": [
													{
														"assignments": [
															266
														],
														"declarations": [
															{
																"constant": false,
																"id": 266,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "3173:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 265,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 275,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 271,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$489",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$489",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 269,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 273,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3227:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 267,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "3196:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "3196:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 277,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "3257:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 278,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "3273:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 276,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 282,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 284,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "3358:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 287,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 258,
																					"src": "3388:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 288,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3388:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 290,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "3412:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 291,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "3421:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 292,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "3436:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 285,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 283,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "3338:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3084:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 256,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3084:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3084:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3098:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3115:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:2"
									},
									"scope": 489,
									"src": "3053:407:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "3833:333:2",
										"statements": [
											{
												"assignments": [
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3856:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "3843:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 310,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3843:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 314,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "3894:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 64,
																"src": "3894:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3894:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 317,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3927:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 312,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3871:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3871:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3843:90:2"
											},
											{
												"condition": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3948:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 322,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "3973:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 323,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "3980:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 321,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3949:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3949:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "3944:216:2",
												"trueBody": {
													"id": 343,
													"nodeType": "Block",
													"src": "3995:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "4029:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 330,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 303,
																						"src": "4059:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 64,
																					"src": "4059:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4059:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 333,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "4083:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4092:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 328,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4036:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4036:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4036:58:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 326,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4009:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4009:86:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 337,
															"nodeType": "ExpressionStatement",
															"src": "4009:86:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 339,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "4129:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 340,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "4136:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 338,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4109:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4109:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 342,
															"nodeType": "ExpressionStatement",
															"src": "4109:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3466:285:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3765:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3785:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3778:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 302,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 301,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3778:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3778:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3800:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3792:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3817:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3809:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:46:2"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3833:0:2"
									},
									"scope": 489,
									"src": "3756:410:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "4533:257:2",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4551:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "4543:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4578:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 369,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4565:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "4565:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4565:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4607:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4614:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "4623:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 380,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "4630:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "4640:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 382,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4643:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 383,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "4646:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4594:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "4594:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4594:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4594:54:2"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4666:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "4658:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"arguments": [
														{
															"id": 390,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4692:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 388,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4679:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "4679:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4679:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4658:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "4716:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 395,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "4730:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4744:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4730:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4716:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4747:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4708:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "4708:75:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "4172:141:2",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4327:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4360:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4347:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 348,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "4347:12:2"
													},
													"referencedDeclaration": 113,
													"src": "4347:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4383:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4375:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4406:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4431:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4423:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4454:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4446:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4478:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4472:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 359,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4472:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4516:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4508:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4337:186:2"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4533:0:2"
									},
									"scope": 489,
									"src": "4318:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "5243:572:2",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5605:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 439,
														"src": "5592:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 412,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5592:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"arguments": [
														{
															"id": 419,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "5646:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5652:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 416,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "5626:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5618:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5618:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5618:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 579,
														"src": "5618:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5592:95:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 424,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "5705:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5705:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5726:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5705:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 430,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "5742:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5755:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 431,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5755:4:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5754:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 428,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5731:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5731:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5731:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5705:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5763:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5697:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5697:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "5697:111:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "4796:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5182:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5209:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "5202:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5202:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5202:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5229:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "5216:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5216:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:33:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5243:0:2"
									},
									"scope": 489,
									"src": "5173:642:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "6405:505:2",
										"statements": [
											{
												"assignments": [
													452,
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6706:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "6701:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 451,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6701:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6728:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "6715:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 453,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6715:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [
														{
															"id": 460,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "6762:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 457,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "6750:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6742:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 455,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6742:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6742:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6742:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6700:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 463,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "6796:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 464,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 454,
																				"src": "6808:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6808:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6829:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6808:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 470,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 454,
																				"src": "6845:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6858:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 471,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6858:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 473,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6857:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 468,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6834:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6834:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6834:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6808:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 476,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6807:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6796:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 482,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "6896:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6888:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 480,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6888:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6888:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 478,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "6869:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$819_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 507,
															"src": "6869:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6869:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6796:107:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 486,
												"nodeType": "Return",
												"src": "6777:126:2"
											}
										]
									},
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "5821:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6325:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6356:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6349:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 443,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 442,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "6349:6:2"
													},
													"referencedDeclaration": 77,
													"src": "6349:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6376:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6363:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6363:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:33:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6399:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:2"
									},
									"scope": 489,
									"src": "6316:594:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 490,
							"src": "701:6211:2",
							"usedErrors": []
						}
					],
					"src": "115:6798:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 492,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1478:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 500,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "1702:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "1695:30:3"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1432:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1472:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:3"
									},
									"scope": 819,
									"src": "1412:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "2718:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 518,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$819",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$819",
																				"typeString": "library Address"
																			}
																		],
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 516,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 521,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2761:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:3"
											},
											{
												"assignments": [
													527,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "2813:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 526,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 534,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 528,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "2831:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 530,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2853:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2882:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:3"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2666:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2693:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:3"
									},
									"scope": 819,
									"src": "2647:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "3790:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3829:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3837:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 551,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															643
														],
														"referencedDeclaration": 643,
														"src": "3807:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 550,
												"id": 557,
												"nodeType": "Return",
												"src": "3800:79:3"
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3723:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3739:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:3"
									},
									"scope": 819,
									"src": "3701:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "4255:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4294:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4302:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 575,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4311:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 571,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															643
														],
														"referencedDeclaration": 643,
														"src": "4272:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 570,
												"id": 577,
												"nodeType": "Return",
												"src": "4265:59:3"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4139:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4163:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4190:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 565,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4241:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:3"
									},
									"scope": 819,
									"src": "4108:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "4806:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4845:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "4853:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 594,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4859:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 591,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															599,
															643
														],
														"referencedDeclaration": 643,
														"src": "4823:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 590,
												"id": 597,
												"nodeType": "Return",
												"src": "4816:94:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4724:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4740:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4759:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "4792:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:3"
									},
									"scope": 819,
									"src": "4693:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "5344:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 616,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$819",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$819",
																				"typeString": "library Address"
																			}
																		],
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 614,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 619,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "5387:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:3"
											},
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 642,
														"src": "5446:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 642,
														"src": "5460:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [
														{
															"id": 632,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5513:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 628,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "5487:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "5506:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "5562:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "5570:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 638,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "5579:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 639,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5591:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 635,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "5535:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 612,
												"id": 641,
												"nodeType": "Return",
												"src": "5528:76:3"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5205:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5229:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5256:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5279:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:3"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "5330:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:3"
									},
									"scope": 819,
									"src": "5165:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "5888:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "5924:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5932:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 653,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															660,
															689
														],
														"referencedDeclaration": 689,
														"src": "5905:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 652,
												"id": 658,
												"nodeType": "Return",
												"src": "5898:80:3"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5816:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5832:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5874:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:3"
									},
									"scope": 819,
									"src": "5788:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "6327:168:3",
										"statements": [
											{
												"assignments": [
													673,
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "6338:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 672,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "6352:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 674,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 680,
												"initialValue": {
													"arguments": [
														{
															"id": 678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "6397:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 676,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6379:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6446:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "6454:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 684,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "6463:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 685,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6475:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 681,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "6419:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 671,
												"id": 687,
												"nodeType": "Return",
												"src": "6412:76:3"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6206:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6230:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6257:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "6313:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:3"
									},
									"scope": 819,
									"src": "6169:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6771:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "6809:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "6817:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 699,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															706,
															735
														],
														"referencedDeclaration": 735,
														"src": "6788:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 698,
												"id": 704,
												"nodeType": "Return",
												"src": "6781:84:3"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6704:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6720:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:3"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6757:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:3"
									},
									"scope": 819,
									"src": "6674:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "7213:170:3",
										"statements": [
											{
												"assignments": [
													719,
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "7224:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 718,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "7238:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 720,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 726,
												"initialValue": {
													"arguments": [
														{
															"id": 724,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "7285:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 722,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7265:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7334:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7342:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 730,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "7351:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 731,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "7363:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 727,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "7307:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 717,
												"id": 733,
												"nodeType": "Return",
												"src": "7300:76:3"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7121:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7148:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "7199:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:3"
									},
									"scope": 819,
									"src": "7058:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "7865:434:3",
										"statements": [
											{
												"condition": {
													"id": 749,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "7879:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 771,
													"nodeType": "Block",
													"src": "8235:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 767,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "8257:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 768,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "8269:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 766,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "8249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 770,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:3"
														}
													]
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "7875:418:3",
												"trueBody": {
													"id": 765,
													"nodeType": "Block",
													"src": "7888:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 750,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "7906:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 762,
															"nodeType": "IfStatement",
															"src": "7902:286:3",
															"trueBody": {
																"id": 761,
																"nodeType": "Block",
																"src": "7930:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 756,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 738,
																							"src": "8132:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 755,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 507,
																						"src": "8121:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 758,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 754,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 760,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 763,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "8208:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 748,
															"id": 764,
															"nodeType": "Return",
															"src": "8201:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7716:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7740:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7762:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7795:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:3"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7851:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:3"
									},
									"scope": 819,
									"src": "7671:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "8680:135:3",
										"statements": [
											{
												"condition": {
													"id": 786,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "8694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "8751:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 791,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "8773:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 792,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "8785:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 790,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "8765:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 794,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:3"
														}
													]
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "8690:119:3",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "8703:42:3",
													"statements": [
														{
															"expression": {
																"id": 787,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "8724:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 785,
															"id": 788,
															"nodeType": "Return",
															"src": "8717:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8555:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8577:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8666:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:3"
									},
									"scope": 819,
									"src": "8520:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "8904:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 805,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "8980:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 815,
													"nodeType": "Block",
													"src": "9310:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 812,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "9331:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 811,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 814,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:3"
														}
													]
												},
												"id": 816,
												"nodeType": "IfStatement",
												"src": "8976:379:3",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "9003:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 800,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 800,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:3",
																	"valueSize": 1
																}
															],
															"id": 809,
															"nodeType": "InlineAssembly",
															"src": "9152:142:3"
														}
													]
												}
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "8838:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "8863:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:3"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:3"
									},
									"scope": 819,
									"src": "8821:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 820,
							"src": "194:9169:3",
							"usedErrors": []
						}
					],
					"src": "101:9263:3"
				},
				"id": 3
			},
			"solidity-examples-main/contracts/Multistake/PolygonHub.sol": {
				"ast": {
					"absolutePath": "solidity-examples-main/contracts/Multistake/PolygonHub.sol",
					"exportedSymbols": {
						"Address": [
							819
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IRegistry": [
							989
						],
						"IStargateReceiver": [
							1007
						],
						"IStargateRouter": [
							1127
						],
						"IStargateWidget": [
							1193
						],
						"PolygonHub": [
							979
						],
						"SafeERC20": [
							489
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"id": 822,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "60:19:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 490,
							"src": "83:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 78,
							"src": "150:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateRouter.sol",
							"file": "../interfaces/IStargateRouter.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1128,
							"src": "208:43:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateReceiver.sol",
							"file": "../interfaces/IStargateReceiver.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1008,
							"src": "253:45:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateWidget.sol",
							"file": "../interfaces/IStargateWidget.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 1194,
							"src": "300:43:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol",
							"file": "./interfaces/IRegistry.sol",
							"id": 828,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 980,
							"sourceUnit": 990,
							"src": "347:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 829,
										"name": "IStargateReceiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1007,
										"src": "412:17:4"
									},
									"id": 830,
									"nodeType": "InheritanceSpecifier",
									"src": "412:17:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979,
								1007
							],
							"name": "PolygonHub",
							"nameLocation": "398:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 834,
									"libraryName": {
										"id": 831,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 489,
										"src": "443:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "437:27:4",
									"typeName": {
										"id": 833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 832,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "457:6:4"
										},
										"referencedDeclaration": 77,
										"src": "457:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a9e56f3c",
									"id": 836,
									"mutability": "mutable",
									"name": "stargateRouter",
									"nameLocation": "487:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "472:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 835,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd1bc08e",
									"id": 838,
									"mutability": "mutable",
									"name": "widgetSwap",
									"nameLocation": "559:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "544:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "544:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aa37db6c",
									"id": 840,
									"mutability": "mutable",
									"name": "partnerId",
									"nameLocation": "590:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "576:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes2",
										"typeString": "bytes2"
									},
									"typeName": {
										"id": 839,
										"name": "bytes2",
										"nodeType": "ElementaryTypeName",
										"src": "576:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes2",
											"typeString": "bytes2"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 843,
									"mutability": "mutable",
									"name": "GoerliId",
									"nameLocation": "694:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "687:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 841,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "687:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130313231",
										"id": 842,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "705:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10121_by_1",
											"typeString": "int_const 10121"
										},
										"value": "10121"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 846,
									"mutability": "mutable",
									"name": "FujiId",
									"nameLocation": "724:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "717:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 844,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "717:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130313036",
										"id": 845,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "733:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10106_by_1",
											"typeString": "int_const 10106"
										},
										"value": "10106"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 849,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "755:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "747:57:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 847,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "747:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307844663033363041643843356363663235303935416139376565354632373835633864383438363230",
										"id": 848,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "762:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xDf0360Ad8C5ccf25095Aa97ee5F2785c8d848620"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 851,
									"mutability": "mutable",
									"name": "destinationAddress",
									"nameLocation": "821:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "813:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 850,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "813:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 853,
									"mutability": "mutable",
									"name": "registryAddress",
									"nameLocation": "856:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 979,
									"src": "848:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 852,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "848:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 859,
									"name": "ReceivedOnDestination",
									"nameLocation": "886:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "916:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "908:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"indexed": false,
												"mutability": "mutable",
												"name": "qty",
												"nameLocation": "928:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "923:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "923:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:25:4"
									},
									"src": "880:53:4"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "1033:149:4",
										"statements": [
											{
												"expression": {
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 868,
														"name": "stargateRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1044:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 869,
														"name": "_stargateRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "1061:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1044:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "1044:32:4"
											},
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 872,
														"name": "destinationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1087:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 873,
														"name": "_destinationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1108:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1087:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "1087:40:4"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "registryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "1138:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 877,
														"name": "_registryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "1156:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1138:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "1138:34:4"
											}
										]
									},
									"id": 881,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "_stargateRouter",
												"nameLocation": "961:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "953:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "_destinationAddress",
												"nameLocation": "986:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "978:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "_registryAddress",
												"nameLocation": "1015:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1007:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:80:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:0:4"
									},
									"scope": 979,
									"src": "941:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1364:1473:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 889,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1383:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1383:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1395:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1383:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73746172676174652072657175697265732061206d73672e76616c756520746f207061792063726f7373636861696e206d657373616765",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1398:57:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317",
																"typeString": "literal_string \"stargate requires a msg.value to pay crosschain message\""
															},
															"value": "stargate requires a msg.value to pay crosschain message"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ff61dc1d28ff438a1b89a01775e6243e57e9e6ee88129bc640a12a195022317",
																"typeString": "literal_string \"stargate requires a msg.value to pay crosschain message\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1375:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "1375:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 900,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1680:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1680:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 904,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1700:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolygonHub_$979",
																		"typeString": "contract PolygonHub"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolygonHub_$979",
																		"typeString": "contract PolygonHub"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1692:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1692:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1692:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "1707:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 897,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "1657:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 896,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1650:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1650:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 173,
														"src": "1650:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "1650:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 915,
																	"name": "stargateRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "1758:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1750:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 913,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1750:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1750:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "1775:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 910,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "1732:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 909,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1725:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1725:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 217,
														"src": "1725:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "1725:57:4"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "polygonId",
														"nameLocation": "1802:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "1795:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 920,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "1795:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 926,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1855:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "1855:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 923,
																	"name": "registryAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "1824:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 922,
																"name": "IRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "1814:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRegistry_$989_$",
																	"typeString": "type(contract IRegistry)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1814:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRegistry_$989",
																"typeString": "contract IRegistry"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getStargateId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 988,
														"src": "1814:40:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint16_$",
															"typeString": "function (uint256) view external returns (uint16)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1814:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1795:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 937,
															"name": "FujiId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1962:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "31",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "31",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2139:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 942,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2242:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2242:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2234:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2234:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2234:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2365:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2475:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [
																{
																	"hexValue": "323030303030",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2599:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_200000_by_1",
																		"typeString": "int_const 200000"
																	},
																	"value": "200000"
																},
																{
																	"hexValue": "30",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2607:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "3078",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2610:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																		"typeString": "literal_string \"0x\""
																	},
																	"value": "0x"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_200000_by_1",
																		"typeString": "int_const 200000"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																		"typeString": "literal_string \"0x\""
																	}
																],
																"expression": {
																	"id": 947,
																	"name": "IStargateRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "2575:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IStargateRouter_$1127_$",
																		"typeString": "type(contract IStargateRouter)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lzTxObj",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1017,
																"src": "2575:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_lzTxObj_$1017_storage_ptr_$",
																	"typeString": "type(struct IStargateRouter.lzTxObj storage pointer)"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
																"typeString": "struct IStargateRouter.lzTxObj memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 955,
																	"name": "destinationAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "2673:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 953,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2656:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2656:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2656:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 957,
															"name": "someMsg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2768:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
																"typeString": "struct IStargateRouter.lzTxObj memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
																	"typeString": "struct IStargateRouter.lzTxObj memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 931,
																		"name": "stargateRouter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "1910:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 930,
																	"name": "IStargateRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "1894:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IStargateRouter_$1127_$",
																		"typeString": "type(contract IStargateRouter)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1894:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IStargateRouter_$1127",
																	"typeString": "contract IStargateRouter"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "swap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1048,
															"src": "1894:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_uint256_$_t_uint256_$_t_struct$_lzTxObj_$1017_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																"typeString": "function (uint16,uint256,uint256,address payable,uint256,uint256,struct IStargateRouter.lzTxObj memory,bytes memory,bytes memory) payable external"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 934,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1937:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1937:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1894:53:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_uint256_$_t_uint256_$_t_struct$_lzTxObj_$1017_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$value",
															"typeString": "function (uint16,uint256,uint256,address payable,uint256,uint256,struct IStargateRouter.lzTxObj memory,bytes memory,bytes memory) payable external"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1894:935:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "1894:935:4"
											}
										]
									},
									"functionSelector": "3576ca46",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeAndSwap",
									"nameLocation": "1294:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "someMsg",
												"nameLocation": "1339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1324:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1324:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:40:4"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:4"
									},
									"scope": 979,
									"src": "1285:1552:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1006
									],
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "3346:347:4",
										"statements": []
									},
									"functionSelector": "ab8236f3",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sgReceive",
									"nameLocation": "3196:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 975,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3328:8:4"
									},
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3206:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 962,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3206:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3227:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3282:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3274:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "amountLD",
												"nameLocation": "3295:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3290:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3290:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "_payload",
												"nameLocation": "3318:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3305:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3305:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:122:4"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3346:0:4"
									},
									"scope": 979,
									"src": "3187:506:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 980,
							"src": "389:3309:4",
							"usedErrors": []
						}
					],
					"src": "35:3663:4"
				},
				"id": 4
			},
			"solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol": {
				"ast": {
					"absolutePath": "solidity-examples-main/contracts/Multistake/interfaces/IRegistry.sol",
					"exportedSymbols": {
						"IRegistry": [
							989
						]
					},
					"id": 990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 989,
							"linearizedBaseContracts": [
								989
							],
							"name": "IRegistry",
							"nameLocation": "70:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "977f2cb9",
									"id": 988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStargateId",
									"nameLocation": "96:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "118:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "110:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:17:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "150:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 985,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "150:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:8:5"
									},
									"scope": 989,
									"src": "87:71:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 990,
							"src": "60:101:5",
							"usedErrors": []
						}
					],
					"src": "33:130:5"
				},
				"id": 5
			},
			"solidity-examples-main/contracts/interfaces/IStargateReceiver.sol": {
				"ast": {
					"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateReceiver.sol",
					"exportedSymbols": {
						"IStargateReceiver": [
							1007
						]
					},
					"id": 1008,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1007,
							"linearizedBaseContracts": [
								1007
							],
							"name": "IStargateReceiver",
							"nameLocation": "68:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ab8236f3",
									"id": 1006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sgReceive",
									"nameLocation": "101:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "_chainId",
												"nameLocation": "127:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 992,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "120:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "_srcAddress",
												"nameLocation": "158:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "145:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "145:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "187:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "179:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "211:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "203:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "amountLD",
												"nameLocation": "235:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "227:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "266:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "253:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "253:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "110:169:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:6"
									},
									"scope": 1007,
									"src": "92:197:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1008,
							"src": "58:233:6",
							"usedErrors": []
						}
					],
					"src": "33:259:6"
				},
				"id": 6
			},
			"solidity-examples-main/contracts/interfaces/IStargateRouter.sol": {
				"ast": {
					"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateRouter.sol",
					"exportedSymbols": {
						"IStargateRouter": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1009,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"id": 1010,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "IStargateRouter",
							"nameLocation": "88:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IStargateRouter.lzTxObj",
									"id": 1017,
									"members": [
										{
											"constant": false,
											"id": 1012,
											"mutability": "mutable",
											"name": "dstGasForCall",
											"nameLocation": "143:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "135:21:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "135:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1014,
											"mutability": "mutable",
											"name": "dstNativeAmount",
											"nameLocation": "174:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "166:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "166:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1016,
											"mutability": "mutable",
											"name": "dstNativeAddr",
											"nameLocation": "205:13:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "199:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1015,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "199:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "lzTxObj",
									"nameLocation": "117:7:7",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "110:115:7",
									"visibility": "public"
								},
								{
									"functionSelector": "87b21efc",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "240:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "270:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "262:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "_amountLD",
												"nameLocation": "295:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "287:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "322:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "314:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:79:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:0:7"
									},
									"scope": 1127,
									"src": "231:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9fbf10fc",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "356:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "377:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "370:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1027,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "370:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "_srcPoolId",
												"nameLocation": "406:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "398:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_dstPoolId",
												"nameLocation": "434:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "426:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_refundAddress",
												"nameLocation": "470:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "454:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_amountLD",
												"nameLocation": "502:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_minAmountLD",
												"nameLocation": "529:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "521:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "_lzTxParams",
												"nameLocation": "566:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "551:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
													"typeString": "struct IStargateRouter.lzTxObj"
												},
												"typeName": {
													"id": 1040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1039,
														"name": "lzTxObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "551:7:7"
													},
													"referencedDeclaration": 1017,
													"src": "551:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_lzTxObj_$1017_storage_ptr",
														"typeString": "struct IStargateRouter.lzTxObj"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "602:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "587:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "_payload",
												"nameLocation": "630:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "615:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "615:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:284:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:0:7"
									},
									"scope": 1127,
									"src": "347:315:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84d0dba3",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemRemote",
									"nameLocation": "677:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "706:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "699:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1049,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "699:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "_srcPoolId",
												"nameLocation": "735:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "727:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "_dstPoolId",
												"nameLocation": "763:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "755:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "_refundAddress",
												"nameLocation": "799:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "783:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "_amountLP",
												"nameLocation": "831:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "823:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "_minAmountLD",
												"nameLocation": "858:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "850:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "895:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "880:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "880:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_lzTxParams",
												"nameLocation": "923:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "908:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
													"typeString": "struct IStargateRouter.lzTxObj"
												},
												"typeName": {
													"id": 1064,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1063,
														"name": "lzTxObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "908:7:7"
													},
													"referencedDeclaration": 1017,
													"src": "908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_lzTxObj_$1017_storage_ptr",
														"typeString": "struct IStargateRouter.lzTxObj"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:251:7"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:0:7"
									},
									"scope": 1127,
									"src": "668:290:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4de93a5",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "instantRedeemLocal",
									"nameLocation": "973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "_srcPoolId",
												"nameLocation": "1008:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1001:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1069,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_amountLP",
												"nameLocation": "1036:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1028:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1063:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1055:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:81:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1091:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:9:7"
									},
									"scope": 1127,
									"src": "964:136:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f2e1d18",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemLocal",
									"nameLocation": "1115:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "1143:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1136:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1080,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1136:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "_srcPoolId",
												"nameLocation": "1172:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1164:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_dstPoolId",
												"nameLocation": "1200:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1192:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_refundAddress",
												"nameLocation": "1236:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1220:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_amountLP",
												"nameLocation": "1268:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1260:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1302:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1287:18:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1287:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_lzTxParams",
												"nameLocation": "1330:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1315:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
													"typeString": "struct IStargateRouter.lzTxObj"
												},
												"typeName": {
													"id": 1093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1092,
														"name": "lzTxObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "1315:7:7"
													},
													"referencedDeclaration": 1017,
													"src": "1315:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_lzTxObj_$1017_storage_ptr",
														"typeString": "struct IStargateRouter.lzTxObj"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:221:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:7"
									},
									"scope": 1127,
									"src": "1106:259:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9ba3aa74",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendCredits",
									"nameLocation": "1380:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "1408:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1401:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1098,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1401:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "_srcPoolId",
												"nameLocation": "1437:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1429:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_dstPoolId",
												"nameLocation": "1465:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1457:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_refundAddress",
												"nameLocation": "1501:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1485:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1485:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:130:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1538:0:7"
									},
									"scope": 1127,
									"src": "1371:168:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a512369",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteLayerZeroFee",
									"nameLocation": "1554:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "1588:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1581:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1109,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1581:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_functionType",
												"nameLocation": "1615:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1609:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1111,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1609:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "_toAddress",
												"nameLocation": "1653:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1638:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1638:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "_transferAndCallPayload",
												"nameLocation": "1688:23:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1673:38:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "_lzTxParams",
												"nameLocation": "1736:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1721:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_lzTxObj_$1017_memory_ptr",
													"typeString": "struct IStargateRouter.lzTxObj"
												},
												"typeName": {
													"id": 1118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1117,
														"name": "lzTxObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "1721:7:7"
													},
													"referencedDeclaration": 1017,
													"src": "1721:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_lzTxObj_$1017_storage_ptr",
														"typeString": "struct IStargateRouter.lzTxObj"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:182:7"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1777:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1777:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1786:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1776:18:7"
									},
									"scope": 1127,
									"src": "1545:250:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1128,
							"src": "78:1719:7",
							"usedErrors": []
						}
					],
					"src": "33:1765:7"
				},
				"id": 7
			},
			"solidity-examples-main/contracts/interfaces/IStargateWidget.sol": {
				"ast": {
					"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateWidget.sol",
					"exportedSymbols": {
						"IStargateRouter": [
							1127
						],
						"IStargateWidget": [
							1193
						]
					},
					"id": 1194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"id": 1130,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:8"
						},
						{
							"absolutePath": "solidity-examples-main/contracts/interfaces/IStargateRouter.sol",
							"file": "../interfaces/IStargateRouter.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 1128,
							"src": "78:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1193,
							"linearizedBaseContracts": [
								1193
							],
							"name": "IStargateWidget",
							"nameLocation": "133:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IStargateWidget.FeeObj",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "tenthBps",
											"nameLocation": "187:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "179:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "179:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "249:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "241:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1134,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "241:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeObj",
									"nameLocation": "162:6:8",
									"nodeType": "StructDefinition",
									"scope": 1193,
									"src": "155:113:8",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1144,
									"name": "WidgetSwapped",
									"nameLocation": "280:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"indexed": true,
												"mutability": "mutable",
												"name": "partnerId",
												"nameLocation": "309:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "294:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"mutability": "mutable",
												"name": "tenthBps",
												"nameLocation": "328:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "320:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"indexed": false,
												"mutability": "mutable",
												"name": "widgetFee",
												"nameLocation": "346:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "338:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:63:8"
									},
									"src": "274:83:8"
								},
								{
									"anonymous": false,
									"id": 1148,
									"name": "PartnerSwap",
									"nameLocation": "368:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "partnerId",
												"nameLocation": "395:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "380:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:26:8"
									},
									"src": "362:44:8"
								},
								{
									"functionSelector": "a87376e9",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "partnerSwap",
									"nameLocation": "421:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "_partnerId",
												"nameLocation": "440:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "433:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 1149,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "433:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:19:8"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:0:8"
									},
									"scope": 1193,
									"src": "412:49:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d62fc1a",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nameLocation": "476:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "503:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "496:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1154,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "_srcPoolId",
												"nameLocation": "531:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "524:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1156,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_dstPoolId",
												"nameLocation": "558:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "551:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1158,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "551:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "_amountLD",
												"nameLocation": "586:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "578:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_minAmountLD",
												"nameLocation": "613:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "605:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_lzTxParams",
												"nameLocation": "668:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "635:44:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_lzTxObj_$1017_calldata_ptr",
													"typeString": "struct IStargateRouter.lzTxObj"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "IStargateRouter.lzTxObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "635:23:8"
													},
													"referencedDeclaration": 1017,
													"src": "635:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_lzTxObj_$1017_storage_ptr",
														"typeString": "struct IStargateRouter.lzTxObj"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "704:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "689:18:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "689:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_partnerId",
												"nameLocation": "724:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "717:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "717:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_feeObj",
												"nameLocation": "760:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "744:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeObj_$1136_calldata_ptr",
													"typeString": "struct IStargateWidget.FeeObj"
												},
												"typeName": {
													"id": 1172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1171,
														"name": "FeeObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1136,
														"src": "744:6:8"
													},
													"referencedDeclaration": 1136,
													"src": "744:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeObj_$1136_storage_ptr",
														"typeString": "struct IStargateWidget.FeeObj"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:287:8"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:0:8"
									},
									"scope": 1193,
									"src": "467:324:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "919d7637",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETH",
									"nameLocation": "807:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_dstChainId",
												"nameLocation": "831:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "824:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1177,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "_amountLD",
												"nameLocation": "860:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "852:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_minAmountLD",
												"nameLocation": "887:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "879:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "924:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "909:18:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "909:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_partnerId",
												"nameLocation": "944:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "937:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes2",
													"nodeType": "ElementaryTypeName",
													"src": "937:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes2",
														"typeString": "bytes2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "_feeObj",
												"nameLocation": "980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "964:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeObj_$1136_calldata_ptr",
													"typeString": "struct IStargateWidget.FeeObj"
												},
												"typeName": {
													"id": 1188,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1187,
														"name": "FeeObj",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1136,
														"src": "964:6:8"
													},
													"referencedDeclaration": 1136,
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeObj_$1136_storage_ptr",
														"typeString": "struct IStargateWidget.FeeObj"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:179:8"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:0:8"
									},
									"scope": 1193,
									"src": "798:213:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1194,
							"src": "123:890:8",
							"usedErrors": []
						}
					],
					"src": "33:981:8"
				},
				"id": 8
			}
		}
	}
}